/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ff="169",vn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ho={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},XS=0,mg=1,qS=2,BA=3,OA=0,by=1,YS=2,Qn=3,$s=0,qi=1,ts=2,rs=0,go=1,gg=2,yg=3,xg=4,ZS=5,Sr=100,KS=101,jS=102,JS=103,QS=104,eb=200,tb=201,ib=202,nb=203,sd=204,rd=205,sb=206,rb=207,ob=208,ab=209,lb=210,cb=211,hb=212,ub=213,db=214,od=0,ad=1,ld=2,To=3,cd=4,hd=5,ud=6,dd=7,kc=0,fb=1,pb=2,ks=0,mb=1,gb=2,yb=3,xb=4,_b=5,vb=6,Sb=7,_g="attached",bb="detached",pf=300,Xs=301,Er=302,cc=303,hc=304,sl=306,uc=1e3,Cn=1001,dc=1002,pi=1003,My=1004,zA=1004,Ca=1005,kA=1005,ni=1006,Yl=1007,GA=1007,ns=1008,VA=1008,cs=1009,Ty=1010,wy=1011,Za=1012,mf=1013,qs=1014,en=1015,Do=1016,gf=1017,yf=1018,wo=1020,Ay=35902,Ey=1021,Ry=1022,Xi=1023,Cy=1024,Ny=1025,yo=1026,Ao=1027,xf=1028,Gc=1029,Py=1030,_f=1031,HA=1032,vf=1033,Zl=33776,Kl=33777,jl=33778,Jl=33779,fd=35840,pd=35841,md=35842,gd=35843,yd=36196,xd=37492,_d=37496,vd=37808,Sd=37809,bd=37810,Md=37811,Td=37812,wd=37813,Ad=37814,Ed=37815,Rd=37816,Cd=37817,Nd=37818,Pd=37819,Id=37820,Ld=37821,Ql=36492,Dd=36494,Ud=36495,Iy=36283,Fd=36284,Bd=36285,Od=36286,Mb=2200,Tb=2201,wb=2202,fc=2300,zd=2301,Wu=2302,uo=2400,fo=2401,pc=2402,Sf=2500,Ly=2501,Ab=0,Eb=1,vg=2,Rb=3200,Cb=3201,WA=3202,$A=3203,Dr=0,Nb=1,Ls="",En="srgb",js="srgb-linear",bf="display-p3",Vc="display-p3-linear",mc="linear",Dt="srgb",gc="rec709",yc="p3",XA=0,no=7680,qA=7681,YA=7682,ZA=7683,KA=34055,jA=34056,JA=5386,QA=512,e1=513,t1=514,i1=515,n1=516,s1=517,r1=518,Sg=519,Pb=512,Ib=513,Lb=514,Dy=515,Db=516,Ub=517,Fb=518,Bb=519,xc=35044,o1=35048,a1=35040,l1=35045,c1=35049,h1=35041,u1=35046,d1=35050,f1=35042,p1="100",bg="300 es",ss=2e3,_c=2001;let fs=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const n=this._listeners[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,r=n.length;s<r;s++)n[s].call(this,e);e.target=null}}};const Ci=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let h0=1234567;const xo=Math.PI/180,Ka=180/Math.PI;function Sn(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Ci[o&255]+Ci[o>>8&255]+Ci[o>>16&255]+Ci[o>>24&255]+"-"+Ci[e&255]+Ci[e>>8&255]+"-"+Ci[e>>16&15|64]+Ci[e>>24&255]+"-"+Ci[t&63|128]+Ci[t>>8&255]+"-"+Ci[t>>16&255]+Ci[t>>24&255]+Ci[i&255]+Ci[i>>8&255]+Ci[i>>16&255]+Ci[i>>24&255]).toLowerCase()}function $t(o,e,t){return Math.max(e,Math.min(t,o))}function Uy(o,e){return(o%e+e)%e}function m1(o,e,t,i,n){return i+(o-e)*(n-i)/(t-e)}function g1(o,e,t){return o!==e?(t-o)/(e-o):0}function ec(o,e,t){return(1-t)*o+t*e}function y1(o,e,t,i){return ec(o,e,1-Math.exp(-t*i))}function x1(o,e=1){return e-Math.abs(Uy(o,e*2)-e)}function _1(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*(3-2*o))}function v1(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*o*(o*(o*6-15)+10))}function S1(o,e){return o+Math.floor(Math.random()*(e-o+1))}function b1(o,e){return o+Math.random()*(e-o)}function M1(o){return o*(.5-Math.random())}function T1(o){o!==void 0&&(h0=o);let e=h0+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function w1(o){return o*xo}function A1(o){return o*Ka}function E1(o){return(o&o-1)===0&&o!==0}function R1(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function C1(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}function N1(o,e,t,i,n){const s=Math.cos,r=Math.sin,a=s(t/2),l=r(t/2),c=s((e+i)/2),h=r((e+i)/2),u=s((e-i)/2),d=r((e-i)/2),f=s((i-e)/2),p=r((i-e)/2);switch(n){case"XYX":o.set(a*h,l*u,l*d,a*c);break;case"YZY":o.set(l*d,a*h,l*u,a*c);break;case"ZXZ":o.set(l*u,l*d,a*h,a*c);break;case"XZX":o.set(a*h,l*p,l*f,a*c);break;case"YXY":o.set(l*f,a*h,l*p,a*c);break;case"ZYZ":o.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function Wi(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return o/4294967295;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int32Array:return Math.max(o/2147483647,-1);case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}function it(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return Math.round(o*4294967295);case Uint16Array:return Math.round(o*65535);case Uint8Array:return Math.round(o*255);case Int32Array:return Math.round(o*2147483647);case Int16Array:return Math.round(o*32767);case Int8Array:return Math.round(o*127);default:throw new Error("Invalid component type.")}}const vc={DEG2RAD:xo,RAD2DEG:Ka,generateUUID:Sn,clamp:$t,euclideanModulo:Uy,mapLinear:m1,inverseLerp:g1,lerp:ec,damp:y1,pingpong:x1,smoothstep:_1,smootherstep:v1,randInt:S1,randFloat:b1,randFloatSpread:M1,seededRandom:T1,degToRad:w1,radToDeg:A1,isPowerOfTwo:E1,ceilPowerOfTwo:R1,floorPowerOfTwo:C1,setQuaternionFromProperEuler:N1,normalize:it,denormalize:Wi};let Y=class Ob{constructor(e=0,t=0){Ob.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos($t(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*i-r*n+e.x,this.y=s*n+r*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},lt=class zb{constructor(e,t,i,n,s,r,a,l,c){zb.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c)}set(e,t,i,n,s,r,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],g=n[0],m=n[3],y=n[6],x=n[1],_=n[4],v=n[7],E=n[2],M=n[5],b=n[8];return s[0]=r*g+a*x+l*E,s[3]=r*m+a*_+l*M,s[6]=r*y+a*v+l*b,s[1]=c*g+h*x+u*E,s[4]=c*m+h*_+u*M,s[7]=c*y+h*v+u*b,s[2]=d*g+f*x+p*E,s[5]=d*m+f*_+p*M,s[8]=d*y+f*v+p*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*r*h-t*a*c-i*s*h+i*a*l+n*s*c-n*r*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*r-a*c,d=a*l-h*s,f=c*s-r*l,p=t*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=u*g,e[1]=(n*c-h*i)*g,e[2]=(a*i-n*r)*g,e[3]=d*g,e[4]=(h*t-n*l)*g,e[5]=(n*s-a*t)*g,e[6]=f*g,e[7]=(i*l-c*t)*g,e[8]=(r*t-i*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,r,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*r+c*a)+r+e,-n*c,n*l,-n*(-c*r+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(gp.makeScale(e,t)),this}rotate(e){return this.premultiply(gp.makeRotation(-e)),this}translate(e,t){return this.premultiply(gp.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const gp=new lt;function kb(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}const P1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Na(o,e){return new P1[o](e)}function Sc(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function Gb(){const o=Sc("canvas");return o.style.display="block",o}const u0={};function $u(o){o in u0||(u0[o]=!0,console.warn(o))}function I1(o,e,t){return new Promise(function(i,n){function s(){switch(o.clientWaitSync(e,o.SYNC_FLUSH_COMMANDS_BIT,0)){case o.WAIT_FAILED:n();break;case o.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}function L1(o){const e=o.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function D1(o){const e=o.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const d0=new lt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),f0=new lt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ml={[js]:{transfer:mc,primaries:gc,luminanceCoefficients:[.2126,.7152,.0722],toReference:o=>o,fromReference:o=>o},[En]:{transfer:Dt,primaries:gc,luminanceCoefficients:[.2126,.7152,.0722],toReference:o=>o.convertSRGBToLinear(),fromReference:o=>o.convertLinearToSRGB()},[Vc]:{transfer:mc,primaries:yc,luminanceCoefficients:[.2289,.6917,.0793],toReference:o=>o.applyMatrix3(f0),fromReference:o=>o.applyMatrix3(d0)},[bf]:{transfer:Dt,primaries:yc,luminanceCoefficients:[.2289,.6917,.0793],toReference:o=>o.convertSRGBToLinear().applyMatrix3(f0),fromReference:o=>o.applyMatrix3(d0).convertLinearToSRGB()}},U1=new Set([js,Vc]),vt={enabled:!0,_workingColorSpace:js,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(o){if(!U1.has(o))throw new Error(`Unsupported working color space, "${o}".`);this._workingColorSpace=o},convert:function(o,e,t){if(this.enabled===!1||e===t||!e||!t)return o;const i=ml[e].toReference,n=ml[t].fromReference;return n(i(o))},fromWorkingColorSpace:function(o,e){return this.convert(o,this._workingColorSpace,e)},toWorkingColorSpace:function(o,e){return this.convert(o,e,this._workingColorSpace)},getPrimaries:function(o){return ml[o].primaries},getTransfer:function(o){return o===Ls?mc:ml[o].transfer},getLuminanceCoefficients:function(o,e=this._workingColorSpace){return o.fromArray(ml[e].luminanceCoefficients)}};function Ga(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function yp(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}let Ho,Vb=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ho===void 0&&(Ho=Sc("canvas")),Ho.width=e.width,Ho.height=e.height;const i=Ho.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Ho}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Sc("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let r=0;r<s.length;r++)s[r]=Ga(s[r]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Ga(t[i]/255)*255):t[i]=Ga(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},F1=0,po=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:F1++}),this.uuid=Sn(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let r=0,a=n.length;r<a;r++)n[r].isDataTexture?s.push(xp(n[r].image)):s.push(xp(n[r]))}else s=xp(n);i.url=s}return t||(e.images[this.uuid]=i),i}};function xp(o){return typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap?Vb.getDataURL(o):o.data?{data:Array.from(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let B1=0,xi=class Xu extends fs{constructor(e=Xu.DEFAULT_IMAGE,t=Xu.DEFAULT_MAPPING,i=Cn,n=Cn,s=ni,r=ns,a=Xi,l=cs,c=Xu.DEFAULT_ANISOTROPY,h=Ls){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:B1++}),this.uuid=Sn(),this.name="",this.source=new po(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=r,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Y(0,0),this.repeat=new Y(1,1),this.center=new Y(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==pf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case uc:e.x=e.x-Math.floor(e.x);break;case Cn:e.x=e.x<0?0:1;break;case dc:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case uc:e.y=e.y-Math.floor(e.y);break;case Cn:e.y=e.y<0?0:1;break;case dc:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};xi.DEFAULT_IMAGE=null;xi.DEFAULT_MAPPING=pf;xi.DEFAULT_ANISOTROPY=1;let dt=class Hb{constructor(e=0,t=0,i=0,n=1){Hb.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n+r[12]*s,this.y=r[1]*t+r[5]*i+r[9]*n+r[13]*s,this.z=r[2]*t+r[6]*i+r[10]*n+r[14]*s,this.w=r[3]*t+r[7]*i+r[11]*n+r[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],g=l[2],m=l[6],y=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,v=(f+1)/2,E=(y+1)/2,M=(h+d)/4,b=(u+g)/4,A=(p+m)/4;return _>v&&_>E?_<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(_),n=M/i,s=b/i):v>E?v<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(v),i=M/n,s=A/n):E<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(E),i=b/s,n=A/s),this.set(i,n,s,t),this}let x=Math.sqrt((m-p)*(m-p)+(u-g)*(u-g)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(u-g)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+y-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},Wb=class extends fs{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new dt(0,0,e,t),this.scissorTest=!1,this.viewport=new dt(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ni,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new xi(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const r=i.count;for(let a=0;a<r;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,n=e.textures.length;i<n;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new po(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},Ln=class extends Wb{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}},Mf=class extends xi{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=pi,this.minFilter=pi,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}};class O1 extends Ln{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new Mf(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Fy extends xi{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=pi,this.minFilter=pi,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class z1 extends Ln{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Fy(null,e,t,i),this.texture.isRenderTargetTexture=!0}}let li=class{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,r,a){let l=i[n+0],c=i[n+1],h=i[n+2],u=i[n+3];const d=s[r+0],f=s[r+1],p=s[r+2],g=s[r+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g;return}if(u!==g||l!==d||c!==f||h!==p){let m=1-a;const y=l*d+c*f+h*p+u*g,x=y>=0?1:-1,_=1-y*y;if(_>Number.EPSILON){const E=Math.sqrt(_),M=Math.atan2(E,y*x);m=Math.sin(m*M)/E,a=Math.sin(a*M)/E}const v=a*x;if(l=l*m+d*v,c=c*m+f*v,h=h*m+p*v,u=u*m+g*v,m===1-a){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,s,r){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],u=s[r],d=s[r+1],f=s[r+2],p=s[r+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,r=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),u=a(s/2),d=l(i/2),f=l(n/2),p=l(s/2);switch(r){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],r=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(r-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(n+r)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-c)/f,this._x=(n+r)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(r-n)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs($t(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,r=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+r*a+n*c-s*l,this._y=n*h+r*l+s*a-i*c,this._z=s*h+r*c+i*l-n*a,this._w=r*h-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,r=this._w;let a=r*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=r*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},R=class $b{constructor(e=0,t=0,i=0){$b.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(p0.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(p0.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,r=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*r,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*r,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*r,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,r=e.y,a=e.z,l=e.w,c=2*(r*n-a*i),h=2*(a*t-s*n),u=2*(s*i-r*t);return this.x=t+l*c+r*u-a*h,this.y=i+l*h+a*c-s*u,this.z=n+l*u+s*h-r*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,r=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*r-i*l,this.z=i*a-n*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return _p.copy(this).projectOnVector(e),this.sub(_p)}reflect(e){return this.sub(_p.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos($t(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const _p=new R,p0=new li;let mi=class{constructor(e=new R(1/0,1/0,1/0),t=new R(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(Un.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(Un.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Un.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,a=s.count;r<a;r++)e.isMesh===!0?e.getVertexPosition(r,Un):Un.fromBufferAttribute(s,r),Un.applyMatrix4(e.matrixWorld),this.expandByPoint(Un);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),dh.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),dh.copy(i.boundingBox)),dh.applyMatrix4(e.matrixWorld),this.union(dh)}const n=e.children;for(let s=0,r=n.length;s<r;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Un),Un.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(gl),fh.subVectors(this.max,gl),Wo.subVectors(e.a,gl),$o.subVectors(e.b,gl),Xo.subVectors(e.c,gl),nr.subVectors($o,Wo),sr.subVectors(Xo,$o),kr.subVectors(Wo,Xo);let t=[0,-nr.z,nr.y,0,-sr.z,sr.y,0,-kr.z,kr.y,nr.z,0,-nr.x,sr.z,0,-sr.x,kr.z,0,-kr.x,-nr.y,nr.x,0,-sr.y,sr.x,0,-kr.y,kr.x,0];return!vp(t,Wo,$o,Xo,fh)||(t=[1,0,0,0,1,0,0,0,1],!vp(t,Wo,$o,Xo,fh))?!1:(ph.crossVectors(nr,sr),t=[ph.x,ph.y,ph.z],vp(t,Wo,$o,Xo,fh))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Un).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Un).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ys[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ys[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ys[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ys[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ys[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ys[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ys[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ys[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ys),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const ys=[new R,new R,new R,new R,new R,new R,new R,new R],Un=new R,dh=new mi,Wo=new R,$o=new R,Xo=new R,nr=new R,sr=new R,kr=new R,gl=new R,fh=new R,ph=new R,Gr=new R;function vp(o,e,t,i,n){for(let s=0,r=o.length-3;s<=r;s+=3){Gr.fromArray(o,s);const a=n.x*Math.abs(Gr.x)+n.y*Math.abs(Gr.y)+n.z*Math.abs(Gr.z),l=e.dot(Gr),c=t.dot(Gr),h=i.dot(Gr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const k1=new mi,yl=new R,Sp=new R;let gi=class{constructor(e=new R,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):k1.setFromPoints(e).getCenter(i);let n=0;for(let s=0,r=e.length;s<r;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;yl.subVectors(e,this.center);const t=yl.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(yl,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Sp.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(yl.copy(e.center).add(Sp)),this.expandByPoint(yl.copy(e.center).sub(Sp))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const xs=new R,bp=new R,mh=new R,rr=new R,Mp=new R,gh=new R,Tp=new R;let Uo=class{constructor(e=new R,t=new R(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,xs)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=xs.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(xs.copy(this.origin).addScaledVector(this.direction,t),xs.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){bp.copy(e).add(t).multiplyScalar(.5),mh.copy(t).sub(e).normalize(),rr.copy(this.origin).sub(bp);const s=e.distanceTo(t)*.5,r=-this.direction.dot(mh),a=rr.dot(this.direction),l=-rr.dot(mh),c=rr.lengthSq(),h=Math.abs(1-r*r);let u,d,f,p;if(h>0)if(u=r*l-a,d=r*a-l,p=s*h,u>=0)if(d>=-p)if(d<=p){const g=1/h;u*=g,d*=g,f=u*(u+r*d+2*a)+d*(r*u+d+2*l)+c}else d=s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-r*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(r*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=r>0?-s:s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(bp).addScaledVector(mh,d),f}intersectSphere(e,t){xs.subVectors(e.center,this.origin);const i=xs.dot(this.direction),n=xs.dot(xs)-i*i,s=e.radius*e.radius;if(n>s)return null;const r=Math.sqrt(s-n),a=i-r,l=i+r;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,r,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),h>=0?(s=(e.min.y-d.y)*h,r=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,r=(e.min.y-d.y)*h),i>r||s>n||((s>i||isNaN(i))&&(i=s),(r<n||isNaN(n))&&(n=r),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,xs)!==null}intersectTriangle(e,t,i,n,s){Mp.subVectors(t,e),gh.subVectors(i,e),Tp.crossVectors(Mp,gh);let r=this.direction.dot(Tp),a;if(r>0){if(n)return null;a=1}else if(r<0)a=-1,r=-r;else return null;rr.subVectors(this.origin,e);const l=a*this.direction.dot(gh.crossVectors(rr,gh));if(l<0)return null;const c=a*this.direction.dot(Mp.cross(rr));if(c<0||l+c>r)return null;const h=-a*rr.dot(Tp);return h<0?null:this.at(h/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},$e=class Mg{constructor(e,t,i,n,s,r,a,l,c,h,u,d,f,p,g,m){Mg.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,g,m)}set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,g,m){const y=this.elements;return y[0]=e,y[4]=t,y[8]=i,y[12]=n,y[1]=s,y[5]=r,y[9]=a,y[13]=l,y[2]=c,y[6]=h,y[10]=u,y[14]=d,y[3]=f,y[7]=p,y[11]=g,y[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Mg().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/qo.setFromMatrixColumn(e,0).length(),s=1/qo.setFromMatrixColumn(e,1).length(),r=1/qo.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*r,t[9]=i[9]*r,t[10]=i[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,r=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const d=r*h,f=r*u,p=a*h,g=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-g*c,t[9]=-a*l,t[2]=g-d*c,t[6]=p+f*c,t[10]=r*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,g=c*u;t[0]=d+g*a,t[4]=p*a-f,t[8]=r*c,t[1]=r*u,t[5]=r*h,t[9]=-a,t[2]=f*a-p,t[6]=g+d*a,t[10]=r*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,g=c*u;t[0]=d-g*a,t[4]=-r*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=r*h,t[9]=g-d*a,t[2]=-r*c,t[6]=a,t[10]=r*l}else if(e.order==="ZYX"){const d=r*h,f=r*u,p=a*h,g=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+g,t[1]=l*u,t[5]=g*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=r*l}else if(e.order==="YZX"){const d=r*l,f=r*c,p=a*l,g=a*c;t[0]=l*h,t[4]=g-d*u,t[8]=p*u+f,t[1]=u,t[5]=r*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-g*u}else if(e.order==="XZY"){const d=r*l,f=r*c,p=a*l,g=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+g,t[5]=r*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=g*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(G1,e,V1)}lookAt(e,t,i){const n=this.elements;return un.subVectors(e,t),un.lengthSq()===0&&(un.z=1),un.normalize(),or.crossVectors(i,un),or.lengthSq()===0&&(Math.abs(i.z)===1?un.x+=1e-4:un.z+=1e-4,un.normalize(),or.crossVectors(i,un)),or.normalize(),yh.crossVectors(un,or),n[0]=or.x,n[4]=yh.x,n[8]=un.x,n[1]=or.y,n[5]=yh.y,n[9]=un.y,n[2]=or.z,n[6]=yh.z,n[10]=un.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],g=i[6],m=i[10],y=i[14],x=i[3],_=i[7],v=i[11],E=i[15],M=n[0],b=n[4],A=n[8],L=n[12],S=n[1],T=n[5],B=n[9],F=n[13],G=n[2],j=n[6],k=n[10],ae=n[14],X=n[3],ce=n[7],ue=n[11],pe=n[15];return s[0]=r*M+a*S+l*G+c*X,s[4]=r*b+a*T+l*j+c*ce,s[8]=r*A+a*B+l*k+c*ue,s[12]=r*L+a*F+l*ae+c*pe,s[1]=h*M+u*S+d*G+f*X,s[5]=h*b+u*T+d*j+f*ce,s[9]=h*A+u*B+d*k+f*ue,s[13]=h*L+u*F+d*ae+f*pe,s[2]=p*M+g*S+m*G+y*X,s[6]=p*b+g*T+m*j+y*ce,s[10]=p*A+g*B+m*k+y*ue,s[14]=p*L+g*F+m*ae+y*pe,s[3]=x*M+_*S+v*G+E*X,s[7]=x*b+_*T+v*j+E*ce,s[11]=x*A+_*B+v*k+E*ue,s[15]=x*L+_*F+v*ae+E*pe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],r=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],g=e[7],m=e[11],y=e[15];return p*(+s*l*u-n*c*u-s*a*d+i*c*d+n*a*f-i*l*f)+g*(+t*l*f-t*c*d+s*r*d-n*r*f+n*c*h-s*l*h)+m*(+t*c*u-t*a*f-s*r*u+i*r*f+s*a*h-i*c*h)+y*(-n*a*h-t*l*u+t*a*d+n*r*u-i*r*d+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],g=e[13],m=e[14],y=e[15],x=u*m*c-g*d*c+g*l*f-a*m*f-u*l*y+a*d*y,_=p*d*c-h*m*c-p*l*f+r*m*f+h*l*y-r*d*y,v=h*g*c-p*u*c+p*a*f-r*g*f-h*a*y+r*u*y,E=p*u*l-h*g*l-p*a*d+r*g*d+h*a*m-r*u*m,M=t*x+i*_+n*v+s*E;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;return e[0]=x*b,e[1]=(g*d*s-u*m*s-g*n*f+i*m*f+u*n*y-i*d*y)*b,e[2]=(a*m*s-g*l*s+g*n*c-i*m*c-a*n*y+i*l*y)*b,e[3]=(u*l*s-a*d*s-u*n*c+i*d*c+a*n*f-i*l*f)*b,e[4]=_*b,e[5]=(h*m*s-p*d*s+p*n*f-t*m*f-h*n*y+t*d*y)*b,e[6]=(p*l*s-r*m*s-p*n*c+t*m*c+r*n*y-t*l*y)*b,e[7]=(r*d*s-h*l*s+h*n*c-t*d*c-r*n*f+t*l*f)*b,e[8]=v*b,e[9]=(p*u*s-h*g*s-p*i*f+t*g*f+h*i*y-t*u*y)*b,e[10]=(r*g*s-p*a*s+p*i*c-t*g*c-r*i*y+t*a*y)*b,e[11]=(h*a*s-r*u*s-h*i*c+t*u*c+r*i*f-t*a*f)*b,e[12]=E*b,e[13]=(h*g*n-p*u*n+p*i*d-t*g*d-h*i*m+t*u*m)*b,e[14]=(p*a*n-r*g*n-p*i*l+t*g*l+r*i*m-t*a*m)*b,e[15]=(r*u*n-h*a*n+h*i*l-t*u*l-r*i*d+t*a*d)*b,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,r=e.x,a=e.y,l=e.z,c=s*r,h=s*a;return this.set(c*r+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*r,0,c*l-n*a,h*l+n*r,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,r){return this.set(1,i,s,0,e,1,r,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,r=t._y,a=t._z,l=t._w,c=s+s,h=r+r,u=a+a,d=s*c,f=s*h,p=s*u,g=r*h,m=r*u,y=a*u,x=l*c,_=l*h,v=l*u,E=i.x,M=i.y,b=i.z;return n[0]=(1-(g+y))*E,n[1]=(f+v)*E,n[2]=(p-_)*E,n[3]=0,n[4]=(f-v)*M,n[5]=(1-(d+y))*M,n[6]=(m+x)*M,n[7]=0,n[8]=(p+_)*b,n[9]=(m-x)*b,n[10]=(1-(d+g))*b,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=qo.set(n[0],n[1],n[2]).length();const r=qo.set(n[4],n[5],n[6]).length(),a=qo.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],Fn.copy(this);const c=1/s,h=1/r,u=1/a;return Fn.elements[0]*=c,Fn.elements[1]*=c,Fn.elements[2]*=c,Fn.elements[4]*=h,Fn.elements[5]*=h,Fn.elements[6]*=h,Fn.elements[8]*=u,Fn.elements[9]*=u,Fn.elements[10]*=u,t.setFromRotationMatrix(Fn),i.x=s,i.y=r,i.z=a,this}makePerspective(e,t,i,n,s,r,a=ss){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n);let f,p;if(a===ss)f=-(r+s)/(r-s),p=-2*r*s/(r-s);else if(a===_c)f=-r/(r-s),p=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,r,a=ss){const l=this.elements,c=1/(t-e),h=1/(i-n),u=1/(r-s),d=(t+e)*c,f=(i+n)*h;let p,g;if(a===ss)p=(r+s)*u,g=-2*u;else if(a===_c)p=s*u,g=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=g,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}};const qo=new R,Fn=new $e,G1=new R(0,0,0),V1=new R(1,1,1),or=new R,yh=new R,un=new R,m0=new $e,g0=new li;let Xn=class Xb{constructor(e=0,t=0,i=0,n=Xb.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],r=n[4],a=n[8],l=n[1],c=n[5],h=n[9],u=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin($t(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-$t(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin($t(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-r,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-$t(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-r,c));break;case"YZX":this._z=Math.asin($t(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-$t(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return m0.makeRotationFromQuaternion(e),this.setFromRotationMatrix(m0,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return g0.setFromEuler(this),this.setFromQuaternion(g0,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Xn.DEFAULT_ORDER="XYZ";let Tf=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},H1=0;const y0=new R,Yo=new li,_s=new $e,xh=new R,xl=new R,W1=new R,$1=new li,x0=new R(1,0,0),_0=new R(0,1,0),v0=new R(0,0,1),S0={type:"added"},X1={type:"removed"},Zo={type:"childadded",child:null},wp={type:"childremoved",child:null};let Rt=class qu extends fs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:H1++}),this.uuid=Sn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=qu.DEFAULT_UP.clone();const e=new R,t=new Xn,i=new li,n=new R(1,1,1);function s(){i.setFromEuler(t,!1)}function r(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new $e},normalMatrix:{value:new lt}}),this.matrix=new $e,this.matrixWorld=new $e,this.matrixAutoUpdate=qu.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=qu.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Tf,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Yo.setFromAxisAngle(e,t),this.quaternion.multiply(Yo),this}rotateOnWorldAxis(e,t){return Yo.setFromAxisAngle(e,t),this.quaternion.premultiply(Yo),this}rotateX(e){return this.rotateOnAxis(x0,e)}rotateY(e){return this.rotateOnAxis(_0,e)}rotateZ(e){return this.rotateOnAxis(v0,e)}translateOnAxis(e,t){return y0.copy(e).applyQuaternion(this.quaternion),this.position.add(y0.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(x0,e)}translateY(e){return this.translateOnAxis(_0,e)}translateZ(e){return this.translateOnAxis(v0,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(_s.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?xh.copy(e):xh.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),xl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_s.lookAt(xl,xh,this.up):_s.lookAt(xh,xl,this.up),this.quaternion.setFromRotationMatrix(_s),n&&(_s.extractRotation(n.matrixWorld),Yo.setFromRotationMatrix(_s),this.quaternion.premultiply(Yo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(S0),Zo.child=e,this.dispatchEvent(Zo),Zo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(X1),wp.child=e,this.dispatchEvent(wp),wp.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),_s.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_s.multiply(e.parent.matrixWorld)),e.applyMatrix4(_s),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(S0),Zo.child=e,this.dispatchEvent(Zo),Zo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const r=this.children[i].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xl,e,W1),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xl,$1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=r(e.geometries),l=r(e.materials),c=r(e.textures),h=r(e.images),u=r(e.shapes),d=r(e.skeletons),f=r(e.animations),p=r(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}};Rt.DEFAULT_UP=new R(0,1,0);Rt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Bn=new R,vs=new R,Ap=new R,Ss=new R,Ko=new R,jo=new R,b0=new R,Ep=new R,Rp=new R,Cp=new R,Np=new dt,Pp=new dt,Ip=new dt;let br=class Ea{constructor(e=new R,t=new R,i=new R){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),Bn.subVectors(e,t),n.cross(Bn);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){Bn.subVectors(n,t),vs.subVectors(i,t),Ap.subVectors(e,t);const r=Bn.dot(Bn),a=Bn.dot(vs),l=Bn.dot(Ap),c=vs.dot(vs),h=vs.dot(Ap),u=r*c-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(r*h-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,Ss)===null?!1:Ss.x>=0&&Ss.y>=0&&Ss.x+Ss.y<=1}static getInterpolation(e,t,i,n,s,r,a,l){return this.getBarycoord(e,t,i,n,Ss)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Ss.x),l.addScaledVector(r,Ss.y),l.addScaledVector(a,Ss.z),l)}static getInterpolatedAttribute(e,t,i,n,s,r){return Np.setScalar(0),Pp.setScalar(0),Ip.setScalar(0),Np.fromBufferAttribute(e,t),Pp.fromBufferAttribute(e,i),Ip.fromBufferAttribute(e,n),r.setScalar(0),r.addScaledVector(Np,s.x),r.addScaledVector(Pp,s.y),r.addScaledVector(Ip,s.z),r}static isFrontFacing(e,t,i,n){return Bn.subVectors(i,t),vs.subVectors(e,t),Bn.cross(vs).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Bn.subVectors(this.c,this.b),vs.subVectors(this.a,this.b),Bn.cross(vs).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ea.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ea.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return Ea.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return Ea.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ea.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let r,a;Ko.subVectors(n,i),jo.subVectors(s,i),Ep.subVectors(e,i);const l=Ko.dot(Ep),c=jo.dot(Ep);if(l<=0&&c<=0)return t.copy(i);Rp.subVectors(e,n);const h=Ko.dot(Rp),u=jo.dot(Rp);if(h>=0&&u<=h)return t.copy(n);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(i).addScaledVector(Ko,r);Cp.subVectors(e,s);const f=Ko.dot(Cp),p=jo.dot(Cp);if(p>=0&&f<=p)return t.copy(s);const g=f*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(jo,a);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return b0.subVectors(s,n),a=(u-h)/(u-h+(f-p)),t.copy(n).addScaledVector(b0,a);const y=1/(m+g+d);return r=g*y,a=d*y,t.copy(i).addScaledVector(Ko,r).addScaledVector(jo,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const qb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ar={h:0,s:0,l:0},_h={h:0,s:0,l:0};function Lp(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+(e-o)*6*t:t<1/2?e:t<2/3?o+(e-o)*6*(2/3-t):o}let Ae=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=En){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,vt.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=vt.workingColorSpace){return this.r=e,this.g=t,this.b=i,vt.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=vt.workingColorSpace){if(e=Uy(e,1),t=$t(t,0,1),i=$t(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,r=2*i-s;this.r=Lp(r,s,e+1/3),this.g=Lp(r,s,e),this.b=Lp(r,s,e-1/3)}return vt.toWorkingColorSpace(this,n),this}setStyle(e,t=En){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=En){const i=qb[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ga(e.r),this.g=Ga(e.g),this.b=Ga(e.b),this}copyLinearToSRGB(e){return this.r=yp(e.r),this.g=yp(e.g),this.b=yp(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=En){return vt.fromWorkingColorSpace(Ni.copy(this),e),Math.round($t(Ni.r*255,0,255))*65536+Math.round($t(Ni.g*255,0,255))*256+Math.round($t(Ni.b*255,0,255))}getHexString(e=En){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=vt.workingColorSpace){vt.fromWorkingColorSpace(Ni.copy(this),t);const i=Ni.r,n=Ni.g,s=Ni.b,r=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const h=(a+r)/2;if(a===r)l=0,c=0;else{const u=r-a;switch(c=h<=.5?u/(r+a):u/(2-r-a),r){case i:l=(n-s)/u+(n<s?6:0);break;case n:l=(s-i)/u+2;break;case s:l=(i-n)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=vt.workingColorSpace){return vt.fromWorkingColorSpace(Ni.copy(this),t),e.r=Ni.r,e.g=Ni.g,e.b=Ni.b,e}getStyle(e=En){vt.fromWorkingColorSpace(Ni.copy(this),e);const t=Ni.r,i=Ni.g,n=Ni.b;return e!==En?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(ar),this.setHSL(ar.h+e,ar.s+t,ar.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(ar),e.getHSL(_h);const i=ec(ar.h,_h.h,t),n=ec(ar.s,_h.s,t),s=ec(ar.l,_h.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const Ni=new Ae;Ae.NAMES=qb;let q1=0,Oi=class extends fs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:q1++}),this.uuid=Sn(),this.name="",this.type="Material",this.blending=go,this.side=$s,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=sd,this.blendDst=rd,this.blendEquation=Sr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ae(0,0,0),this.blendAlpha=0,this.depthFunc=To,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=no,this.stencilZFail=no,this.stencilZPass=no,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==go&&(i.blending=this.blending),this.side!==$s&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==sd&&(i.blendSrc=this.blendSrc),this.blendDst!==rd&&(i.blendDst=this.blendDst),this.blendEquation!==Sr&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==To&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Sg&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==no&&(i.stencilFail=this.stencilFail),this.stencilZFail!==no&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==no&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const r=[];for(const a in s){const l=s[a];delete l.metadata,r.push(l)}return r}if(t){const s=n(e.textures),r=n(e.images);s.length>0&&(i.textures=s),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},Ur=class extends Oi{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Xn,this.combine=kc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Ds=Y1();function Y1(){const o=new ArrayBuffer(4),e=new Float32Array(o),t=new Uint32Array(o),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)r[l]=l<<23;r[31]=1199570944,r[32]=2147483648;for(let l=33;l<63;++l)r[l]=2147483648+(l-32<<23);r[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:r,offsetTable:a}}function Qi(o){Math.abs(o)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),o=$t(o,-65504,65504),Ds.floatView[0]=o;const e=Ds.uint32View[0],t=e>>23&511;return Ds.baseTable[t]+((e&8388607)>>Ds.shiftTable[t])}function Hl(o){const e=o>>10;return Ds.uint32View[0]=Ds.mantissaTable[Ds.offsetTable[e]+(o&1023)]+Ds.exponentTable[e],Ds.floatView[0]}const Z1={toHalfFloat:Qi,fromHalfFloat:Hl},Jt=new R,vh=new Y;let xt=class{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=xc,this.updateRanges=[],this.gpuType=en,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)vh.fromBufferAttribute(this,t),vh.applyMatrix3(e),this.setXY(t,vh.x,vh.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Jt.fromBufferAttribute(this,t),Jt.applyMatrix3(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Jt.fromBufferAttribute(this,t),Jt.applyMatrix4(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Jt.fromBufferAttribute(this,t),Jt.applyNormalMatrix(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Jt.fromBufferAttribute(this,t),Jt.transformDirection(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=Wi(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=it(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Wi(t,this.array)),t}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Wi(t,this.array)),t}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Wi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Wi(t,this.array)),t}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array),s=it(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==xc&&(e.usage=this.usage),e}};class K1 extends xt{constructor(e,t,i){super(new Int8Array(e),t,i)}}class j1 extends xt{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class J1 extends xt{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class Q1 extends xt{constructor(e,t,i){super(new Int16Array(e),t,i)}}let By=class extends xt{constructor(e,t,i){super(new Uint16Array(e),t,i)}};class eE extends xt{constructor(e,t,i){super(new Int32Array(e),t,i)}}let Oy=class extends xt{constructor(e,t,i){super(new Uint32Array(e),t,i)}},tE=class extends xt{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=Hl(this.array[e*this.itemSize]);return this.normalized&&(t=Wi(t,this.array)),t}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize]=Qi(t),this}getY(e){let t=Hl(this.array[e*this.itemSize+1]);return this.normalized&&(t=Wi(t,this.array)),t}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+1]=Qi(t),this}getZ(e){let t=Hl(this.array[e*this.itemSize+2]);return this.normalized&&(t=Wi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+2]=Qi(t),this}getW(e){let t=Hl(this.array[e*this.itemSize+3]);return this.normalized&&(t=Wi(t,this.array)),t}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+3]=Qi(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.array[e+0]=Qi(t),this.array[e+1]=Qi(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array)),this.array[e+0]=Qi(t),this.array[e+1]=Qi(i),this.array[e+2]=Qi(n),this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array),s=it(s,this.array)),this.array[e+0]=Qi(t),this.array[e+1]=Qi(i),this.array[e+2]=Qi(n),this.array[e+3]=Qi(s),this}},Ie=class extends xt{constructor(e,t,i){super(new Float32Array(e),t,i)}},iE=0;const wn=new $e,Dp=new Rt,Jo=new R,dn=new mi,_l=new mi,ui=new R;let ht=class Yb extends fs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:iE++}),this.uuid=Sn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(kb(e)?Oy:By)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new lt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return wn.makeRotationFromQuaternion(e),this.applyMatrix4(wn),this}rotateX(e){return wn.makeRotationX(e),this.applyMatrix4(wn),this}rotateY(e){return wn.makeRotationY(e),this.applyMatrix4(wn),this}rotateZ(e){return wn.makeRotationZ(e),this.applyMatrix4(wn),this}translate(e,t,i){return wn.makeTranslation(e,t,i),this.applyMatrix4(wn),this}scale(e,t,i){return wn.makeScale(e,t,i),this.applyMatrix4(wn),this}lookAt(e){return Dp.lookAt(e),Dp.updateMatrix(),this.applyMatrix4(Dp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Jo).negate(),this.translate(Jo.x,Jo.y,Jo.z),this}setFromPoints(e){const t=[];for(let i=0,n=e.length;i<n;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ie(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new R(-1/0,-1/0,-1/0),new R(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];dn.setFromBufferAttribute(s),this.morphTargetsRelative?(ui.addVectors(this.boundingBox.min,dn.min),this.boundingBox.expandByPoint(ui),ui.addVectors(this.boundingBox.max,dn.max),this.boundingBox.expandByPoint(ui)):(this.boundingBox.expandByPoint(dn.min),this.boundingBox.expandByPoint(dn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new R,1/0);return}if(e){const i=this.boundingSphere.center;if(dn.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const a=t[s];_l.setFromBufferAttribute(a),this.morphTargetsRelative?(ui.addVectors(dn.min,_l.min),dn.expandByPoint(ui),ui.addVectors(dn.max,_l.max),dn.expandByPoint(ui)):(dn.expandByPoint(_l.min),dn.expandByPoint(_l.max))}dn.getCenter(i);let n=0;for(let s=0,r=e.count;s<r;s++)ui.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(ui));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)ui.fromBufferAttribute(a,c),l&&(Jo.fromBufferAttribute(e,c),ui.add(Jo)),n=Math.max(n,i.distanceToSquared(ui))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xt(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),a=[],l=[];for(let A=0;A<i.count;A++)a[A]=new R,l[A]=new R;const c=new R,h=new R,u=new R,d=new Y,f=new Y,p=new Y,g=new R,m=new R;function y(A,L,S){c.fromBufferAttribute(i,A),h.fromBufferAttribute(i,L),u.fromBufferAttribute(i,S),d.fromBufferAttribute(s,A),f.fromBufferAttribute(s,L),p.fromBufferAttribute(s,S),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const T=1/(f.x*p.y-p.x*f.y);isFinite(T)&&(g.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(T),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(T),a[A].add(g),a[L].add(g),a[S].add(g),l[A].add(m),l[L].add(m),l[S].add(m))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let A=0,L=x.length;A<L;++A){const S=x[A],T=S.start,B=S.count;for(let F=T,G=T+B;F<G;F+=3)y(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const _=new R,v=new R,E=new R,M=new R;function b(A){E.fromBufferAttribute(n,A),M.copy(E);const L=a[A];_.copy(L),_.sub(E.multiplyScalar(E.dot(L))).normalize(),v.crossVectors(M,L);const T=v.dot(l[A])<0?-1:1;r.setXYZW(A,_.x,_.y,_.z,T)}for(let A=0,L=x.length;A<L;++A){const S=x[A],T=S.start,B=S.count;for(let F=T,G=T+B;F<G;F+=3)b(e.getX(F+0)),b(e.getX(F+1)),b(e.getX(F+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new xt(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new R,s=new R,r=new R,a=new R,l=new R,c=new R,h=new R,u=new R;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),g=e.getX(d+1),m=e.getX(d+2);n.fromBufferAttribute(t,p),s.fromBufferAttribute(t,g),r.fromBufferAttribute(t,m),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,g),c.fromBufferAttribute(i,m),a.add(h),l.add(h),c.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(g,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),i.setXYZ(d+0,h.x,h.y,h.z),i.setXYZ(d+1,h.x,h.y,h.z),i.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)ui.fromBufferAttribute(e,t),ui.normalize(),e.setXYZ(t,ui.x,ui.y,ui.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*h;for(let y=0;y<h;y++)d[p++]=c[f++]}return new xt(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Yb,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,l=r.length;a<l;a++){const c=r[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],u=s[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let c=0,h=r.length;c<h;c++){const u=r[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const M0=new $e,Vr=new Uo,Sh=new gi,T0=new R,bh=new R,Mh=new R,Th=new R,Up=new R,wh=new R,w0=new R,Ah=new R;let qt=class extends Rt{constructor(e=new ht,t=new Ur){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,r=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){wh.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],u=s[l];h!==0&&(Up.fromBufferAttribute(u,e),r?wh.addScaledVector(Up,h):wh.addScaledVector(Up.sub(t),h))}t.add(wh)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Sh.copy(i.boundingSphere),Sh.applyMatrix4(s),Vr.copy(e.ray).recast(e.near),!(Sh.containsPoint(Vr.origin)===!1&&(Vr.intersectSphere(Sh,T0)===null||Vr.origin.distanceToSquared(T0)>(e.far-e.near)**2))&&(M0.copy(s).invert(),Vr.copy(e.ray).applyMatrix4(M0),!(i.boundingBox!==null&&Vr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Vr)))}_computeIntersections(e,t,i){let n;const s=this.geometry,r=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,g=d.length;p<g;p++){const m=d[p],y=r[m.materialIndex],x=Math.max(m.start,f.start),_=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let v=x,E=_;v<E;v+=3){const M=a.getX(v),b=a.getX(v+1),A=a.getX(v+2);n=Eh(this,y,e,i,c,h,u,M,b,A),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),g=Math.min(a.count,f.start+f.count);for(let m=p,y=g;m<y;m+=3){const x=a.getX(m),_=a.getX(m+1),v=a.getX(m+2);n=Eh(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(r))for(let p=0,g=d.length;p<g;p++){const m=d[p],y=r[m.materialIndex],x=Math.max(m.start,f.start),_=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let v=x,E=_;v<E;v+=3){const M=v,b=v+1,A=v+2;n=Eh(this,y,e,i,c,h,u,M,b,A),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),g=Math.min(l.count,f.start+f.count);for(let m=p,y=g;m<y;m+=3){const x=m,_=m+1,v=m+2;n=Eh(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}}};function nE(o,e,t,i,n,s,r,a){let l;if(e.side===qi?l=i.intersectTriangle(r,s,n,!0,a):l=i.intersectTriangle(n,s,r,e.side===$s,a),l===null)return null;Ah.copy(a),Ah.applyMatrix4(o.matrixWorld);const c=t.ray.origin.distanceTo(Ah);return c<t.near||c>t.far?null:{distance:c,point:Ah.clone(),object:o}}function Eh(o,e,t,i,n,s,r,a,l,c){o.getVertexPosition(a,bh),o.getVertexPosition(l,Mh),o.getVertexPosition(c,Th);const h=nE(o,e,t,i,bh,Mh,Th,w0);if(h){const u=new R;br.getBarycoord(w0,bh,Mh,Th,u),n&&(h.uv=br.getInterpolatedAttribute(n,a,l,c,u,new Y)),s&&(h.uv1=br.getInterpolatedAttribute(s,a,l,c,u,new Y)),r&&(h.normal=br.getInterpolatedAttribute(r,a,l,c,u,new R),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new R,materialIndex:0};br.getNormal(bh,Mh,Th,d.normal),h.face=d,h.barycoord=u}return h}let Hc=class Zb extends ht{constructor(e=1,t=1,i=1,n=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:r};const a=this;n=Math.floor(n),s=Math.floor(s),r=Math.floor(r);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,r,s,0),p("z","y","x",1,-1,i,t,-e,r,s,1),p("x","z","y",1,1,e,i,t,n,r,2),p("x","z","y",1,-1,e,i,-t,n,r,3),p("x","y","z",1,-1,e,t,i,n,s,4),p("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new Ie(c,3)),this.setAttribute("normal",new Ie(h,3)),this.setAttribute("uv",new Ie(u,2));function p(g,m,y,x,_,v,E,M,b,A,L){const S=v/b,T=E/A,B=v/2,F=E/2,G=M/2,j=b+1,k=A+1;let ae=0,X=0;const ce=new R;for(let ue=0;ue<k;ue++){const pe=ue*T-F;for(let Ze=0;Ze<j;Ze++){const Qe=Ze*S-B;ce[g]=Qe*x,ce[m]=pe*_,ce[y]=G,c.push(ce.x,ce.y,ce.z),ce[g]=0,ce[m]=0,ce[y]=M>0?1:-1,h.push(ce.x,ce.y,ce.z),u.push(Ze/b),u.push(1-ue/A),ae+=1}}for(let ue=0;ue<A;ue++)for(let pe=0;pe<b;pe++){const Ze=d+pe+j*ue,Qe=d+pe+j*(ue+1),J=d+(pe+1)+j*(ue+1),le=d+(pe+1)+j*ue;l.push(Ze,Qe,le),l.push(Qe,J,le),X+=6}a.addGroup(f,X,L),f+=X,d+=ae}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zb(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function ja(o){const e={};for(const t in o){e[t]={};for(const i in o[t]){const n=o[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function Gi(o){const e={};for(let t=0;t<o.length;t++){const i=ja(o[t]);for(const n in i)e[n]=i[n]}return e}function sE(o){const e=[];for(let t=0;t<o.length;t++)e.push(o[t].clone());return e}function Kb(o){const e=o.getRenderTarget();return e===null?o.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:vt.workingColorSpace}const Wc={clone:ja,merge:Gi};var rE=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,oE=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let sn=class extends Oi{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=rE,this.fragmentShader=oE,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ja(e.uniforms),this.uniformsGroups=sE(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}},wf=class extends Rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $e,this.projectionMatrix=new $e,this.projectionMatrixInverse=new $e,this.coordinateSystem=ss}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const lr=new R,A0=new Y,E0=new Y;let Ai=class extends wf{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ka*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(xo*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ka*2*Math.atan(Math.tan(xo*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){lr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(lr.x,lr.y).multiplyScalar(-e/lr.z),lr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(lr.x,lr.y).multiplyScalar(-e/lr.z)}getViewSize(e,t){return this.getViewBounds(e,A0,E0),t.subVectors(E0,A0)}setViewOffset(e,t,i,n,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(xo*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const r=this.view;if(this.view!==null&&this.view.enabled){const l=r.fullWidth,c=r.fullHeight;s+=r.offsetX*n/l,t-=r.offsetY*i/c,n*=r.width/l,i*=r.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const Qo=-90,ea=1;let jb=class extends Rt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Ai(Qo,ea,e,t);n.layers=this.layers,this.add(n);const s=new Ai(Qo,ea,e,t);s.layers=this.layers,this.add(s);const r=new Ai(Qo,ea,e,t);r.layers=this.layers,this.add(r);const a=new Ai(Qo,ea,e,t);a.layers=this.layers,this.add(a);const l=new Ai(Qo,ea,e,t);l.layers=this.layers,this.add(l);const c=new Ai(Qo,ea,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,r,a,l]=t;for(const c of t)this.remove(c);if(e===ss)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===_c)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const g=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,r),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=g,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}},$c=class extends xi{constructor(e,t,i,n,s,r,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:Xs,super(e,t,i,n,s,r,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},Jb=class extends Ln{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new $c(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ni}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new Hc(5,5,5),s=new sn({name:"CubemapFromEquirect",uniforms:ja(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:qi,blending:rs});s.uniforms.tEquirect.value=t;const r=new qt(n,s),a=t.minFilter;return t.minFilter===ns&&(t.minFilter=ni),new jb(1,10,this).update(e,r),t.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,i,n);e.setRenderTarget(s)}};const Fp=new R,aE=new R,lE=new lt;let Cs=class{constructor(e=new R(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Fp.subVectors(i,t).cross(aE.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Fp),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||lE.getNormalMatrix(e),n=this.coplanarPoint(Fp).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Hr=new gi,Rh=new R;let Xc=class{constructor(e=new Cs,t=new Cs,i=new Cs,n=new Cs,s=new Cs,r=new Cs){this.planes=[e,t,i,n,s,r]}set(e,t,i,n,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=ss){const i=this.planes,n=e.elements,s=n[0],r=n[1],a=n[2],l=n[3],c=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],g=n[10],m=n[11],y=n[12],x=n[13],_=n[14],v=n[15];if(i[0].setComponents(l-s,d-c,m-f,v-y).normalize(),i[1].setComponents(l+s,d+c,m+f,v+y).normalize(),i[2].setComponents(l+r,d+h,m+p,v+x).normalize(),i[3].setComponents(l-r,d-h,m-p,v-x).normalize(),i[4].setComponents(l-a,d-u,m-g,v-_).normalize(),t===ss)i[5].setComponents(l+a,d+u,m+g,v+_).normalize();else if(t===_c)i[5].setComponents(a,u,g,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Hr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Hr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Hr)}intersectsSprite(e){return Hr.center.set(0,0,0),Hr.radius=.7071067811865476,Hr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Hr)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(Rh.x=n.normal.x>0?e.max.x:e.min.x,Rh.y=n.normal.y>0?e.max.y:e.min.y,Rh.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(Rh)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function Qb(){let o=null,e=!1,t=null,i=null;function n(s,r){t(s,r),i=o.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=o.requestAnimationFrame(n),e=!0)},stop:function(){o.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){o=s}}}function cE(o){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=o.createBuffer();o.bindBuffer(l,d),o.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=o.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=o.HALF_FLOAT:f=o.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=o.SHORT;else if(c instanceof Uint32Array)f=o.UNSIGNED_INT;else if(c instanceof Int32Array)f=o.INT;else if(c instanceof Int8Array)f=o.BYTE;else if(c instanceof Uint8Array)f=o.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=o.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function i(a,l,c){const h=l.array,u=l.updateRanges;if(o.bindBuffer(c,a),u.length===0)o.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],g=u[f];g.start<=p.start+p.count+1?p.count=Math.max(p.count,g.start+g.count-p.start):(++d,u[d]=g)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const g=u[f];o.bufferSubData(c,g.start*h.BYTES_PER_ELEMENT,h,g.start,g.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(o.deleteBuffer(l.buffer),e.delete(a))}function r(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:s,update:r}}class rl extends ht{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,r=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],g=[],m=[];for(let y=0;y<h;y++){const x=y*d-r;for(let _=0;_<c;_++){const v=_*u-s;p.push(v,-x,0),g.push(0,0,1),m.push(_/a),m.push(1-y/l)}}for(let y=0;y<l;y++)for(let x=0;x<a;x++){const _=x+c*y,v=x+c*(y+1),E=x+1+c*(y+1),M=x+1+c*y;f.push(_,v,M),f.push(v,E,M)}this.setIndex(f),this.setAttribute("position",new Ie(p,3)),this.setAttribute("normal",new Ie(g,3)),this.setAttribute("uv",new Ie(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rl(e.width,e.height,e.widthSegments,e.heightSegments)}}var hE=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,uE=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,dE=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,fE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,pE=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,mE=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,gE=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,yE=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,xE=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,_E=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,vE=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,SE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bE=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,ME=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,TE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,wE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,AE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,EE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,RE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,CE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,NE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,PE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,IE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,LE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,DE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,UE=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,FE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,BE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,OE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,zE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,kE="gl_FragColor = linearToOutputTexel( gl_FragColor );",GE=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,VE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,HE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,WE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,$E=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,XE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,qE=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,YE=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ZE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,KE=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,jE=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,JE=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,QE=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,eR=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,tR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,iR=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,nR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,sR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,rR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,oR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,aR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,lR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,cR=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,hR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,uR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,dR=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,fR=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,pR=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,mR=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,gR=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,yR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,xR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,_R=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,vR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,SR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,bR=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,MR=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,TR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,wR=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,AR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ER=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,RR=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,CR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,NR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,PR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,IR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,LR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,DR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,UR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,FR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,BR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,OR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,zR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,kR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,GR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,VR=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,HR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,WR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,$R=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,XR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,qR=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,YR=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,ZR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,KR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,jR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,JR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,QR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,eC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,iC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,nC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,sC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,rC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,oC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,aC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,lC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const cC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,hC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,uC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,dC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,fC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,pC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,mC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,gC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,yC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,xC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,_C=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,vC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,SC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,bC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,MC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,TC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,AC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,EC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,RC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,CC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,NC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,PC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,IC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,DC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,UC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,OC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,zC=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,GC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,VC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,rt={alphahash_fragment:hE,alphahash_pars_fragment:uE,alphamap_fragment:dE,alphamap_pars_fragment:fE,alphatest_fragment:pE,alphatest_pars_fragment:mE,aomap_fragment:gE,aomap_pars_fragment:yE,batching_pars_vertex:xE,batching_vertex:_E,begin_vertex:vE,beginnormal_vertex:SE,bsdfs:bE,iridescence_fragment:ME,bumpmap_pars_fragment:TE,clipping_planes_fragment:wE,clipping_planes_pars_fragment:AE,clipping_planes_pars_vertex:EE,clipping_planes_vertex:RE,color_fragment:CE,color_pars_fragment:NE,color_pars_vertex:PE,color_vertex:IE,common:LE,cube_uv_reflection_fragment:DE,defaultnormal_vertex:UE,displacementmap_pars_vertex:FE,displacementmap_vertex:BE,emissivemap_fragment:OE,emissivemap_pars_fragment:zE,colorspace_fragment:kE,colorspace_pars_fragment:GE,envmap_fragment:VE,envmap_common_pars_fragment:HE,envmap_pars_fragment:WE,envmap_pars_vertex:$E,envmap_physical_pars_fragment:iR,envmap_vertex:XE,fog_vertex:qE,fog_pars_vertex:YE,fog_fragment:ZE,fog_pars_fragment:KE,gradientmap_pars_fragment:jE,lightmap_pars_fragment:JE,lights_lambert_fragment:QE,lights_lambert_pars_fragment:eR,lights_pars_begin:tR,lights_toon_fragment:nR,lights_toon_pars_fragment:sR,lights_phong_fragment:rR,lights_phong_pars_fragment:oR,lights_physical_fragment:aR,lights_physical_pars_fragment:lR,lights_fragment_begin:cR,lights_fragment_maps:hR,lights_fragment_end:uR,logdepthbuf_fragment:dR,logdepthbuf_pars_fragment:fR,logdepthbuf_pars_vertex:pR,logdepthbuf_vertex:mR,map_fragment:gR,map_pars_fragment:yR,map_particle_fragment:xR,map_particle_pars_fragment:_R,metalnessmap_fragment:vR,metalnessmap_pars_fragment:SR,morphinstance_vertex:bR,morphcolor_vertex:MR,morphnormal_vertex:TR,morphtarget_pars_vertex:wR,morphtarget_vertex:AR,normal_fragment_begin:ER,normal_fragment_maps:RR,normal_pars_fragment:CR,normal_pars_vertex:NR,normal_vertex:PR,normalmap_pars_fragment:IR,clearcoat_normal_fragment_begin:LR,clearcoat_normal_fragment_maps:DR,clearcoat_pars_fragment:UR,iridescence_pars_fragment:FR,opaque_fragment:BR,packing:OR,premultiplied_alpha_fragment:zR,project_vertex:kR,dithering_fragment:GR,dithering_pars_fragment:VR,roughnessmap_fragment:HR,roughnessmap_pars_fragment:WR,shadowmap_pars_fragment:$R,shadowmap_pars_vertex:XR,shadowmap_vertex:qR,shadowmask_pars_fragment:YR,skinbase_vertex:ZR,skinning_pars_vertex:KR,skinning_vertex:jR,skinnormal_vertex:JR,specularmap_fragment:QR,specularmap_pars_fragment:eC,tonemapping_fragment:tC,tonemapping_pars_fragment:iC,transmission_fragment:nC,transmission_pars_fragment:sC,uv_pars_fragment:rC,uv_pars_vertex:oC,uv_vertex:aC,worldpos_vertex:lC,background_vert:cC,background_frag:hC,backgroundCube_vert:uC,backgroundCube_frag:dC,cube_vert:fC,cube_frag:pC,depth_vert:mC,depth_frag:gC,distanceRGBA_vert:yC,distanceRGBA_frag:xC,equirect_vert:_C,equirect_frag:vC,linedashed_vert:SC,linedashed_frag:bC,meshbasic_vert:MC,meshbasic_frag:TC,meshlambert_vert:wC,meshlambert_frag:AC,meshmatcap_vert:EC,meshmatcap_frag:RC,meshnormal_vert:CC,meshnormal_frag:NC,meshphong_vert:PC,meshphong_frag:IC,meshphysical_vert:LC,meshphysical_frag:DC,meshtoon_vert:UC,meshtoon_frag:FC,points_vert:BC,points_frag:OC,shadow_vert:zC,shadow_frag:kC,sprite_vert:GC,sprite_frag:VC},ye={common:{diffuse:{value:new Ae(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new lt}},envmap:{envMap:{value:null},envMapRotation:{value:new lt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new lt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new lt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new lt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new lt},normalScale:{value:new Y(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new lt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new lt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new lt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new lt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0},uvTransform:{value:new lt}},sprite:{diffuse:{value:new Ae(16777215)},opacity:{value:1},center:{value:new Y(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}}},Vi={basic:{uniforms:Gi([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.fog]),vertexShader:rt.meshbasic_vert,fragmentShader:rt.meshbasic_frag},lambert:{uniforms:Gi([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,ye.lights,{emissive:{value:new Ae(0)}}]),vertexShader:rt.meshlambert_vert,fragmentShader:rt.meshlambert_frag},phong:{uniforms:Gi([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,ye.lights,{emissive:{value:new Ae(0)},specular:{value:new Ae(1118481)},shininess:{value:30}}]),vertexShader:rt.meshphong_vert,fragmentShader:rt.meshphong_frag},standard:{uniforms:Gi([ye.common,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.roughnessmap,ye.metalnessmap,ye.fog,ye.lights,{emissive:{value:new Ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rt.meshphysical_vert,fragmentShader:rt.meshphysical_frag},toon:{uniforms:Gi([ye.common,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.gradientmap,ye.fog,ye.lights,{emissive:{value:new Ae(0)}}]),vertexShader:rt.meshtoon_vert,fragmentShader:rt.meshtoon_frag},matcap:{uniforms:Gi([ye.common,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,{matcap:{value:null}}]),vertexShader:rt.meshmatcap_vert,fragmentShader:rt.meshmatcap_frag},points:{uniforms:Gi([ye.points,ye.fog]),vertexShader:rt.points_vert,fragmentShader:rt.points_frag},dashed:{uniforms:Gi([ye.common,ye.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rt.linedashed_vert,fragmentShader:rt.linedashed_frag},depth:{uniforms:Gi([ye.common,ye.displacementmap]),vertexShader:rt.depth_vert,fragmentShader:rt.depth_frag},normal:{uniforms:Gi([ye.common,ye.bumpmap,ye.normalmap,ye.displacementmap,{opacity:{value:1}}]),vertexShader:rt.meshnormal_vert,fragmentShader:rt.meshnormal_frag},sprite:{uniforms:Gi([ye.sprite,ye.fog]),vertexShader:rt.sprite_vert,fragmentShader:rt.sprite_frag},background:{uniforms:{uvTransform:{value:new lt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:rt.background_vert,fragmentShader:rt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new lt}},vertexShader:rt.backgroundCube_vert,fragmentShader:rt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:rt.cube_vert,fragmentShader:rt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rt.equirect_vert,fragmentShader:rt.equirect_frag},distanceRGBA:{uniforms:Gi([ye.common,ye.displacementmap,{referencePosition:{value:new R},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rt.distanceRGBA_vert,fragmentShader:rt.distanceRGBA_frag},shadow:{uniforms:Gi([ye.lights,ye.fog,{color:{value:new Ae(0)},opacity:{value:1}}]),vertexShader:rt.shadow_vert,fragmentShader:rt.shadow_frag}};Vi.physical={uniforms:Gi([Vi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new lt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new lt},clearcoatNormalScale:{value:new Y(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new lt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new lt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new lt},sheen:{value:0},sheenColor:{value:new Ae(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new lt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new lt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new lt},transmissionSamplerSize:{value:new Y},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new lt},attenuationDistance:{value:0},attenuationColor:{value:new Ae(0)},specularColor:{value:new Ae(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new lt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new lt},anisotropyVector:{value:new Y},anisotropyMap:{value:null},anisotropyMapTransform:{value:new lt}}]),vertexShader:rt.meshphysical_vert,fragmentShader:rt.meshphysical_frag};const Ch={r:0,b:0,g:0},Wr=new Xn,HC=new $e;function WC(o,e,t,i,n,s,r){const a=new Ae(0);let l=s===!0?0:1,c,h,u=null,d=0,f=null;function p(x){let _=x.isScene===!0?x.background:null;return _&&_.isTexture&&(_=(x.backgroundBlurriness>0?t:e).get(_)),_}function g(x){let _=!1;const v=p(x);v===null?y(a,l):v&&v.isColor&&(y(v,1),_=!0);const E=o.xr.getEnvironmentBlendMode();E==="additive"?i.buffers.color.setClear(0,0,0,1,r):E==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,r),(o.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),o.clear(o.autoClearColor,o.autoClearDepth,o.autoClearStencil))}function m(x,_){const v=p(_);v&&(v.isCubeTexture||v.mapping===sl)?(h===void 0&&(h=new qt(new Hc(1,1,1),new sn({name:"BackgroundCubeMaterial",uniforms:ja(Vi.backgroundCube.uniforms),vertexShader:Vi.backgroundCube.vertexShader,fragmentShader:Vi.backgroundCube.fragmentShader,side:qi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(E,M,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),Wr.copy(_.backgroundRotation),Wr.x*=-1,Wr.y*=-1,Wr.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(Wr.y*=-1,Wr.z*=-1),h.material.uniforms.envMap.value=v,h.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(HC.makeRotationFromEuler(Wr)),h.material.toneMapped=vt.getTransfer(v.colorSpace)!==Dt,(u!==v||d!==v.version||f!==o.toneMapping)&&(h.material.needsUpdate=!0,u=v,d=v.version,f=o.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new qt(new rl(2,2),new sn({name:"BackgroundMaterial",uniforms:ja(Vi.background.uniforms),vertexShader:Vi.background.vertexShader,fragmentShader:Vi.background.fragmentShader,side:$s,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=v,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=vt.getTransfer(v.colorSpace)!==Dt,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(u!==v||d!==v.version||f!==o.toneMapping)&&(c.material.needsUpdate=!0,u=v,d=v.version,f=o.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null))}function y(x,_){x.getRGB(Ch,Kb(o)),i.buffers.color.setClear(Ch.r,Ch.g,Ch.b,_,r)}return{getClearColor:function(){return a},setClearColor:function(x,_=1){a.set(x),l=_,y(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(x){l=x,y(a,l)},render:g,addToRenderList:m}}function $C(o,e){const t=o.getParameter(o.MAX_VERTEX_ATTRIBS),i={},n=d(null);let s=n,r=!1;function a(S,T,B,F,G){let j=!1;const k=u(F,B,T);s!==k&&(s=k,c(s.object)),j=f(S,F,B,G),j&&p(S,F,B,G),G!==null&&e.update(G,o.ELEMENT_ARRAY_BUFFER),(j||r)&&(r=!1,v(S,T,B,F),G!==null&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,e.get(G).buffer))}function l(){return o.createVertexArray()}function c(S){return o.bindVertexArray(S)}function h(S){return o.deleteVertexArray(S)}function u(S,T,B){const F=B.wireframe===!0;let G=i[S.id];G===void 0&&(G={},i[S.id]=G);let j=G[T.id];j===void 0&&(j={},G[T.id]=j);let k=j[F];return k===void 0&&(k=d(l()),j[F]=k),k}function d(S){const T=[],B=[],F=[];for(let G=0;G<t;G++)T[G]=0,B[G]=0,F[G]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:T,enabledAttributes:B,attributeDivisors:F,object:S,attributes:{},index:null}}function f(S,T,B,F){const G=s.attributes,j=T.attributes;let k=0;const ae=B.getAttributes();for(const X in ae)if(ae[X].location>=0){const ue=G[X];let pe=j[X];if(pe===void 0&&(X==="instanceMatrix"&&S.instanceMatrix&&(pe=S.instanceMatrix),X==="instanceColor"&&S.instanceColor&&(pe=S.instanceColor)),ue===void 0||ue.attribute!==pe||pe&&ue.data!==pe.data)return!0;k++}return s.attributesNum!==k||s.index!==F}function p(S,T,B,F){const G={},j=T.attributes;let k=0;const ae=B.getAttributes();for(const X in ae)if(ae[X].location>=0){let ue=j[X];ue===void 0&&(X==="instanceMatrix"&&S.instanceMatrix&&(ue=S.instanceMatrix),X==="instanceColor"&&S.instanceColor&&(ue=S.instanceColor));const pe={};pe.attribute=ue,ue&&ue.data&&(pe.data=ue.data),G[X]=pe,k++}s.attributes=G,s.attributesNum=k,s.index=F}function g(){const S=s.newAttributes;for(let T=0,B=S.length;T<B;T++)S[T]=0}function m(S){y(S,0)}function y(S,T){const B=s.newAttributes,F=s.enabledAttributes,G=s.attributeDivisors;B[S]=1,F[S]===0&&(o.enableVertexAttribArray(S),F[S]=1),G[S]!==T&&(o.vertexAttribDivisor(S,T),G[S]=T)}function x(){const S=s.newAttributes,T=s.enabledAttributes;for(let B=0,F=T.length;B<F;B++)T[B]!==S[B]&&(o.disableVertexAttribArray(B),T[B]=0)}function _(S,T,B,F,G,j,k){k===!0?o.vertexAttribIPointer(S,T,B,G,j):o.vertexAttribPointer(S,T,B,F,G,j)}function v(S,T,B,F){g();const G=F.attributes,j=B.getAttributes(),k=T.defaultAttributeValues;for(const ae in j){const X=j[ae];if(X.location>=0){let ce=G[ae];if(ce===void 0&&(ae==="instanceMatrix"&&S.instanceMatrix&&(ce=S.instanceMatrix),ae==="instanceColor"&&S.instanceColor&&(ce=S.instanceColor)),ce!==void 0){const ue=ce.normalized,pe=ce.itemSize,Ze=e.get(ce);if(Ze===void 0)continue;const Qe=Ze.buffer,J=Ze.type,le=Ze.bytesPerElement,Te=J===o.INT||J===o.UNSIGNED_INT||ce.gpuType===mf;if(ce.isInterleavedBufferAttribute){const _e=ce.data,Ve=_e.stride,Xe=ce.offset;if(_e.isInstancedInterleavedBuffer){for(let We=0;We<X.locationSize;We++)y(X.location+We,_e.meshPerAttribute);S.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let We=0;We<X.locationSize;We++)m(X.location+We);o.bindBuffer(o.ARRAY_BUFFER,Qe);for(let We=0;We<X.locationSize;We++)_(X.location+We,pe/X.locationSize,J,ue,Ve*le,(Xe+pe/X.locationSize*We)*le,Te)}else{if(ce.isInstancedBufferAttribute){for(let _e=0;_e<X.locationSize;_e++)y(X.location+_e,ce.meshPerAttribute);S.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=ce.meshPerAttribute*ce.count)}else for(let _e=0;_e<X.locationSize;_e++)m(X.location+_e);o.bindBuffer(o.ARRAY_BUFFER,Qe);for(let _e=0;_e<X.locationSize;_e++)_(X.location+_e,pe/X.locationSize,J,ue,pe*le,pe/X.locationSize*_e*le,Te)}}else if(k!==void 0){const ue=k[ae];if(ue!==void 0)switch(ue.length){case 2:o.vertexAttrib2fv(X.location,ue);break;case 3:o.vertexAttrib3fv(X.location,ue);break;case 4:o.vertexAttrib4fv(X.location,ue);break;default:o.vertexAttrib1fv(X.location,ue)}}}}x()}function E(){A();for(const S in i){const T=i[S];for(const B in T){const F=T[B];for(const G in F)h(F[G].object),delete F[G];delete T[B]}delete i[S]}}function M(S){if(i[S.id]===void 0)return;const T=i[S.id];for(const B in T){const F=T[B];for(const G in F)h(F[G].object),delete F[G];delete T[B]}delete i[S.id]}function b(S){for(const T in i){const B=i[T];if(B[S.id]===void 0)continue;const F=B[S.id];for(const G in F)h(F[G].object),delete F[G];delete B[S.id]}}function A(){L(),r=!0,s!==n&&(s=n,c(s.object))}function L(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:A,resetDefaultState:L,dispose:E,releaseStatesOfGeometry:M,releaseStatesOfProgram:b,initAttributes:g,enableAttribute:m,disableUnusedAttributes:x}}function XC(o,e,t){let i;function n(c){i=c}function s(c,h){o.drawArrays(i,c,h),t.update(h,i,1)}function r(c,h,u){u!==0&&(o.drawArraysInstanced(i,c,h,u),t.update(h,i,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,i,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)r(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,d,0,u);let p=0;for(let g=0;g<u;g++)p+=h[g];for(let g=0;g<d.length;g++)t.update(p,i,d[g])}}this.setMode=n,this.render=s,this.renderInstances=r,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function qC(o,e,t,i){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const b=e.get("EXT_texture_filter_anisotropic");n=o.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(b){return!(b!==Xi&&i.convert(b)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(b){const A=b===Do&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(b!==cs&&i.convert(b)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_TYPE)&&b!==en&&!A)}function l(b){if(b==="highp"){if(o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.HIGH_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.HIGH_FLOAT).precision>0)return"highp";b="mediump"}return b==="mediump"&&o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.MEDIUM_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control");if(d===!0){const b=e.get("EXT_clip_control");b.clipControlEXT(b.LOWER_LEFT_EXT,b.ZERO_TO_ONE_EXT)}const f=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),p=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=o.getParameter(o.MAX_TEXTURE_SIZE),m=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),y=o.getParameter(o.MAX_VERTEX_ATTRIBS),x=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),_=o.getParameter(o.MAX_VARYING_VECTORS),v=o.getParameter(o.MAX_FRAGMENT_UNIFORM_VECTORS),E=p>0,M=o.getParameter(o.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:r,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:m,maxAttributes:y,maxVertexUniforms:x,maxVaryings:_,maxFragmentUniforms:v,vertexTextures:E,maxSamples:M}}function YC(o){const e=this;let t=null,i=0,n=!1,s=!1;const r=new Cs,a=new lt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||i!==0||n;return n=d,i=u.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,g=u.clipIntersection,m=u.clipShadows,y=o.get(u);if(!n||p===null||p.length===0||s&&!m)s?h(null):c();else{const x=s?0:i,_=x*4;let v=y.clippingState||null;l.value=v,v=h(p,d,_,f);for(let E=0;E!==_;++E)v[E]=t[E];y.clippingState=v,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,d,f,p){const g=u!==null?u.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const y=f+g*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(m===null||m.length<y)&&(m=new Float32Array(y));for(let _=0,v=f;_!==g;++_,v+=4)r.copy(u[_]).applyMatrix4(x,a),r.normal.toArray(m,v),m[v+3]=r.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function ZC(o){let e=new WeakMap;function t(r,a){return a===cc?r.mapping=Xs:a===hc&&(r.mapping=Er),r}function i(r){if(r&&r.isTexture){const a=r.mapping;if(a===cc||a===hc)if(e.has(r)){const l=e.get(r).texture;return t(l,r.mapping)}else{const l=r.image;if(l&&l.height>0){const c=new Jb(l.height);return c.fromEquirectangularTexture(o,r),e.set(r,c),r.addEventListener("dispose",n),t(c.texture,r.mapping)}else return null}}return r}function n(r){const a=r.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}let qc=class extends wf{constructor(e=-1,t=1,i=1,n=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,r=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,r=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};const Pa=4,R0=[.125,.215,.35,.446,.526,.582],lo=20,Bp=new qc,C0=new Ae;let Op=null,zp=0,kp=0,Gp=!1;const so=(1+Math.sqrt(5))/2,ta=1/so,N0=[new R(-so,ta,0),new R(so,ta,0),new R(-ta,0,so),new R(ta,0,so),new R(0,so,-ta),new R(0,so,ta),new R(-1,1,-1),new R(1,1,-1),new R(-1,1,1),new R(1,1,1)];let Tg=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){Op=this._renderer.getRenderTarget(),zp=this._renderer.getActiveCubeFace(),kp=this._renderer.getActiveMipmapLevel(),Gp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=L0(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=I0(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Op,zp,kp),this._renderer.xr.enabled=Gp,e.scissorTest=!1,Nh(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Xs||e.mapping===Er?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Op=this._renderer.getRenderTarget(),zp=this._renderer.getActiveCubeFace(),kp=this._renderer.getActiveMipmapLevel(),Gp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:ni,minFilter:ni,generateMipmaps:!1,type:Do,format:Xi,colorSpace:js,depthBuffer:!1},n=P0(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=P0(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=KC(s)),this._blurMaterial=jC(s,e,t)}return n}_compileMaterial(e){const t=new qt(this._lodPlanes[0],e);this._renderer.compile(t,Bp)}_sceneToCubeUV(e,t,i,n){const a=new Ai(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(C0),h.toneMapping=ks,h.autoClear=!1;const f=new Ur({name:"PMREM.Background",side:qi,depthWrite:!1,depthTest:!1}),p=new qt(new Hc,f);let g=!1;const m=e.background;m?m.isColor&&(f.color.copy(m),e.background=null,g=!0):(f.color.copy(C0),g=!0);for(let y=0;y<6;y++){const x=y%3;x===0?(a.up.set(0,l[y],0),a.lookAt(c[y],0,0)):x===1?(a.up.set(0,0,l[y]),a.lookAt(0,c[y],0)):(a.up.set(0,l[y],0),a.lookAt(0,0,c[y]));const _=this._cubeSize;Nh(n,x*_,y>2?_:0,_,_),h.setRenderTarget(n),g&&h.render(p,a),h.render(e,a)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=d,h.autoClear=u,e.background=m}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===Xs||e.mapping===Er;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=L0()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=I0());const s=n?this._cubemapMaterial:this._equirectMaterial,r=new qt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Nh(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(r,Bp)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=N0[(n-s-1)%N0.length];this._blur(e,s-1,s,r,a)}t.autoClear=i}_blur(e,t,i,n,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,i,n,"latitudinal",s),this._halfBlur(r,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,r,a){const l=this._renderer,c=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new qt(this._lodPlanes[n],c),d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*lo-1),g=s/p,m=isFinite(s)?1+Math.floor(h*g):lo;m>lo&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${lo}`);const y=[];let x=0;for(let b=0;b<lo;++b){const A=b/g,L=Math.exp(-A*A/2);y.push(L),b===0?x+=L:b<m&&(x+=2*L)}for(let b=0;b<y.length;b++)y[b]=y[b]/x;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=y,d.latitudinal.value=r==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:_}=this;d.dTheta.value=p,d.mipInt.value=_-i;const v=this._sizeLods[n],E=3*v*(n>_-Pa?n-_+Pa:0),M=4*(this._cubeSize-v);Nh(t,E,M,3*v,2*v),l.setRenderTarget(t),l.render(u,Bp)}};function KC(o){const e=[],t=[],i=[];let n=o;const s=o-Pa+1+R0.length;for(let r=0;r<s;r++){const a=Math.pow(2,n);t.push(a);let l=1/a;r>o-Pa?l=R0[r-o+Pa-1]:r===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,g=3,m=2,y=1,x=new Float32Array(g*p*f),_=new Float32Array(m*p*f),v=new Float32Array(y*p*f);for(let M=0;M<f;M++){const b=M%3*2/3-1,A=M>2?0:-1,L=[b,A,0,b+2/3,A,0,b+2/3,A+1,0,b,A,0,b+2/3,A+1,0,b,A+1,0];x.set(L,g*p*M),_.set(d,m*p*M);const S=[M,M,M,M,M,M];v.set(S,y*p*M)}const E=new ht;E.setAttribute("position",new xt(x,g)),E.setAttribute("uv",new xt(_,m)),E.setAttribute("faceIndex",new xt(v,y)),e.push(E),n>Pa&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function P0(o,e,t){const i=new Ln(o,e,t);return i.texture.mapping=sl,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Nh(o,e,t,i,n){o.viewport.set(e,t,i,n),o.scissor.set(e,t,i,n)}function jC(o,e,t){const i=new Float32Array(lo),n=new R(0,1,0);return new sn({name:"SphericalGaussianBlur",defines:{n:lo,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${o}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:zy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:rs,depthTest:!1,depthWrite:!1})}function I0(){return new sn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:zy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:rs,depthTest:!1,depthWrite:!1})}function L0(){return new sn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:zy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:rs,depthTest:!1,depthWrite:!1})}function zy(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function JC(o){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===cc||l===hc,h=l===Xs||l===Er;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new Tg(o)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new Tg(o)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",s),u.texture):null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function r(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:r}}function QC(o){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=o.getExtension("WEBGL_depth_texture")||o.getExtension("MOZ_WEBGL_depth_texture")||o.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=o.getExtension("EXT_texture_filter_anisotropic")||o.getExtension("MOZ_EXT_texture_filter_anisotropic")||o.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=o.getExtension("WEBGL_compressed_texture_s3tc")||o.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=o.getExtension("WEBGL_compressed_texture_pvrtc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=o.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&$u("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function eN(o,e,t,i){const n={},s=new WeakMap;function r(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);for(const p in d.morphAttributes){const g=d.morphAttributes[p];for(let m=0,y=g.length;m<y;m++)e.remove(g[m])}d.removeEventListener("dispose",r),delete n[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),i.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return n[d.id]===!0||(d.addEventListener("dispose",r),n[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const p in d)e.update(d[p],o.ARRAY_BUFFER);const f=u.morphAttributes;for(const p in f){const g=f[p];for(let m=0,y=g.length;m<y;m++)e.update(g[m],o.ARRAY_BUFFER)}}function c(u){const d=[],f=u.index,p=u.attributes.position;let g=0;if(f!==null){const x=f.array;g=f.version;for(let _=0,v=x.length;_<v;_+=3){const E=x[_+0],M=x[_+1],b=x[_+2];d.push(E,M,M,b,b,E)}}else if(p!==void 0){const x=p.array;g=p.version;for(let _=0,v=x.length/3-1;_<v;_+=3){const E=_+0,M=_+1,b=_+2;d.push(E,M,M,b,b,E)}}else return;const m=new(kb(d)?Oy:By)(d,1);m.version=g;const y=s.get(u);y&&e.remove(y),s.set(u,m)}function h(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function tN(o,e,t){let i;function n(d){i=d}let s,r;function a(d){s=d.type,r=d.bytesPerElement}function l(d,f){o.drawElements(i,f,s,d*r),t.update(f,i,1)}function c(d,f,p){p!==0&&(o.drawElementsInstanced(i,f,s,d*r,p),t.update(f,i,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,s,d,0,p);let m=0;for(let y=0;y<p;y++)m+=f[y];t.update(m,i,1)}function u(d,f,p,g){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let y=0;y<d.length;y++)c(d[y]/r,f[y],g[y]);else{m.multiDrawElementsInstancedWEBGL(i,f,0,s,d,0,g,0,p);let y=0;for(let x=0;x<p;x++)y+=f[x];for(let x=0;x<g.length;x++)t.update(y,i,g[x])}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function iN(o){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,r,a){switch(t.calls++,r){case o.TRIANGLES:t.triangles+=a*(s/3);break;case o.LINES:t.lines+=a*(s/2);break;case o.LINE_STRIP:t.lines+=a*(s-1);break;case o.LINE_LOOP:t.lines+=a*s;break;case o.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function nN(o,e,t){const i=new WeakMap,n=new dt;function s(r,a,l){const c=r.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=i.get(a);if(d===void 0||d.count!==u){let L=function(){b.dispose(),i.delete(a),a.removeEventListener("dispose",L)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,g=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],y=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let _=0;f===!0&&(_=1),p===!0&&(_=2),g===!0&&(_=3);let v=a.attributes.position.count*_,E=1;v>e.maxTextureSize&&(E=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const M=new Float32Array(v*E*4*u),b=new Mf(M,v,E,u);b.type=en,b.needsUpdate=!0;const A=_*4;for(let S=0;S<u;S++){const T=m[S],B=y[S],F=x[S],G=v*E*4*S;for(let j=0;j<T.count;j++){const k=j*A;f===!0&&(n.fromBufferAttribute(T,j),M[G+k+0]=n.x,M[G+k+1]=n.y,M[G+k+2]=n.z,M[G+k+3]=0),p===!0&&(n.fromBufferAttribute(B,j),M[G+k+4]=n.x,M[G+k+5]=n.y,M[G+k+6]=n.z,M[G+k+7]=0),g===!0&&(n.fromBufferAttribute(F,j),M[G+k+8]=n.x,M[G+k+9]=n.y,M[G+k+10]=n.z,M[G+k+11]=F.itemSize===4?n.w:1)}}d={count:u,texture:b,size:new Y(v,E)},i.set(a,d),a.addEventListener("dispose",L)}if(r.isInstancedMesh===!0&&r.morphTexture!==null)l.getUniforms().setValue(o,"morphTexture",r.morphTexture,t);else{let f=0;for(let g=0;g<c.length;g++)f+=c[g];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(o,"morphTargetBaseInfluence",p),l.getUniforms().setValue(o,"morphTargetInfluences",c)}l.getUniforms().setValue(o,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(o,"morphTargetsTextureSize",d.size)}return{update:s}}function sN(o,e,t,i){let n=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,u=e.get(l,h);if(n.get(u)!==c&&(e.update(u),n.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,o.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,o.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;n.get(d)!==c&&(d.update(),n.set(d,c))}return u}function r(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:r}}let ky=class extends xi{constructor(e,t,i,n,s,r,a,l,c,h=yo){if(h!==yo&&h!==Ao)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===yo&&(i=qs),i===void 0&&h===Ao&&(i=wo),super(null,n,s,r,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:pi,this.minFilter=l!==void 0?l:pi,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}};const eM=new xi,D0=new ky(1,1),tM=new Mf,iM=new Fy,nM=new $c,U0=[],F0=[],B0=new Float32Array(16),O0=new Float32Array(9),z0=new Float32Array(4);function ol(o,e,t){const i=o[0];if(i<=0||i>0)return o;const n=e*t;let s=U0[n];if(s===void 0&&(s=new Float32Array(n),U0[n]=s),e!==0){i.toArray(s,0);for(let r=1,a=0;r!==e;++r)a+=t,o[r].toArray(s,a)}return s}function ci(o,e){if(o.length!==e.length)return!1;for(let t=0,i=o.length;t<i;t++)if(o[t]!==e[t])return!1;return!0}function hi(o,e){for(let t=0,i=e.length;t<i;t++)o[t]=e[t]}function Af(o,e){let t=F0[e];t===void 0&&(t=new Int32Array(e),F0[e]=t);for(let i=0;i!==e;++i)t[i]=o.allocateTextureUnit();return t}function rN(o,e){const t=this.cache;t[0]!==e&&(o.uniform1f(this.addr,e),t[0]=e)}function oN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ci(t,e))return;o.uniform2fv(this.addr,e),hi(t,e)}}function aN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(o.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ci(t,e))return;o.uniform3fv(this.addr,e),hi(t,e)}}function lN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ci(t,e))return;o.uniform4fv(this.addr,e),hi(t,e)}}function cN(o,e){const t=this.cache,i=e.elements;if(i===void 0){if(ci(t,e))return;o.uniformMatrix2fv(this.addr,!1,e),hi(t,e)}else{if(ci(t,i))return;z0.set(i),o.uniformMatrix2fv(this.addr,!1,z0),hi(t,i)}}function hN(o,e){const t=this.cache,i=e.elements;if(i===void 0){if(ci(t,e))return;o.uniformMatrix3fv(this.addr,!1,e),hi(t,e)}else{if(ci(t,i))return;O0.set(i),o.uniformMatrix3fv(this.addr,!1,O0),hi(t,i)}}function uN(o,e){const t=this.cache,i=e.elements;if(i===void 0){if(ci(t,e))return;o.uniformMatrix4fv(this.addr,!1,e),hi(t,e)}else{if(ci(t,i))return;B0.set(i),o.uniformMatrix4fv(this.addr,!1,B0),hi(t,i)}}function dN(o,e){const t=this.cache;t[0]!==e&&(o.uniform1i(this.addr,e),t[0]=e)}function fN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ci(t,e))return;o.uniform2iv(this.addr,e),hi(t,e)}}function pN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ci(t,e))return;o.uniform3iv(this.addr,e),hi(t,e)}}function mN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ci(t,e))return;o.uniform4iv(this.addr,e),hi(t,e)}}function gN(o,e){const t=this.cache;t[0]!==e&&(o.uniform1ui(this.addr,e),t[0]=e)}function yN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ci(t,e))return;o.uniform2uiv(this.addr,e),hi(t,e)}}function xN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ci(t,e))return;o.uniform3uiv(this.addr,e),hi(t,e)}}function _N(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ci(t,e))return;o.uniform4uiv(this.addr,e),hi(t,e)}}function vN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n);let s;this.type===o.SAMPLER_2D_SHADOW?(D0.compareFunction=Dy,s=D0):s=eM,t.setTexture2D(e||s,n)}function SN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||iM,n)}function bN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||nM,n)}function MN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||tM,n)}function TN(o){switch(o){case 5126:return rN;case 35664:return oN;case 35665:return aN;case 35666:return lN;case 35674:return cN;case 35675:return hN;case 35676:return uN;case 5124:case 35670:return dN;case 35667:case 35671:return fN;case 35668:case 35672:return pN;case 35669:case 35673:return mN;case 5125:return gN;case 36294:return yN;case 36295:return xN;case 36296:return _N;case 35678:case 36198:case 36298:case 36306:case 35682:return vN;case 35679:case 36299:case 36307:return SN;case 35680:case 36300:case 36308:case 36293:return bN;case 36289:case 36303:case 36311:case 36292:return MN}}function wN(o,e){o.uniform1fv(this.addr,e)}function AN(o,e){const t=ol(e,this.size,2);o.uniform2fv(this.addr,t)}function EN(o,e){const t=ol(e,this.size,3);o.uniform3fv(this.addr,t)}function RN(o,e){const t=ol(e,this.size,4);o.uniform4fv(this.addr,t)}function CN(o,e){const t=ol(e,this.size,4);o.uniformMatrix2fv(this.addr,!1,t)}function NN(o,e){const t=ol(e,this.size,9);o.uniformMatrix3fv(this.addr,!1,t)}function PN(o,e){const t=ol(e,this.size,16);o.uniformMatrix4fv(this.addr,!1,t)}function IN(o,e){o.uniform1iv(this.addr,e)}function LN(o,e){o.uniform2iv(this.addr,e)}function DN(o,e){o.uniform3iv(this.addr,e)}function UN(o,e){o.uniform4iv(this.addr,e)}function FN(o,e){o.uniform1uiv(this.addr,e)}function BN(o,e){o.uniform2uiv(this.addr,e)}function ON(o,e){o.uniform3uiv(this.addr,e)}function zN(o,e){o.uniform4uiv(this.addr,e)}function kN(o,e,t){const i=this.cache,n=e.length,s=Af(t,n);ci(i,s)||(o.uniform1iv(this.addr,s),hi(i,s));for(let r=0;r!==n;++r)t.setTexture2D(e[r]||eM,s[r])}function GN(o,e,t){const i=this.cache,n=e.length,s=Af(t,n);ci(i,s)||(o.uniform1iv(this.addr,s),hi(i,s));for(let r=0;r!==n;++r)t.setTexture3D(e[r]||iM,s[r])}function VN(o,e,t){const i=this.cache,n=e.length,s=Af(t,n);ci(i,s)||(o.uniform1iv(this.addr,s),hi(i,s));for(let r=0;r!==n;++r)t.setTextureCube(e[r]||nM,s[r])}function HN(o,e,t){const i=this.cache,n=e.length,s=Af(t,n);ci(i,s)||(o.uniform1iv(this.addr,s),hi(i,s));for(let r=0;r!==n;++r)t.setTexture2DArray(e[r]||tM,s[r])}function WN(o){switch(o){case 5126:return wN;case 35664:return AN;case 35665:return EN;case 35666:return RN;case 35674:return CN;case 35675:return NN;case 35676:return PN;case 5124:case 35670:return IN;case 35667:case 35671:return LN;case 35668:case 35672:return DN;case 35669:case 35673:return UN;case 5125:return FN;case 36294:return BN;case 36295:return ON;case 36296:return zN;case 35678:case 36198:case 36298:case 36306:case 35682:return kN;case 35679:case 36299:case 36307:return GN;case 35680:case 36300:case 36308:case 36293:return VN;case 36289:case 36303:case 36311:case 36292:return HN}}class $N{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=TN(t.type)}}class XN{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=WN(t.type)}}class qN{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,r=n.length;s!==r;++s){const a=n[s];a.setValue(e,t[a.id],i)}}}const Vp=/(\w+)(\])?(\[|\.)?/g;function k0(o,e){o.seq.push(e),o.map[e.id]=e}function YN(o,e,t){const i=o.name,n=i.length;for(Vp.lastIndex=0;;){const s=Vp.exec(i),r=Vp.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&r+2===n){k0(t,c===void 0?new $N(a,o,e):new XN(a,o,e));break}else{let u=t.map[a];u===void 0&&(u=new qN(a),k0(t,u)),t=u}}}class Yu{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n),r=e.getUniformLocation(t,s.name);YN(s,r,this)}}setValue(e,t,i,n){const s=this.map[t];s!==void 0&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,r=t.length;s!==r;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const r=e[n];r.id in t&&i.push(r)}return i}}function G0(o,e,t){const i=o.createShader(e);return o.shaderSource(i,t),o.compileShader(i),i}const ZN=37297;let KN=0;function jN(o,e){const t=o.split(`
`),i=[],n=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let r=n;r<s;r++){const a=r+1;i.push(`${a===e?">":" "} ${a}: ${t[r]}`)}return i.join(`
`)}function JN(o){const e=vt.getPrimaries(vt.workingColorSpace),t=vt.getPrimaries(o);let i;switch(e===t?i="":e===yc&&t===gc?i="LinearDisplayP3ToLinearSRGB":e===gc&&t===yc&&(i="LinearSRGBToLinearDisplayP3"),o){case js:case Vc:return[i,"LinearTransferOETF"];case En:case bf:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",o),[i,"LinearTransferOETF"]}}function V0(o,e,t){const i=o.getShaderParameter(e,o.COMPILE_STATUS),n=o.getShaderInfoLog(e).trim();if(i&&n==="")return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const r=parseInt(s[1]);return t.toUpperCase()+`

`+n+`

`+jN(o.getShaderSource(e),r)}else return n}function QN(o,e){const t=JN(e);return`vec4 ${o}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function eP(o,e){let t;switch(e){case mb:t="Linear";break;case gb:t="Reinhard";break;case yb:t="Cineon";break;case xb:t="ACESFilmic";break;case vb:t="AgX";break;case Sb:t="Neutral";break;case _b:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+o+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Ph=new R;function tP(){vt.getLuminanceCoefficients(Ph);const o=Ph.x.toFixed(4),e=Ph.y.toFixed(4),t=Ph.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${o}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function iP(o){return[o.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",o.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Wl).join(`
`)}function nP(o){const e=[];for(const t in o){const i=o[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function sP(o,e){const t={},i=o.getProgramParameter(e,o.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const s=o.getActiveAttrib(e,n),r=s.name;let a=1;s.type===o.FLOAT_MAT2&&(a=2),s.type===o.FLOAT_MAT3&&(a=3),s.type===o.FLOAT_MAT4&&(a=4),t[r]={type:s.type,location:o.getAttribLocation(e,r),locationSize:a}}return t}function Wl(o){return o!==""}function H0(o,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return o.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function W0(o,e){return o.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const rP=/^[ \t]*#include +<([\w\d./]+)>/gm;function wg(o){return o.replace(rP,aP)}const oP=new Map;function aP(o,e){let t=rt[e];if(t===void 0){const i=oP.get(e);if(i!==void 0)t=rt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return wg(t)}const lP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function $0(o){return o.replace(lP,cP)}function cP(o,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function X0(o){let e=`precision ${o.precision} float;
	precision ${o.precision} int;
	precision ${o.precision} sampler2D;
	precision ${o.precision} samplerCube;
	precision ${o.precision} sampler3D;
	precision ${o.precision} sampler2DArray;
	precision ${o.precision} sampler2DShadow;
	precision ${o.precision} samplerCubeShadow;
	precision ${o.precision} sampler2DArrayShadow;
	precision ${o.precision} isampler2D;
	precision ${o.precision} isampler3D;
	precision ${o.precision} isamplerCube;
	precision ${o.precision} isampler2DArray;
	precision ${o.precision} usampler2D;
	precision ${o.precision} usampler3D;
	precision ${o.precision} usamplerCube;
	precision ${o.precision} usampler2DArray;
	`;return o.precision==="highp"?e+=`
#define HIGH_PRECISION`:o.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:o.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function hP(o){let e="SHADOWMAP_TYPE_BASIC";return o.shadowMapType===by?e="SHADOWMAP_TYPE_PCF":o.shadowMapType===YS?e="SHADOWMAP_TYPE_PCF_SOFT":o.shadowMapType===Qn&&(e="SHADOWMAP_TYPE_VSM"),e}function uP(o){let e="ENVMAP_TYPE_CUBE";if(o.envMap)switch(o.envMapMode){case Xs:case Er:e="ENVMAP_TYPE_CUBE";break;case sl:e="ENVMAP_TYPE_CUBE_UV";break}return e}function dP(o){let e="ENVMAP_MODE_REFLECTION";if(o.envMap)switch(o.envMapMode){case Er:e="ENVMAP_MODE_REFRACTION";break}return e}function fP(o){let e="ENVMAP_BLENDING_NONE";if(o.envMap)switch(o.combine){case kc:e="ENVMAP_BLENDING_MULTIPLY";break;case fb:e="ENVMAP_BLENDING_MIX";break;case pb:e="ENVMAP_BLENDING_ADD";break}return e}function pP(o){const e=o.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function mP(o,e,t,i){const n=o.getContext(),s=t.defines;let r=t.vertexShader,a=t.fragmentShader;const l=hP(t),c=uP(t),h=dP(t),u=fP(t),d=pP(t),f=iP(t),p=nP(s),g=n.createProgram();let m,y,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Wl).join(`
`),m.length>0&&(m+=`
`),y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Wl).join(`
`),y.length>0&&(y+=`
`)):(m=[X0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Wl).join(`
`),y=[X0(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ks?"#define TONE_MAPPING":"",t.toneMapping!==ks?rt.tonemapping_pars_fragment:"",t.toneMapping!==ks?eP("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",rt.colorspace_pars_fragment,QN("linearToOutputTexel",t.outputColorSpace),tP(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Wl).join(`
`)),r=wg(r),r=H0(r,t),r=W0(r,t),a=wg(a),a=H0(a,t),a=W0(a,t),r=$0(r),a=$0(a),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,y=["#define varying in",t.glslVersion===bg?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===bg?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const _=x+m+r,v=x+y+a,E=G0(n,n.VERTEX_SHADER,_),M=G0(n,n.FRAGMENT_SHADER,v);n.attachShader(g,E),n.attachShader(g,M),t.index0AttributeName!==void 0?n.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(g,0,"position"),n.linkProgram(g);function b(T){if(o.debug.checkShaderErrors){const B=n.getProgramInfoLog(g).trim(),F=n.getShaderInfoLog(E).trim(),G=n.getShaderInfoLog(M).trim();let j=!0,k=!0;if(n.getProgramParameter(g,n.LINK_STATUS)===!1)if(j=!1,typeof o.debug.onShaderError=="function")o.debug.onShaderError(n,g,E,M);else{const ae=V0(n,E,"vertex"),X=V0(n,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(g,n.VALIDATE_STATUS)+`

Material Name: `+T.name+`
Material Type: `+T.type+`

Program Info Log: `+B+`
`+ae+`
`+X)}else B!==""?console.warn("THREE.WebGLProgram: Program Info Log:",B):(F===""||G==="")&&(k=!1);k&&(T.diagnostics={runnable:j,programLog:B,vertexShader:{log:F,prefix:m},fragmentShader:{log:G,prefix:y}})}n.deleteShader(E),n.deleteShader(M),A=new Yu(n,g),L=sP(n,g)}let A;this.getUniforms=function(){return A===void 0&&b(this),A};let L;this.getAttributes=function(){return L===void 0&&b(this),L};let S=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return S===!1&&(S=n.getProgramParameter(g,ZN)),S},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(g),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=KN++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=E,this.fragmentShader=M,this}let gP=0;class yP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),s=this._getShaderStage(i),r=this._getShaderCacheForMaterial(e);return r.has(n)===!1&&(r.add(n),n.usedTimes++),r.has(s)===!1&&(r.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new xP(e),t.set(e,i)),i}}class xP{constructor(e){this.id=gP++,this.code=e,this.usedTimes=0}}function _P(o,e,t,i,n,s,r){const a=new Tf,l=new yP,c=new Set,h=[],u=n.logarithmicDepthBuffer,d=n.reverseDepthBuffer,f=n.vertexTextures;let p=n.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(S){return c.add(S),S===0?"uv":`uv${S}`}function y(S,T,B,F,G){const j=F.fog,k=G.geometry,ae=S.isMeshStandardMaterial?F.environment:null,X=(S.isMeshStandardMaterial?t:e).get(S.envMap||ae),ce=X&&X.mapping===sl?X.image.height:null,ue=g[S.type];S.precision!==null&&(p=n.getMaxPrecision(S.precision),p!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",p,"instead."));const pe=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,Ze=pe!==void 0?pe.length:0;let Qe=0;k.morphAttributes.position!==void 0&&(Qe=1),k.morphAttributes.normal!==void 0&&(Qe=2),k.morphAttributes.color!==void 0&&(Qe=3);let J,le,Te,_e;if(ue){const ji=Vi[ue];J=ji.vertexShader,le=ji.fragmentShader}else J=S.vertexShader,le=S.fragmentShader,l.update(S),Te=l.getVertexShaderID(S),_e=l.getFragmentShaderID(S);const Ve=o.getRenderTarget(),Xe=G.isInstancedMesh===!0,We=G.isBatchedMesh===!0,et=!!S.map,se=!!S.matcap,P=!!X,ve=!!S.aoMap,xe=!!S.lightMap,he=!!S.bumpMap,Se=!!S.normalMap,ke=!!S.displacementMap,Ce=!!S.emissiveMap,N=!!S.metalnessMap,w=!!S.roughnessMap,H=S.anisotropy>0,ie=S.clearcoat>0,re=S.dispersion>0,ne=S.iridescence>0,Be=S.sheen>0,be=S.transmission>0,Le=H&&!!S.anisotropyMap,ft=ie&&!!S.clearcoatMap,de=ie&&!!S.clearcoatNormalMap,De=ie&&!!S.clearcoatRoughnessMap,Ke=ne&&!!S.iridescenceMap,je=ne&&!!S.iridescenceThicknessMap,Ue=Be&&!!S.sheenColorMap,pt=Be&&!!S.sheenRoughnessMap,tt=!!S.specularMap,Lt=!!S.specularColorMap,D=!!S.specularIntensityMap,Ne=be&&!!S.transmissionMap,Z=be&&!!S.thicknessMap,oe=!!S.gradientMap,Ee=!!S.alphaMap,Pe=S.alphaTest>0,gt=!!S.alphaHash,jt=!!S.extensions;let Ki=ks;S.toneMapped&&(Ve===null||Ve.isXRRenderTarget===!0)&&(Ki=o.toneMapping);const St={shaderID:ue,shaderType:S.type,shaderName:S.name,vertexShader:J,fragmentShader:le,defines:S.defines,customVertexShaderID:Te,customFragmentShaderID:_e,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:p,batching:We,batchingColor:We&&G._colorsTexture!==null,instancing:Xe,instancingColor:Xe&&G.instanceColor!==null,instancingMorph:Xe&&G.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:Ve===null?o.outputColorSpace:Ve.isXRRenderTarget===!0?Ve.texture.colorSpace:js,alphaToCoverage:!!S.alphaToCoverage,map:et,matcap:se,envMap:P,envMapMode:P&&X.mapping,envMapCubeUVHeight:ce,aoMap:ve,lightMap:xe,bumpMap:he,normalMap:Se,displacementMap:f&&ke,emissiveMap:Ce,normalMapObjectSpace:Se&&S.normalMapType===Nb,normalMapTangentSpace:Se&&S.normalMapType===Dr,metalnessMap:N,roughnessMap:w,anisotropy:H,anisotropyMap:Le,clearcoat:ie,clearcoatMap:ft,clearcoatNormalMap:de,clearcoatRoughnessMap:De,dispersion:re,iridescence:ne,iridescenceMap:Ke,iridescenceThicknessMap:je,sheen:Be,sheenColorMap:Ue,sheenRoughnessMap:pt,specularMap:tt,specularColorMap:Lt,specularIntensityMap:D,transmission:be,transmissionMap:Ne,thicknessMap:Z,gradientMap:oe,opaque:S.transparent===!1&&S.blending===go&&S.alphaToCoverage===!1,alphaMap:Ee,alphaTest:Pe,alphaHash:gt,combine:S.combine,mapUv:et&&m(S.map.channel),aoMapUv:ve&&m(S.aoMap.channel),lightMapUv:xe&&m(S.lightMap.channel),bumpMapUv:he&&m(S.bumpMap.channel),normalMapUv:Se&&m(S.normalMap.channel),displacementMapUv:ke&&m(S.displacementMap.channel),emissiveMapUv:Ce&&m(S.emissiveMap.channel),metalnessMapUv:N&&m(S.metalnessMap.channel),roughnessMapUv:w&&m(S.roughnessMap.channel),anisotropyMapUv:Le&&m(S.anisotropyMap.channel),clearcoatMapUv:ft&&m(S.clearcoatMap.channel),clearcoatNormalMapUv:de&&m(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:De&&m(S.clearcoatRoughnessMap.channel),iridescenceMapUv:Ke&&m(S.iridescenceMap.channel),iridescenceThicknessMapUv:je&&m(S.iridescenceThicknessMap.channel),sheenColorMapUv:Ue&&m(S.sheenColorMap.channel),sheenRoughnessMapUv:pt&&m(S.sheenRoughnessMap.channel),specularMapUv:tt&&m(S.specularMap.channel),specularColorMapUv:Lt&&m(S.specularColorMap.channel),specularIntensityMapUv:D&&m(S.specularIntensityMap.channel),transmissionMapUv:Ne&&m(S.transmissionMap.channel),thicknessMapUv:Z&&m(S.thicknessMap.channel),alphaMapUv:Ee&&m(S.alphaMap.channel),vertexTangents:!!k.attributes.tangent&&(Se||H),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,pointsUvs:G.isPoints===!0&&!!k.attributes.uv&&(et||Ee),fog:!!j,useFog:S.fog===!0,fogExp2:!!j&&j.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:d,skinning:G.isSkinnedMesh===!0,morphTargets:k.morphAttributes.position!==void 0,morphNormals:k.morphAttributes.normal!==void 0,morphColors:k.morphAttributes.color!==void 0,morphTargetsCount:Ze,morphTextureStride:Qe,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numLightProbes:T.numLightProbes,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:S.dithering,shadowMapEnabled:o.shadowMap.enabled&&B.length>0,shadowMapType:o.shadowMap.type,toneMapping:Ki,decodeVideoTexture:et&&S.map.isVideoTexture===!0&&vt.getTransfer(S.map.colorSpace)===Dt,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===ts,flipSided:S.side===qi,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:jt&&S.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(jt&&S.extensions.multiDraw===!0||We)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return St.vertexUv1s=c.has(1),St.vertexUv2s=c.has(2),St.vertexUv3s=c.has(3),c.clear(),St}function x(S){const T=[];if(S.shaderID?T.push(S.shaderID):(T.push(S.customVertexShaderID),T.push(S.customFragmentShaderID)),S.defines!==void 0)for(const B in S.defines)T.push(B),T.push(S.defines[B]);return S.isRawShaderMaterial===!1&&(_(T,S),v(T,S),T.push(o.outputColorSpace)),T.push(S.customProgramCacheKey),T.join()}function _(S,T){S.push(T.precision),S.push(T.outputColorSpace),S.push(T.envMapMode),S.push(T.envMapCubeUVHeight),S.push(T.mapUv),S.push(T.alphaMapUv),S.push(T.lightMapUv),S.push(T.aoMapUv),S.push(T.bumpMapUv),S.push(T.normalMapUv),S.push(T.displacementMapUv),S.push(T.emissiveMapUv),S.push(T.metalnessMapUv),S.push(T.roughnessMapUv),S.push(T.anisotropyMapUv),S.push(T.clearcoatMapUv),S.push(T.clearcoatNormalMapUv),S.push(T.clearcoatRoughnessMapUv),S.push(T.iridescenceMapUv),S.push(T.iridescenceThicknessMapUv),S.push(T.sheenColorMapUv),S.push(T.sheenRoughnessMapUv),S.push(T.specularMapUv),S.push(T.specularColorMapUv),S.push(T.specularIntensityMapUv),S.push(T.transmissionMapUv),S.push(T.thicknessMapUv),S.push(T.combine),S.push(T.fogExp2),S.push(T.sizeAttenuation),S.push(T.morphTargetsCount),S.push(T.morphAttributeCount),S.push(T.numDirLights),S.push(T.numPointLights),S.push(T.numSpotLights),S.push(T.numSpotLightMaps),S.push(T.numHemiLights),S.push(T.numRectAreaLights),S.push(T.numDirLightShadows),S.push(T.numPointLightShadows),S.push(T.numSpotLightShadows),S.push(T.numSpotLightShadowsWithMaps),S.push(T.numLightProbes),S.push(T.shadowMapType),S.push(T.toneMapping),S.push(T.numClippingPlanes),S.push(T.numClipIntersection),S.push(T.depthPacking)}function v(S,T){a.disableAll(),T.supportsVertexTextures&&a.enable(0),T.instancing&&a.enable(1),T.instancingColor&&a.enable(2),T.instancingMorph&&a.enable(3),T.matcap&&a.enable(4),T.envMap&&a.enable(5),T.normalMapObjectSpace&&a.enable(6),T.normalMapTangentSpace&&a.enable(7),T.clearcoat&&a.enable(8),T.iridescence&&a.enable(9),T.alphaTest&&a.enable(10),T.vertexColors&&a.enable(11),T.vertexAlphas&&a.enable(12),T.vertexUv1s&&a.enable(13),T.vertexUv2s&&a.enable(14),T.vertexUv3s&&a.enable(15),T.vertexTangents&&a.enable(16),T.anisotropy&&a.enable(17),T.alphaHash&&a.enable(18),T.batching&&a.enable(19),T.dispersion&&a.enable(20),T.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),T.fog&&a.enable(0),T.useFog&&a.enable(1),T.flatShading&&a.enable(2),T.logarithmicDepthBuffer&&a.enable(3),T.reverseDepthBuffer&&a.enable(4),T.skinning&&a.enable(5),T.morphTargets&&a.enable(6),T.morphNormals&&a.enable(7),T.morphColors&&a.enable(8),T.premultipliedAlpha&&a.enable(9),T.shadowMapEnabled&&a.enable(10),T.doubleSided&&a.enable(11),T.flipSided&&a.enable(12),T.useDepthPacking&&a.enable(13),T.dithering&&a.enable(14),T.transmission&&a.enable(15),T.sheen&&a.enable(16),T.opaque&&a.enable(17),T.pointsUvs&&a.enable(18),T.decodeVideoTexture&&a.enable(19),T.alphaToCoverage&&a.enable(20),S.push(a.mask)}function E(S){const T=g[S.type];let B;if(T){const F=Vi[T];B=Wc.clone(F.uniforms)}else B=S.uniforms;return B}function M(S,T){let B;for(let F=0,G=h.length;F<G;F++){const j=h[F];if(j.cacheKey===T){B=j,++B.usedTimes;break}}return B===void 0&&(B=new mP(o,T,S,s),h.push(B)),B}function b(S){if(--S.usedTimes===0){const T=h.indexOf(S);h[T]=h[h.length-1],h.pop(),S.destroy()}}function A(S){l.remove(S)}function L(){l.dispose()}return{getParameters:y,getProgramCacheKey:x,getUniforms:E,acquireProgram:M,releaseProgram:b,releaseShaderCache:A,programs:h,dispose:L}}function vP(){let o=new WeakMap;function e(r){return o.has(r)}function t(r){let a=o.get(r);return a===void 0&&(a={},o.set(r,a)),a}function i(r){o.delete(r)}function n(r,a,l){o.get(r)[a]=l}function s(){o=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:s}}function SP(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function q0(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function Y0(){const o=[];let e=0;const t=[],i=[],n=[];function s(){e=0,t.length=0,i.length=0,n.length=0}function r(u,d,f,p,g,m){let y=o[e];return y===void 0?(y={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:g,group:m},o[e]=y):(y.id=u.id,y.object=u,y.geometry=d,y.material=f,y.groupOrder=p,y.renderOrder=u.renderOrder,y.z=g,y.group=m),e++,y}function a(u,d,f,p,g,m){const y=r(u,d,f,p,g,m);f.transmission>0?i.push(y):f.transparent===!0?n.push(y):t.push(y)}function l(u,d,f,p,g,m){const y=r(u,d,f,p,g,m);f.transmission>0?i.unshift(y):f.transparent===!0?n.unshift(y):t.unshift(y)}function c(u,d){t.length>1&&t.sort(u||SP),i.length>1&&i.sort(d||q0),n.length>1&&n.sort(d||q0)}function h(){for(let u=e,d=o.length;u<d;u++){const f=o[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:s,push:a,unshift:l,finish:h,sort:c}}function bP(){let o=new WeakMap;function e(i,n){const s=o.get(i);let r;return s===void 0?(r=new Y0,o.set(i,[r])):n>=s.length?(r=new Y0,s.push(r)):r=s[n],r}function t(){o=new WeakMap}return{get:e,dispose:t}}function MP(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new R,color:new Ae};break;case"SpotLight":t={position:new R,direction:new R,color:new Ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new R,color:new Ae,distance:0,decay:0};break;case"HemisphereLight":t={direction:new R,skyColor:new Ae,groundColor:new Ae};break;case"RectAreaLight":t={color:new Ae,position:new R,halfWidth:new R,halfHeight:new R};break}return o[e.id]=t,t}}}function TP(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y,shadowCameraNear:1,shadowCameraFar:1e3};break}return o[e.id]=t,t}}}let wP=0;function AP(o,e){return(e.castShadow?2:0)-(o.castShadow?2:0)+(e.map?1:0)-(o.map?1:0)}function EP(o){const e=new MP,t=TP(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new R);const n=new R,s=new $e,r=new $e;function a(c){let h=0,u=0,d=0;for(let L=0;L<9;L++)i.probe[L].set(0,0,0);let f=0,p=0,g=0,m=0,y=0,x=0,_=0,v=0,E=0,M=0,b=0;c.sort(AP);for(let L=0,S=c.length;L<S;L++){const T=c[L],B=T.color,F=T.intensity,G=T.distance,j=T.shadow&&T.shadow.map?T.shadow.map.texture:null;if(T.isAmbientLight)h+=B.r*F,u+=B.g*F,d+=B.b*F;else if(T.isLightProbe){for(let k=0;k<9;k++)i.probe[k].addScaledVector(T.sh.coefficients[k],F);b++}else if(T.isDirectionalLight){const k=e.get(T);if(k.color.copy(T.color).multiplyScalar(T.intensity),T.castShadow){const ae=T.shadow,X=t.get(T);X.shadowIntensity=ae.intensity,X.shadowBias=ae.bias,X.shadowNormalBias=ae.normalBias,X.shadowRadius=ae.radius,X.shadowMapSize=ae.mapSize,i.directionalShadow[f]=X,i.directionalShadowMap[f]=j,i.directionalShadowMatrix[f]=T.shadow.matrix,x++}i.directional[f]=k,f++}else if(T.isSpotLight){const k=e.get(T);k.position.setFromMatrixPosition(T.matrixWorld),k.color.copy(B).multiplyScalar(F),k.distance=G,k.coneCos=Math.cos(T.angle),k.penumbraCos=Math.cos(T.angle*(1-T.penumbra)),k.decay=T.decay,i.spot[g]=k;const ae=T.shadow;if(T.map&&(i.spotLightMap[E]=T.map,E++,ae.updateMatrices(T),T.castShadow&&M++),i.spotLightMatrix[g]=ae.matrix,T.castShadow){const X=t.get(T);X.shadowIntensity=ae.intensity,X.shadowBias=ae.bias,X.shadowNormalBias=ae.normalBias,X.shadowRadius=ae.radius,X.shadowMapSize=ae.mapSize,i.spotShadow[g]=X,i.spotShadowMap[g]=j,v++}g++}else if(T.isRectAreaLight){const k=e.get(T);k.color.copy(B).multiplyScalar(F),k.halfWidth.set(T.width*.5,0,0),k.halfHeight.set(0,T.height*.5,0),i.rectArea[m]=k,m++}else if(T.isPointLight){const k=e.get(T);if(k.color.copy(T.color).multiplyScalar(T.intensity),k.distance=T.distance,k.decay=T.decay,T.castShadow){const ae=T.shadow,X=t.get(T);X.shadowIntensity=ae.intensity,X.shadowBias=ae.bias,X.shadowNormalBias=ae.normalBias,X.shadowRadius=ae.radius,X.shadowMapSize=ae.mapSize,X.shadowCameraNear=ae.camera.near,X.shadowCameraFar=ae.camera.far,i.pointShadow[p]=X,i.pointShadowMap[p]=j,i.pointShadowMatrix[p]=T.shadow.matrix,_++}i.point[p]=k,p++}else if(T.isHemisphereLight){const k=e.get(T);k.skyColor.copy(T.color).multiplyScalar(F),k.groundColor.copy(T.groundColor).multiplyScalar(F),i.hemi[y]=k,y++}}m>0&&(o.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ye.LTC_FLOAT_1,i.rectAreaLTC2=ye.LTC_FLOAT_2):(i.rectAreaLTC1=ye.LTC_HALF_1,i.rectAreaLTC2=ye.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=u,i.ambient[2]=d;const A=i.hash;(A.directionalLength!==f||A.pointLength!==p||A.spotLength!==g||A.rectAreaLength!==m||A.hemiLength!==y||A.numDirectionalShadows!==x||A.numPointShadows!==_||A.numSpotShadows!==v||A.numSpotMaps!==E||A.numLightProbes!==b)&&(i.directional.length=f,i.spot.length=g,i.rectArea.length=m,i.point.length=p,i.hemi.length=y,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=_,i.pointShadowMap.length=_,i.spotShadow.length=v,i.spotShadowMap.length=v,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=_,i.spotLightMatrix.length=v+E-M,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=M,i.numLightProbes=b,A.directionalLength=f,A.pointLength=p,A.spotLength=g,A.rectAreaLength=m,A.hemiLength=y,A.numDirectionalShadows=x,A.numPointShadows=_,A.numSpotShadows=v,A.numSpotMaps=E,A.numLightProbes=b,i.version=wP++)}function l(c,h){let u=0,d=0,f=0,p=0,g=0;const m=h.matrixWorldInverse;for(let y=0,x=c.length;y<x;y++){const _=c[y];if(_.isDirectionalLight){const v=i.directional[u];v.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),v.direction.sub(n),v.direction.transformDirection(m),u++}else if(_.isSpotLight){const v=i.spot[f];v.position.setFromMatrixPosition(_.matrixWorld),v.position.applyMatrix4(m),v.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),v.direction.sub(n),v.direction.transformDirection(m),f++}else if(_.isRectAreaLight){const v=i.rectArea[p];v.position.setFromMatrixPosition(_.matrixWorld),v.position.applyMatrix4(m),r.identity(),s.copy(_.matrixWorld),s.premultiply(m),r.extractRotation(s),v.halfWidth.set(_.width*.5,0,0),v.halfHeight.set(0,_.height*.5,0),v.halfWidth.applyMatrix4(r),v.halfHeight.applyMatrix4(r),p++}else if(_.isPointLight){const v=i.point[d];v.position.setFromMatrixPosition(_.matrixWorld),v.position.applyMatrix4(m),d++}else if(_.isHemisphereLight){const v=i.hemi[g];v.direction.setFromMatrixPosition(_.matrixWorld),v.direction.transformDirection(m),g++}}}return{setup:a,setupView:l,state:i}}function Z0(o){const e=new EP(o),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function s(h){t.push(h)}function r(h){i.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:r}}function RP(o){let e=new WeakMap;function t(n,s=0){const r=e.get(n);let a;return r===void 0?(a=new Z0(o),e.set(n,[a])):s>=r.length?(a=new Z0(o),r.push(a)):a=r[s],a}function i(){e=new WeakMap}return{get:t,dispose:i}}class Gy extends Oi{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Rb,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Vy extends Oi{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const CP=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,NP=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function PP(o,e,t){let i=new Xc;const n=new Y,s=new Y,r=new dt,a=new Gy({depthPacking:Cb}),l=new Vy,c={},h=t.maxTextureSize,u={[$s]:qi,[qi]:$s,[ts]:ts},d=new sn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Y},radius:{value:4}},vertexShader:CP,fragmentShader:NP}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new ht;p.setAttribute("position",new xt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new qt(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=by;let y=this.type;this.render=function(M,b,A){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||M.length===0)return;const L=o.getRenderTarget(),S=o.getActiveCubeFace(),T=o.getActiveMipmapLevel(),B=o.state;B.setBlending(rs),B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);const F=y!==Qn&&this.type===Qn,G=y===Qn&&this.type!==Qn;for(let j=0,k=M.length;j<k;j++){const ae=M[j],X=ae.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",ae,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;n.copy(X.mapSize);const ce=X.getFrameExtents();if(n.multiply(ce),s.copy(X.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(s.x=Math.floor(h/ce.x),n.x=s.x*ce.x,X.mapSize.x=s.x),n.y>h&&(s.y=Math.floor(h/ce.y),n.y=s.y*ce.y,X.mapSize.y=s.y)),X.map===null||F===!0||G===!0){const pe=this.type!==Qn?{minFilter:pi,magFilter:pi}:{};X.map!==null&&X.map.dispose(),X.map=new Ln(n.x,n.y,pe),X.map.texture.name=ae.name+".shadowMap",X.camera.updateProjectionMatrix()}o.setRenderTarget(X.map),o.clear();const ue=X.getViewportCount();for(let pe=0;pe<ue;pe++){const Ze=X.getViewport(pe);r.set(s.x*Ze.x,s.y*Ze.y,s.x*Ze.z,s.y*Ze.w),B.viewport(r),X.updateMatrices(ae,pe),i=X.getFrustum(),v(b,A,X.camera,ae,this.type)}X.isPointLightShadow!==!0&&this.type===Qn&&x(X,A),X.needsUpdate=!1}y=this.type,m.needsUpdate=!1,o.setRenderTarget(L,S,T)};function x(M,b){const A=e.update(g);d.defines.VSM_SAMPLES!==M.blurSamples&&(d.defines.VSM_SAMPLES=M.blurSamples,f.defines.VSM_SAMPLES=M.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),M.mapPass===null&&(M.mapPass=new Ln(n.x,n.y)),d.uniforms.shadow_pass.value=M.map.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,o.setRenderTarget(M.mapPass),o.clear(),o.renderBufferDirect(b,null,A,d,g,null),f.uniforms.shadow_pass.value=M.mapPass.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,o.setRenderTarget(M.map),o.clear(),o.renderBufferDirect(b,null,A,f,g,null)}function _(M,b,A,L){let S=null;const T=A.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(T!==void 0)S=T;else if(S=A.isPointLight===!0?l:a,o.localClippingEnabled&&b.clipShadows===!0&&Array.isArray(b.clippingPlanes)&&b.clippingPlanes.length!==0||b.displacementMap&&b.displacementScale!==0||b.alphaMap&&b.alphaTest>0||b.map&&b.alphaTest>0){const B=S.uuid,F=b.uuid;let G=c[B];G===void 0&&(G={},c[B]=G);let j=G[F];j===void 0&&(j=S.clone(),G[F]=j,b.addEventListener("dispose",E)),S=j}if(S.visible=b.visible,S.wireframe=b.wireframe,L===Qn?S.side=b.shadowSide!==null?b.shadowSide:b.side:S.side=b.shadowSide!==null?b.shadowSide:u[b.side],S.alphaMap=b.alphaMap,S.alphaTest=b.alphaTest,S.map=b.map,S.clipShadows=b.clipShadows,S.clippingPlanes=b.clippingPlanes,S.clipIntersection=b.clipIntersection,S.displacementMap=b.displacementMap,S.displacementScale=b.displacementScale,S.displacementBias=b.displacementBias,S.wireframeLinewidth=b.wireframeLinewidth,S.linewidth=b.linewidth,A.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const B=o.properties.get(S);B.light=A}return S}function v(M,b,A,L,S){if(M.visible===!1)return;if(M.layers.test(b.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&S===Qn)&&(!M.frustumCulled||i.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,M.matrixWorld);const F=e.update(M),G=M.material;if(Array.isArray(G)){const j=F.groups;for(let k=0,ae=j.length;k<ae;k++){const X=j[k],ce=G[X.materialIndex];if(ce&&ce.visible){const ue=_(M,ce,L,S);M.onBeforeShadow(o,M,b,A,F,ue,X),o.renderBufferDirect(A,null,F,ue,M,X),M.onAfterShadow(o,M,b,A,F,ue,X)}}}else if(G.visible){const j=_(M,G,L,S);M.onBeforeShadow(o,M,b,A,F,j,null),o.renderBufferDirect(A,null,F,j,M,null),M.onAfterShadow(o,M,b,A,F,j,null)}}const B=M.children;for(let F=0,G=B.length;F<G;F++)v(B[F],b,A,L,S)}function E(M){M.target.removeEventListener("dispose",E);for(const A in c){const L=c[A],S=M.target.uuid;S in L&&(L[S].dispose(),delete L[S])}}}const IP={[od]:ad,[ld]:ud,[cd]:dd,[To]:hd,[ad]:od,[ud]:ld,[dd]:cd,[hd]:To};function LP(o){function e(){let D=!1;const Ne=new dt;let Z=null;const oe=new dt(0,0,0,0);return{setMask:function(Ee){Z!==Ee&&!D&&(o.colorMask(Ee,Ee,Ee,Ee),Z=Ee)},setLocked:function(Ee){D=Ee},setClear:function(Ee,Pe,gt,jt,Ki){Ki===!0&&(Ee*=jt,Pe*=jt,gt*=jt),Ne.set(Ee,Pe,gt,jt),oe.equals(Ne)===!1&&(o.clearColor(Ee,Pe,gt,jt),oe.copy(Ne))},reset:function(){D=!1,Z=null,oe.set(-1,0,0,0)}}}function t(){let D=!1,Ne=!1,Z=null,oe=null,Ee=null;return{setReversed:function(Pe){Ne=Pe},setTest:function(Pe){Pe?Te(o.DEPTH_TEST):_e(o.DEPTH_TEST)},setMask:function(Pe){Z!==Pe&&!D&&(o.depthMask(Pe),Z=Pe)},setFunc:function(Pe){if(Ne&&(Pe=IP[Pe]),oe!==Pe){switch(Pe){case od:o.depthFunc(o.NEVER);break;case ad:o.depthFunc(o.ALWAYS);break;case ld:o.depthFunc(o.LESS);break;case To:o.depthFunc(o.LEQUAL);break;case cd:o.depthFunc(o.EQUAL);break;case hd:o.depthFunc(o.GEQUAL);break;case ud:o.depthFunc(o.GREATER);break;case dd:o.depthFunc(o.NOTEQUAL);break;default:o.depthFunc(o.LEQUAL)}oe=Pe}},setLocked:function(Pe){D=Pe},setClear:function(Pe){Ee!==Pe&&(o.clearDepth(Pe),Ee=Pe)},reset:function(){D=!1,Z=null,oe=null,Ee=null}}}function i(){let D=!1,Ne=null,Z=null,oe=null,Ee=null,Pe=null,gt=null,jt=null,Ki=null;return{setTest:function(St){D||(St?Te(o.STENCIL_TEST):_e(o.STENCIL_TEST))},setMask:function(St){Ne!==St&&!D&&(o.stencilMask(St),Ne=St)},setFunc:function(St,ji,gs){(Z!==St||oe!==ji||Ee!==gs)&&(o.stencilFunc(St,ji,gs),Z=St,oe=ji,Ee=gs)},setOp:function(St,ji,gs){(Pe!==St||gt!==ji||jt!==gs)&&(o.stencilOp(St,ji,gs),Pe=St,gt=ji,jt=gs)},setLocked:function(St){D=St},setClear:function(St){Ki!==St&&(o.clearStencil(St),Ki=St)},reset:function(){D=!1,Ne=null,Z=null,oe=null,Ee=null,Pe=null,gt=null,jt=null,Ki=null}}}const n=new e,s=new t,r=new i,a=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,d=[],f=null,p=!1,g=null,m=null,y=null,x=null,_=null,v=null,E=null,M=new Ae(0,0,0),b=0,A=!1,L=null,S=null,T=null,B=null,F=null;const G=o.getParameter(o.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let j=!1,k=0;const ae=o.getParameter(o.VERSION);ae.indexOf("WebGL")!==-1?(k=parseFloat(/^WebGL (\d)/.exec(ae)[1]),j=k>=1):ae.indexOf("OpenGL ES")!==-1&&(k=parseFloat(/^OpenGL ES (\d)/.exec(ae)[1]),j=k>=2);let X=null,ce={};const ue=o.getParameter(o.SCISSOR_BOX),pe=o.getParameter(o.VIEWPORT),Ze=new dt().fromArray(ue),Qe=new dt().fromArray(pe);function J(D,Ne,Z,oe){const Ee=new Uint8Array(4),Pe=o.createTexture();o.bindTexture(D,Pe),o.texParameteri(D,o.TEXTURE_MIN_FILTER,o.NEAREST),o.texParameteri(D,o.TEXTURE_MAG_FILTER,o.NEAREST);for(let gt=0;gt<Z;gt++)D===o.TEXTURE_3D||D===o.TEXTURE_2D_ARRAY?o.texImage3D(Ne,0,o.RGBA,1,1,oe,0,o.RGBA,o.UNSIGNED_BYTE,Ee):o.texImage2D(Ne+gt,0,o.RGBA,1,1,0,o.RGBA,o.UNSIGNED_BYTE,Ee);return Pe}const le={};le[o.TEXTURE_2D]=J(o.TEXTURE_2D,o.TEXTURE_2D,1),le[o.TEXTURE_CUBE_MAP]=J(o.TEXTURE_CUBE_MAP,o.TEXTURE_CUBE_MAP_POSITIVE_X,6),le[o.TEXTURE_2D_ARRAY]=J(o.TEXTURE_2D_ARRAY,o.TEXTURE_2D_ARRAY,1,1),le[o.TEXTURE_3D]=J(o.TEXTURE_3D,o.TEXTURE_3D,1,1),n.setClear(0,0,0,1),s.setClear(1),r.setClear(0),Te(o.DEPTH_TEST),s.setFunc(To),xe(!1),he(mg),Te(o.CULL_FACE),P(rs);function Te(D){c[D]!==!0&&(o.enable(D),c[D]=!0)}function _e(D){c[D]!==!1&&(o.disable(D),c[D]=!1)}function Ve(D,Ne){return h[D]!==Ne?(o.bindFramebuffer(D,Ne),h[D]=Ne,D===o.DRAW_FRAMEBUFFER&&(h[o.FRAMEBUFFER]=Ne),D===o.FRAMEBUFFER&&(h[o.DRAW_FRAMEBUFFER]=Ne),!0):!1}function Xe(D,Ne){let Z=d,oe=!1;if(D){Z=u.get(Ne),Z===void 0&&(Z=[],u.set(Ne,Z));const Ee=D.textures;if(Z.length!==Ee.length||Z[0]!==o.COLOR_ATTACHMENT0){for(let Pe=0,gt=Ee.length;Pe<gt;Pe++)Z[Pe]=o.COLOR_ATTACHMENT0+Pe;Z.length=Ee.length,oe=!0}}else Z[0]!==o.BACK&&(Z[0]=o.BACK,oe=!0);oe&&o.drawBuffers(Z)}function We(D){return f!==D?(o.useProgram(D),f=D,!0):!1}const et={[Sr]:o.FUNC_ADD,[KS]:o.FUNC_SUBTRACT,[jS]:o.FUNC_REVERSE_SUBTRACT};et[JS]=o.MIN,et[QS]=o.MAX;const se={[eb]:o.ZERO,[tb]:o.ONE,[ib]:o.SRC_COLOR,[sd]:o.SRC_ALPHA,[lb]:o.SRC_ALPHA_SATURATE,[ob]:o.DST_COLOR,[sb]:o.DST_ALPHA,[nb]:o.ONE_MINUS_SRC_COLOR,[rd]:o.ONE_MINUS_SRC_ALPHA,[ab]:o.ONE_MINUS_DST_COLOR,[rb]:o.ONE_MINUS_DST_ALPHA,[cb]:o.CONSTANT_COLOR,[hb]:o.ONE_MINUS_CONSTANT_COLOR,[ub]:o.CONSTANT_ALPHA,[db]:o.ONE_MINUS_CONSTANT_ALPHA};function P(D,Ne,Z,oe,Ee,Pe,gt,jt,Ki,St){if(D===rs){p===!0&&(_e(o.BLEND),p=!1);return}if(p===!1&&(Te(o.BLEND),p=!0),D!==ZS){if(D!==g||St!==A){if((m!==Sr||_!==Sr)&&(o.blendEquation(o.FUNC_ADD),m=Sr,_=Sr),St)switch(D){case go:o.blendFuncSeparate(o.ONE,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA);break;case gg:o.blendFunc(o.ONE,o.ONE);break;case yg:o.blendFuncSeparate(o.ZERO,o.ONE_MINUS_SRC_COLOR,o.ZERO,o.ONE);break;case xg:o.blendFuncSeparate(o.ZERO,o.SRC_COLOR,o.ZERO,o.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}else switch(D){case go:o.blendFuncSeparate(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA);break;case gg:o.blendFunc(o.SRC_ALPHA,o.ONE);break;case yg:o.blendFuncSeparate(o.ZERO,o.ONE_MINUS_SRC_COLOR,o.ZERO,o.ONE);break;case xg:o.blendFunc(o.ZERO,o.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}y=null,x=null,v=null,E=null,M.set(0,0,0),b=0,g=D,A=St}return}Ee=Ee||Ne,Pe=Pe||Z,gt=gt||oe,(Ne!==m||Ee!==_)&&(o.blendEquationSeparate(et[Ne],et[Ee]),m=Ne,_=Ee),(Z!==y||oe!==x||Pe!==v||gt!==E)&&(o.blendFuncSeparate(se[Z],se[oe],se[Pe],se[gt]),y=Z,x=oe,v=Pe,E=gt),(jt.equals(M)===!1||Ki!==b)&&(o.blendColor(jt.r,jt.g,jt.b,Ki),M.copy(jt),b=Ki),g=D,A=!1}function ve(D,Ne){D.side===ts?_e(o.CULL_FACE):Te(o.CULL_FACE);let Z=D.side===qi;Ne&&(Z=!Z),xe(Z),D.blending===go&&D.transparent===!1?P(rs):P(D.blending,D.blendEquation,D.blendSrc,D.blendDst,D.blendEquationAlpha,D.blendSrcAlpha,D.blendDstAlpha,D.blendColor,D.blendAlpha,D.premultipliedAlpha),s.setFunc(D.depthFunc),s.setTest(D.depthTest),s.setMask(D.depthWrite),n.setMask(D.colorWrite);const oe=D.stencilWrite;r.setTest(oe),oe&&(r.setMask(D.stencilWriteMask),r.setFunc(D.stencilFunc,D.stencilRef,D.stencilFuncMask),r.setOp(D.stencilFail,D.stencilZFail,D.stencilZPass)),ke(D.polygonOffset,D.polygonOffsetFactor,D.polygonOffsetUnits),D.alphaToCoverage===!0?Te(o.SAMPLE_ALPHA_TO_COVERAGE):_e(o.SAMPLE_ALPHA_TO_COVERAGE)}function xe(D){L!==D&&(D?o.frontFace(o.CW):o.frontFace(o.CCW),L=D)}function he(D){D!==XS?(Te(o.CULL_FACE),D!==S&&(D===mg?o.cullFace(o.BACK):D===qS?o.cullFace(o.FRONT):o.cullFace(o.FRONT_AND_BACK))):_e(o.CULL_FACE),S=D}function Se(D){D!==T&&(j&&o.lineWidth(D),T=D)}function ke(D,Ne,Z){D?(Te(o.POLYGON_OFFSET_FILL),(B!==Ne||F!==Z)&&(o.polygonOffset(Ne,Z),B=Ne,F=Z)):_e(o.POLYGON_OFFSET_FILL)}function Ce(D){D?Te(o.SCISSOR_TEST):_e(o.SCISSOR_TEST)}function N(D){D===void 0&&(D=o.TEXTURE0+G-1),X!==D&&(o.activeTexture(D),X=D)}function w(D,Ne,Z){Z===void 0&&(X===null?Z=o.TEXTURE0+G-1:Z=X);let oe=ce[Z];oe===void 0&&(oe={type:void 0,texture:void 0},ce[Z]=oe),(oe.type!==D||oe.texture!==Ne)&&(X!==Z&&(o.activeTexture(Z),X=Z),o.bindTexture(D,Ne||le[D]),oe.type=D,oe.texture=Ne)}function H(){const D=ce[X];D!==void 0&&D.type!==void 0&&(o.bindTexture(D.type,null),D.type=void 0,D.texture=void 0)}function ie(){try{o.compressedTexImage2D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function re(){try{o.compressedTexImage3D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function ne(){try{o.texSubImage2D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Be(){try{o.texSubImage3D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function be(){try{o.compressedTexSubImage2D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Le(){try{o.compressedTexSubImage3D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function ft(){try{o.texStorage2D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function de(){try{o.texStorage3D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function De(){try{o.texImage2D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Ke(){try{o.texImage3D.apply(o,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function je(D){Ze.equals(D)===!1&&(o.scissor(D.x,D.y,D.z,D.w),Ze.copy(D))}function Ue(D){Qe.equals(D)===!1&&(o.viewport(D.x,D.y,D.z,D.w),Qe.copy(D))}function pt(D,Ne){let Z=l.get(Ne);Z===void 0&&(Z=new WeakMap,l.set(Ne,Z));let oe=Z.get(D);oe===void 0&&(oe=o.getUniformBlockIndex(Ne,D.name),Z.set(D,oe))}function tt(D,Ne){const oe=l.get(Ne).get(D);a.get(Ne)!==oe&&(o.uniformBlockBinding(Ne,oe,D.__bindingPointIndex),a.set(Ne,oe))}function Lt(){o.disable(o.BLEND),o.disable(o.CULL_FACE),o.disable(o.DEPTH_TEST),o.disable(o.POLYGON_OFFSET_FILL),o.disable(o.SCISSOR_TEST),o.disable(o.STENCIL_TEST),o.disable(o.SAMPLE_ALPHA_TO_COVERAGE),o.blendEquation(o.FUNC_ADD),o.blendFunc(o.ONE,o.ZERO),o.blendFuncSeparate(o.ONE,o.ZERO,o.ONE,o.ZERO),o.blendColor(0,0,0,0),o.colorMask(!0,!0,!0,!0),o.clearColor(0,0,0,0),o.depthMask(!0),o.depthFunc(o.LESS),o.clearDepth(1),o.stencilMask(4294967295),o.stencilFunc(o.ALWAYS,0,4294967295),o.stencilOp(o.KEEP,o.KEEP,o.KEEP),o.clearStencil(0),o.cullFace(o.BACK),o.frontFace(o.CCW),o.polygonOffset(0,0),o.activeTexture(o.TEXTURE0),o.bindFramebuffer(o.FRAMEBUFFER,null),o.bindFramebuffer(o.DRAW_FRAMEBUFFER,null),o.bindFramebuffer(o.READ_FRAMEBUFFER,null),o.useProgram(null),o.lineWidth(1),o.scissor(0,0,o.canvas.width,o.canvas.height),o.viewport(0,0,o.canvas.width,o.canvas.height),c={},X=null,ce={},h={},u=new WeakMap,d=[],f=null,p=!1,g=null,m=null,y=null,x=null,_=null,v=null,E=null,M=new Ae(0,0,0),b=0,A=!1,L=null,S=null,T=null,B=null,F=null,Ze.set(0,0,o.canvas.width,o.canvas.height),Qe.set(0,0,o.canvas.width,o.canvas.height),n.reset(),s.reset(),r.reset()}return{buffers:{color:n,depth:s,stencil:r},enable:Te,disable:_e,bindFramebuffer:Ve,drawBuffers:Xe,useProgram:We,setBlending:P,setMaterial:ve,setFlipSided:xe,setCullFace:he,setLineWidth:Se,setPolygonOffset:ke,setScissorTest:Ce,activeTexture:N,bindTexture:w,unbindTexture:H,compressedTexImage2D:ie,compressedTexImage3D:re,texImage2D:De,texImage3D:Ke,updateUBOMapping:pt,uniformBlockBinding:tt,texStorage2D:ft,texStorage3D:de,texSubImage2D:ne,texSubImage3D:Be,compressedTexSubImage2D:be,compressedTexSubImage3D:Le,scissor:je,viewport:Ue,reset:Lt}}function DP(o,e){const t=o.image&&o.image.width?o.image.width/o.image.height:1;return t>e?(o.repeat.x=1,o.repeat.y=t/e,o.offset.x=0,o.offset.y=(1-o.repeat.y)/2):(o.repeat.x=e/t,o.repeat.y=1,o.offset.x=(1-o.repeat.x)/2,o.offset.y=0),o}function UP(o,e){const t=o.image&&o.image.width?o.image.width/o.image.height:1;return t>e?(o.repeat.x=e/t,o.repeat.y=1,o.offset.x=(1-o.repeat.x)/2,o.offset.y=0):(o.repeat.x=1,o.repeat.y=t/e,o.offset.x=0,o.offset.y=(1-o.repeat.y)/2),o}function FP(o){return o.repeat.x=1,o.repeat.y=1,o.offset.x=0,o.offset.y=0,o}function Ag(o,e,t,i){const n=BP(i);switch(t){case Ey:return o*e;case Cy:return o*e;case Ny:return o*e*2;case xf:return o*e/n.components*n.byteLength;case Gc:return o*e/n.components*n.byteLength;case Py:return o*e*2/n.components*n.byteLength;case _f:return o*e*2/n.components*n.byteLength;case Ry:return o*e*3/n.components*n.byteLength;case Xi:return o*e*4/n.components*n.byteLength;case vf:return o*e*4/n.components*n.byteLength;case Zl:case Kl:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*8;case jl:case Jl:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case pd:case gd:return Math.max(o,16)*Math.max(e,8)/4;case fd:case md:return Math.max(o,8)*Math.max(e,8)/2;case yd:case xd:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*8;case _d:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case vd:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case Sd:return Math.floor((o+4)/5)*Math.floor((e+3)/4)*16;case bd:return Math.floor((o+4)/5)*Math.floor((e+4)/5)*16;case Md:return Math.floor((o+5)/6)*Math.floor((e+4)/5)*16;case Td:return Math.floor((o+5)/6)*Math.floor((e+5)/6)*16;case wd:return Math.floor((o+7)/8)*Math.floor((e+4)/5)*16;case Ad:return Math.floor((o+7)/8)*Math.floor((e+5)/6)*16;case Ed:return Math.floor((o+7)/8)*Math.floor((e+7)/8)*16;case Rd:return Math.floor((o+9)/10)*Math.floor((e+4)/5)*16;case Cd:return Math.floor((o+9)/10)*Math.floor((e+5)/6)*16;case Nd:return Math.floor((o+9)/10)*Math.floor((e+7)/8)*16;case Pd:return Math.floor((o+9)/10)*Math.floor((e+9)/10)*16;case Id:return Math.floor((o+11)/12)*Math.floor((e+9)/10)*16;case Ld:return Math.floor((o+11)/12)*Math.floor((e+11)/12)*16;case Ql:case Dd:case Ud:return Math.ceil(o/4)*Math.ceil(e/4)*16;case Iy:case Fd:return Math.ceil(o/4)*Math.ceil(e/4)*8;case Bd:case Od:return Math.ceil(o/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function BP(o){switch(o){case cs:case Ty:return{byteLength:1,components:1};case Za:case wy:case Do:return{byteLength:2,components:1};case gf:case yf:return{byteLength:2,components:4};case qs:case mf:case en:return{byteLength:4,components:1};case Ay:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${o}.`)}const OP={contain:DP,cover:UP,fill:FP,getByteLength:Ag};function zP(o,e,t,i,n,s,r){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new Y,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(N,w){return f?new OffscreenCanvas(N,w):Sc("canvas")}function g(N,w,H){let ie=1;const re=Ce(N);if((re.width>H||re.height>H)&&(ie=H/Math.max(re.width,re.height)),ie<1)if(typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&N instanceof ImageBitmap||typeof VideoFrame<"u"&&N instanceof VideoFrame){const ne=Math.floor(ie*re.width),Be=Math.floor(ie*re.height);u===void 0&&(u=p(ne,Be));const be=w?p(ne,Be):u;return be.width=ne,be.height=Be,be.getContext("2d").drawImage(N,0,0,ne,Be),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+re.width+"x"+re.height+") to ("+ne+"x"+Be+")."),be}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+re.width+"x"+re.height+")."),N;return N}function m(N){return N.generateMipmaps&&N.minFilter!==pi&&N.minFilter!==ni}function y(N){o.generateMipmap(N)}function x(N,w,H,ie,re=!1){if(N!==null){if(o[N]!==void 0)return o[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let ne=w;if(w===o.RED&&(H===o.FLOAT&&(ne=o.R32F),H===o.HALF_FLOAT&&(ne=o.R16F),H===o.UNSIGNED_BYTE&&(ne=o.R8)),w===o.RED_INTEGER&&(H===o.UNSIGNED_BYTE&&(ne=o.R8UI),H===o.UNSIGNED_SHORT&&(ne=o.R16UI),H===o.UNSIGNED_INT&&(ne=o.R32UI),H===o.BYTE&&(ne=o.R8I),H===o.SHORT&&(ne=o.R16I),H===o.INT&&(ne=o.R32I)),w===o.RG&&(H===o.FLOAT&&(ne=o.RG32F),H===o.HALF_FLOAT&&(ne=o.RG16F),H===o.UNSIGNED_BYTE&&(ne=o.RG8)),w===o.RG_INTEGER&&(H===o.UNSIGNED_BYTE&&(ne=o.RG8UI),H===o.UNSIGNED_SHORT&&(ne=o.RG16UI),H===o.UNSIGNED_INT&&(ne=o.RG32UI),H===o.BYTE&&(ne=o.RG8I),H===o.SHORT&&(ne=o.RG16I),H===o.INT&&(ne=o.RG32I)),w===o.RGB_INTEGER&&(H===o.UNSIGNED_BYTE&&(ne=o.RGB8UI),H===o.UNSIGNED_SHORT&&(ne=o.RGB16UI),H===o.UNSIGNED_INT&&(ne=o.RGB32UI),H===o.BYTE&&(ne=o.RGB8I),H===o.SHORT&&(ne=o.RGB16I),H===o.INT&&(ne=o.RGB32I)),w===o.RGBA_INTEGER&&(H===o.UNSIGNED_BYTE&&(ne=o.RGBA8UI),H===o.UNSIGNED_SHORT&&(ne=o.RGBA16UI),H===o.UNSIGNED_INT&&(ne=o.RGBA32UI),H===o.BYTE&&(ne=o.RGBA8I),H===o.SHORT&&(ne=o.RGBA16I),H===o.INT&&(ne=o.RGBA32I)),w===o.RGB&&H===o.UNSIGNED_INT_5_9_9_9_REV&&(ne=o.RGB9_E5),w===o.RGBA){const Be=re?mc:vt.getTransfer(ie);H===o.FLOAT&&(ne=o.RGBA32F),H===o.HALF_FLOAT&&(ne=o.RGBA16F),H===o.UNSIGNED_BYTE&&(ne=Be===Dt?o.SRGB8_ALPHA8:o.RGBA8),H===o.UNSIGNED_SHORT_4_4_4_4&&(ne=o.RGBA4),H===o.UNSIGNED_SHORT_5_5_5_1&&(ne=o.RGB5_A1)}return(ne===o.R16F||ne===o.R32F||ne===o.RG16F||ne===o.RG32F||ne===o.RGBA16F||ne===o.RGBA32F)&&e.get("EXT_color_buffer_float"),ne}function _(N,w){let H;return N?w===null||w===qs||w===wo?H=o.DEPTH24_STENCIL8:w===en?H=o.DEPTH32F_STENCIL8:w===Za&&(H=o.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):w===null||w===qs||w===wo?H=o.DEPTH_COMPONENT24:w===en?H=o.DEPTH_COMPONENT32F:w===Za&&(H=o.DEPTH_COMPONENT16),H}function v(N,w){return m(N)===!0||N.isFramebufferTexture&&N.minFilter!==pi&&N.minFilter!==ni?Math.log2(Math.max(w.width,w.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?w.mipmaps.length:1}function E(N){const w=N.target;w.removeEventListener("dispose",E),b(w),w.isVideoTexture&&h.delete(w)}function M(N){const w=N.target;w.removeEventListener("dispose",M),L(w)}function b(N){const w=i.get(N);if(w.__webglInit===void 0)return;const H=N.source,ie=d.get(H);if(ie){const re=ie[w.__cacheKey];re.usedTimes--,re.usedTimes===0&&A(N),Object.keys(ie).length===0&&d.delete(H)}i.remove(N)}function A(N){const w=i.get(N);o.deleteTexture(w.__webglTexture);const H=N.source,ie=d.get(H);delete ie[w.__cacheKey],r.memory.textures--}function L(N){const w=i.get(N);if(N.depthTexture&&N.depthTexture.dispose(),N.isWebGLCubeRenderTarget)for(let ie=0;ie<6;ie++){if(Array.isArray(w.__webglFramebuffer[ie]))for(let re=0;re<w.__webglFramebuffer[ie].length;re++)o.deleteFramebuffer(w.__webglFramebuffer[ie][re]);else o.deleteFramebuffer(w.__webglFramebuffer[ie]);w.__webglDepthbuffer&&o.deleteRenderbuffer(w.__webglDepthbuffer[ie])}else{if(Array.isArray(w.__webglFramebuffer))for(let ie=0;ie<w.__webglFramebuffer.length;ie++)o.deleteFramebuffer(w.__webglFramebuffer[ie]);else o.deleteFramebuffer(w.__webglFramebuffer);if(w.__webglDepthbuffer&&o.deleteRenderbuffer(w.__webglDepthbuffer),w.__webglMultisampledFramebuffer&&o.deleteFramebuffer(w.__webglMultisampledFramebuffer),w.__webglColorRenderbuffer)for(let ie=0;ie<w.__webglColorRenderbuffer.length;ie++)w.__webglColorRenderbuffer[ie]&&o.deleteRenderbuffer(w.__webglColorRenderbuffer[ie]);w.__webglDepthRenderbuffer&&o.deleteRenderbuffer(w.__webglDepthRenderbuffer)}const H=N.textures;for(let ie=0,re=H.length;ie<re;ie++){const ne=i.get(H[ie]);ne.__webglTexture&&(o.deleteTexture(ne.__webglTexture),r.memory.textures--),i.remove(H[ie])}i.remove(N)}let S=0;function T(){S=0}function B(){const N=S;return N>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+n.maxTextures),S+=1,N}function F(N){const w=[];return w.push(N.wrapS),w.push(N.wrapT),w.push(N.wrapR||0),w.push(N.magFilter),w.push(N.minFilter),w.push(N.anisotropy),w.push(N.internalFormat),w.push(N.format),w.push(N.type),w.push(N.generateMipmaps),w.push(N.premultiplyAlpha),w.push(N.flipY),w.push(N.unpackAlignment),w.push(N.colorSpace),w.join()}function G(N,w){const H=i.get(N);if(N.isVideoTexture&&Se(N),N.isRenderTargetTexture===!1&&N.version>0&&H.__version!==N.version){const ie=N.image;if(ie===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ie.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Qe(H,N,w);return}}t.bindTexture(o.TEXTURE_2D,H.__webglTexture,o.TEXTURE0+w)}function j(N,w){const H=i.get(N);if(N.version>0&&H.__version!==N.version){Qe(H,N,w);return}t.bindTexture(o.TEXTURE_2D_ARRAY,H.__webglTexture,o.TEXTURE0+w)}function k(N,w){const H=i.get(N);if(N.version>0&&H.__version!==N.version){Qe(H,N,w);return}t.bindTexture(o.TEXTURE_3D,H.__webglTexture,o.TEXTURE0+w)}function ae(N,w){const H=i.get(N);if(N.version>0&&H.__version!==N.version){J(H,N,w);return}t.bindTexture(o.TEXTURE_CUBE_MAP,H.__webglTexture,o.TEXTURE0+w)}const X={[uc]:o.REPEAT,[Cn]:o.CLAMP_TO_EDGE,[dc]:o.MIRRORED_REPEAT},ce={[pi]:o.NEAREST,[My]:o.NEAREST_MIPMAP_NEAREST,[Ca]:o.NEAREST_MIPMAP_LINEAR,[ni]:o.LINEAR,[Yl]:o.LINEAR_MIPMAP_NEAREST,[ns]:o.LINEAR_MIPMAP_LINEAR},ue={[Pb]:o.NEVER,[Bb]:o.ALWAYS,[Ib]:o.LESS,[Dy]:o.LEQUAL,[Lb]:o.EQUAL,[Fb]:o.GEQUAL,[Db]:o.GREATER,[Ub]:o.NOTEQUAL};function pe(N,w){if(w.type===en&&e.has("OES_texture_float_linear")===!1&&(w.magFilter===ni||w.magFilter===Yl||w.magFilter===Ca||w.magFilter===ns||w.minFilter===ni||w.minFilter===Yl||w.minFilter===Ca||w.minFilter===ns)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),o.texParameteri(N,o.TEXTURE_WRAP_S,X[w.wrapS]),o.texParameteri(N,o.TEXTURE_WRAP_T,X[w.wrapT]),(N===o.TEXTURE_3D||N===o.TEXTURE_2D_ARRAY)&&o.texParameteri(N,o.TEXTURE_WRAP_R,X[w.wrapR]),o.texParameteri(N,o.TEXTURE_MAG_FILTER,ce[w.magFilter]),o.texParameteri(N,o.TEXTURE_MIN_FILTER,ce[w.minFilter]),w.compareFunction&&(o.texParameteri(N,o.TEXTURE_COMPARE_MODE,o.COMPARE_REF_TO_TEXTURE),o.texParameteri(N,o.TEXTURE_COMPARE_FUNC,ue[w.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(w.magFilter===pi||w.minFilter!==Ca&&w.minFilter!==ns||w.type===en&&e.has("OES_texture_float_linear")===!1)return;if(w.anisotropy>1||i.get(w).__currentAnisotropy){const H=e.get("EXT_texture_filter_anisotropic");o.texParameterf(N,H.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(w.anisotropy,n.getMaxAnisotropy())),i.get(w).__currentAnisotropy=w.anisotropy}}}function Ze(N,w){let H=!1;N.__webglInit===void 0&&(N.__webglInit=!0,w.addEventListener("dispose",E));const ie=w.source;let re=d.get(ie);re===void 0&&(re={},d.set(ie,re));const ne=F(w);if(ne!==N.__cacheKey){re[ne]===void 0&&(re[ne]={texture:o.createTexture(),usedTimes:0},r.memory.textures++,H=!0),re[ne].usedTimes++;const Be=re[N.__cacheKey];Be!==void 0&&(re[N.__cacheKey].usedTimes--,Be.usedTimes===0&&A(w)),N.__cacheKey=ne,N.__webglTexture=re[ne].texture}return H}function Qe(N,w,H){let ie=o.TEXTURE_2D;(w.isDataArrayTexture||w.isCompressedArrayTexture)&&(ie=o.TEXTURE_2D_ARRAY),w.isData3DTexture&&(ie=o.TEXTURE_3D);const re=Ze(N,w),ne=w.source;t.bindTexture(ie,N.__webglTexture,o.TEXTURE0+H);const Be=i.get(ne);if(ne.version!==Be.__version||re===!0){t.activeTexture(o.TEXTURE0+H);const be=vt.getPrimaries(vt.workingColorSpace),Le=w.colorSpace===Ls?null:vt.getPrimaries(w.colorSpace),ft=w.colorSpace===Ls||be===Le?o.NONE:o.BROWSER_DEFAULT_WEBGL;o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,w.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,w.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,w.unpackAlignment),o.pixelStorei(o.UNPACK_COLORSPACE_CONVERSION_WEBGL,ft);let de=g(w.image,!1,n.maxTextureSize);de=ke(w,de);const De=s.convert(w.format,w.colorSpace),Ke=s.convert(w.type);let je=x(w.internalFormat,De,Ke,w.colorSpace,w.isVideoTexture);pe(ie,w);let Ue;const pt=w.mipmaps,tt=w.isVideoTexture!==!0,Lt=Be.__version===void 0||re===!0,D=ne.dataReady,Ne=v(w,de);if(w.isDepthTexture)je=_(w.format===Ao,w.type),Lt&&(tt?t.texStorage2D(o.TEXTURE_2D,1,je,de.width,de.height):t.texImage2D(o.TEXTURE_2D,0,je,de.width,de.height,0,De,Ke,null));else if(w.isDataTexture)if(pt.length>0){tt&&Lt&&t.texStorage2D(o.TEXTURE_2D,Ne,je,pt[0].width,pt[0].height);for(let Z=0,oe=pt.length;Z<oe;Z++)Ue=pt[Z],tt?D&&t.texSubImage2D(o.TEXTURE_2D,Z,0,0,Ue.width,Ue.height,De,Ke,Ue.data):t.texImage2D(o.TEXTURE_2D,Z,je,Ue.width,Ue.height,0,De,Ke,Ue.data);w.generateMipmaps=!1}else tt?(Lt&&t.texStorage2D(o.TEXTURE_2D,Ne,je,de.width,de.height),D&&t.texSubImage2D(o.TEXTURE_2D,0,0,0,de.width,de.height,De,Ke,de.data)):t.texImage2D(o.TEXTURE_2D,0,je,de.width,de.height,0,De,Ke,de.data);else if(w.isCompressedTexture)if(w.isCompressedArrayTexture){tt&&Lt&&t.texStorage3D(o.TEXTURE_2D_ARRAY,Ne,je,pt[0].width,pt[0].height,de.depth);for(let Z=0,oe=pt.length;Z<oe;Z++)if(Ue=pt[Z],w.format!==Xi)if(De!==null)if(tt){if(D)if(w.layerUpdates.size>0){const Ee=Ag(Ue.width,Ue.height,w.format,w.type);for(const Pe of w.layerUpdates){const gt=Ue.data.subarray(Pe*Ee/Ue.data.BYTES_PER_ELEMENT,(Pe+1)*Ee/Ue.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(o.TEXTURE_2D_ARRAY,Z,0,0,Pe,Ue.width,Ue.height,1,De,gt,0,0)}w.clearLayerUpdates()}else t.compressedTexSubImage3D(o.TEXTURE_2D_ARRAY,Z,0,0,0,Ue.width,Ue.height,de.depth,De,Ue.data,0,0)}else t.compressedTexImage3D(o.TEXTURE_2D_ARRAY,Z,je,Ue.width,Ue.height,de.depth,0,Ue.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else tt?D&&t.texSubImage3D(o.TEXTURE_2D_ARRAY,Z,0,0,0,Ue.width,Ue.height,de.depth,De,Ke,Ue.data):t.texImage3D(o.TEXTURE_2D_ARRAY,Z,je,Ue.width,Ue.height,de.depth,0,De,Ke,Ue.data)}else{tt&&Lt&&t.texStorage2D(o.TEXTURE_2D,Ne,je,pt[0].width,pt[0].height);for(let Z=0,oe=pt.length;Z<oe;Z++)Ue=pt[Z],w.format!==Xi?De!==null?tt?D&&t.compressedTexSubImage2D(o.TEXTURE_2D,Z,0,0,Ue.width,Ue.height,De,Ue.data):t.compressedTexImage2D(o.TEXTURE_2D,Z,je,Ue.width,Ue.height,0,Ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):tt?D&&t.texSubImage2D(o.TEXTURE_2D,Z,0,0,Ue.width,Ue.height,De,Ke,Ue.data):t.texImage2D(o.TEXTURE_2D,Z,je,Ue.width,Ue.height,0,De,Ke,Ue.data)}else if(w.isDataArrayTexture)if(tt){if(Lt&&t.texStorage3D(o.TEXTURE_2D_ARRAY,Ne,je,de.width,de.height,de.depth),D)if(w.layerUpdates.size>0){const Z=Ag(de.width,de.height,w.format,w.type);for(const oe of w.layerUpdates){const Ee=de.data.subarray(oe*Z/de.data.BYTES_PER_ELEMENT,(oe+1)*Z/de.data.BYTES_PER_ELEMENT);t.texSubImage3D(o.TEXTURE_2D_ARRAY,0,0,0,oe,de.width,de.height,1,De,Ke,Ee)}w.clearLayerUpdates()}else t.texSubImage3D(o.TEXTURE_2D_ARRAY,0,0,0,0,de.width,de.height,de.depth,De,Ke,de.data)}else t.texImage3D(o.TEXTURE_2D_ARRAY,0,je,de.width,de.height,de.depth,0,De,Ke,de.data);else if(w.isData3DTexture)tt?(Lt&&t.texStorage3D(o.TEXTURE_3D,Ne,je,de.width,de.height,de.depth),D&&t.texSubImage3D(o.TEXTURE_3D,0,0,0,0,de.width,de.height,de.depth,De,Ke,de.data)):t.texImage3D(o.TEXTURE_3D,0,je,de.width,de.height,de.depth,0,De,Ke,de.data);else if(w.isFramebufferTexture){if(Lt)if(tt)t.texStorage2D(o.TEXTURE_2D,Ne,je,de.width,de.height);else{let Z=de.width,oe=de.height;for(let Ee=0;Ee<Ne;Ee++)t.texImage2D(o.TEXTURE_2D,Ee,je,Z,oe,0,De,Ke,null),Z>>=1,oe>>=1}}else if(pt.length>0){if(tt&&Lt){const Z=Ce(pt[0]);t.texStorage2D(o.TEXTURE_2D,Ne,je,Z.width,Z.height)}for(let Z=0,oe=pt.length;Z<oe;Z++)Ue=pt[Z],tt?D&&t.texSubImage2D(o.TEXTURE_2D,Z,0,0,De,Ke,Ue):t.texImage2D(o.TEXTURE_2D,Z,je,De,Ke,Ue);w.generateMipmaps=!1}else if(tt){if(Lt){const Z=Ce(de);t.texStorage2D(o.TEXTURE_2D,Ne,je,Z.width,Z.height)}D&&t.texSubImage2D(o.TEXTURE_2D,0,0,0,De,Ke,de)}else t.texImage2D(o.TEXTURE_2D,0,je,De,Ke,de);m(w)&&y(ie),Be.__version=ne.version,w.onUpdate&&w.onUpdate(w)}N.__version=w.version}function J(N,w,H){if(w.image.length!==6)return;const ie=Ze(N,w),re=w.source;t.bindTexture(o.TEXTURE_CUBE_MAP,N.__webglTexture,o.TEXTURE0+H);const ne=i.get(re);if(re.version!==ne.__version||ie===!0){t.activeTexture(o.TEXTURE0+H);const Be=vt.getPrimaries(vt.workingColorSpace),be=w.colorSpace===Ls?null:vt.getPrimaries(w.colorSpace),Le=w.colorSpace===Ls||Be===be?o.NONE:o.BROWSER_DEFAULT_WEBGL;o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,w.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,w.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,w.unpackAlignment),o.pixelStorei(o.UNPACK_COLORSPACE_CONVERSION_WEBGL,Le);const ft=w.isCompressedTexture||w.image[0].isCompressedTexture,de=w.image[0]&&w.image[0].isDataTexture,De=[];for(let oe=0;oe<6;oe++)!ft&&!de?De[oe]=g(w.image[oe],!0,n.maxCubemapSize):De[oe]=de?w.image[oe].image:w.image[oe],De[oe]=ke(w,De[oe]);const Ke=De[0],je=s.convert(w.format,w.colorSpace),Ue=s.convert(w.type),pt=x(w.internalFormat,je,Ue,w.colorSpace),tt=w.isVideoTexture!==!0,Lt=ne.__version===void 0||ie===!0,D=re.dataReady;let Ne=v(w,Ke);pe(o.TEXTURE_CUBE_MAP,w);let Z;if(ft){tt&&Lt&&t.texStorage2D(o.TEXTURE_CUBE_MAP,Ne,pt,Ke.width,Ke.height);for(let oe=0;oe<6;oe++){Z=De[oe].mipmaps;for(let Ee=0;Ee<Z.length;Ee++){const Pe=Z[Ee];w.format!==Xi?je!==null?tt?D&&t.compressedTexSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,0,0,Pe.width,Pe.height,je,Pe.data):t.compressedTexImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,pt,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):tt?D&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,0,0,Pe.width,Pe.height,je,Ue,Pe.data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee,pt,Pe.width,Pe.height,0,je,Ue,Pe.data)}}}else{if(Z=w.mipmaps,tt&&Lt){Z.length>0&&Ne++;const oe=Ce(De[0]);t.texStorage2D(o.TEXTURE_CUBE_MAP,Ne,pt,oe.width,oe.height)}for(let oe=0;oe<6;oe++)if(de){tt?D&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,0,0,De[oe].width,De[oe].height,je,Ue,De[oe].data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,pt,De[oe].width,De[oe].height,0,je,Ue,De[oe].data);for(let Ee=0;Ee<Z.length;Ee++){const gt=Z[Ee].image[oe].image;tt?D&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,0,0,gt.width,gt.height,je,Ue,gt.data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,pt,gt.width,gt.height,0,je,Ue,gt.data)}}else{tt?D&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,0,0,je,Ue,De[oe]):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,0,pt,je,Ue,De[oe]);for(let Ee=0;Ee<Z.length;Ee++){const Pe=Z[Ee];tt?D&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,0,0,je,Ue,Pe.image[oe]):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Ee+1,pt,je,Ue,Pe.image[oe])}}}m(w)&&y(o.TEXTURE_CUBE_MAP),ne.__version=re.version,w.onUpdate&&w.onUpdate(w)}N.__version=w.version}function le(N,w,H,ie,re,ne){const Be=s.convert(H.format,H.colorSpace),be=s.convert(H.type),Le=x(H.internalFormat,Be,be,H.colorSpace);if(!i.get(w).__hasExternalTextures){const de=Math.max(1,w.width>>ne),De=Math.max(1,w.height>>ne);re===o.TEXTURE_3D||re===o.TEXTURE_2D_ARRAY?t.texImage3D(re,ne,Le,de,De,w.depth,0,Be,be,null):t.texImage2D(re,ne,Le,de,De,0,Be,be,null)}t.bindFramebuffer(o.FRAMEBUFFER,N),he(w)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,ie,re,i.get(H).__webglTexture,0,xe(w)):(re===o.TEXTURE_2D||re>=o.TEXTURE_CUBE_MAP_POSITIVE_X&&re<=o.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&o.framebufferTexture2D(o.FRAMEBUFFER,ie,re,i.get(H).__webglTexture,ne),t.bindFramebuffer(o.FRAMEBUFFER,null)}function Te(N,w,H){if(o.bindRenderbuffer(o.RENDERBUFFER,N),w.depthBuffer){const ie=w.depthTexture,re=ie&&ie.isDepthTexture?ie.type:null,ne=_(w.stencilBuffer,re),Be=w.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,be=xe(w);he(w)?a.renderbufferStorageMultisampleEXT(o.RENDERBUFFER,be,ne,w.width,w.height):H?o.renderbufferStorageMultisample(o.RENDERBUFFER,be,ne,w.width,w.height):o.renderbufferStorage(o.RENDERBUFFER,ne,w.width,w.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,Be,o.RENDERBUFFER,N)}else{const ie=w.textures;for(let re=0;re<ie.length;re++){const ne=ie[re],Be=s.convert(ne.format,ne.colorSpace),be=s.convert(ne.type),Le=x(ne.internalFormat,Be,be,ne.colorSpace),ft=xe(w);H&&he(w)===!1?o.renderbufferStorageMultisample(o.RENDERBUFFER,ft,Le,w.width,w.height):he(w)?a.renderbufferStorageMultisampleEXT(o.RENDERBUFFER,ft,Le,w.width,w.height):o.renderbufferStorage(o.RENDERBUFFER,Le,w.width,w.height)}}o.bindRenderbuffer(o.RENDERBUFFER,null)}function _e(N,w){if(w&&w.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(o.FRAMEBUFFER,N),!(w.depthTexture&&w.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(w.depthTexture).__webglTexture||w.depthTexture.image.width!==w.width||w.depthTexture.image.height!==w.height)&&(w.depthTexture.image.width=w.width,w.depthTexture.image.height=w.height,w.depthTexture.needsUpdate=!0),G(w.depthTexture,0);const ie=i.get(w.depthTexture).__webglTexture,re=xe(w);if(w.depthTexture.format===yo)he(w)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.TEXTURE_2D,ie,0,re):o.framebufferTexture2D(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.TEXTURE_2D,ie,0);else if(w.depthTexture.format===Ao)he(w)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.TEXTURE_2D,ie,0,re):o.framebufferTexture2D(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.TEXTURE_2D,ie,0);else throw new Error("Unknown depthTexture format")}function Ve(N){const w=i.get(N),H=N.isWebGLCubeRenderTarget===!0;if(w.__boundDepthTexture!==N.depthTexture){const ie=N.depthTexture;if(w.__depthDisposeCallback&&w.__depthDisposeCallback(),ie){const re=()=>{delete w.__boundDepthTexture,delete w.__depthDisposeCallback,ie.removeEventListener("dispose",re)};ie.addEventListener("dispose",re),w.__depthDisposeCallback=re}w.__boundDepthTexture=ie}if(N.depthTexture&&!w.__autoAllocateDepthBuffer){if(H)throw new Error("target.depthTexture not supported in Cube render targets");_e(w.__webglFramebuffer,N)}else if(H){w.__webglDepthbuffer=[];for(let ie=0;ie<6;ie++)if(t.bindFramebuffer(o.FRAMEBUFFER,w.__webglFramebuffer[ie]),w.__webglDepthbuffer[ie]===void 0)w.__webglDepthbuffer[ie]=o.createRenderbuffer(),Te(w.__webglDepthbuffer[ie],N,!1);else{const re=N.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,ne=w.__webglDepthbuffer[ie];o.bindRenderbuffer(o.RENDERBUFFER,ne),o.framebufferRenderbuffer(o.FRAMEBUFFER,re,o.RENDERBUFFER,ne)}}else if(t.bindFramebuffer(o.FRAMEBUFFER,w.__webglFramebuffer),w.__webglDepthbuffer===void 0)w.__webglDepthbuffer=o.createRenderbuffer(),Te(w.__webglDepthbuffer,N,!1);else{const ie=N.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,re=w.__webglDepthbuffer;o.bindRenderbuffer(o.RENDERBUFFER,re),o.framebufferRenderbuffer(o.FRAMEBUFFER,ie,o.RENDERBUFFER,re)}t.bindFramebuffer(o.FRAMEBUFFER,null)}function Xe(N,w,H){const ie=i.get(N);w!==void 0&&le(ie.__webglFramebuffer,N,N.texture,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,0),H!==void 0&&Ve(N)}function We(N){const w=N.texture,H=i.get(N),ie=i.get(w);N.addEventListener("dispose",M);const re=N.textures,ne=N.isWebGLCubeRenderTarget===!0,Be=re.length>1;if(Be||(ie.__webglTexture===void 0&&(ie.__webglTexture=o.createTexture()),ie.__version=w.version,r.memory.textures++),ne){H.__webglFramebuffer=[];for(let be=0;be<6;be++)if(w.mipmaps&&w.mipmaps.length>0){H.__webglFramebuffer[be]=[];for(let Le=0;Le<w.mipmaps.length;Le++)H.__webglFramebuffer[be][Le]=o.createFramebuffer()}else H.__webglFramebuffer[be]=o.createFramebuffer()}else{if(w.mipmaps&&w.mipmaps.length>0){H.__webglFramebuffer=[];for(let be=0;be<w.mipmaps.length;be++)H.__webglFramebuffer[be]=o.createFramebuffer()}else H.__webglFramebuffer=o.createFramebuffer();if(Be)for(let be=0,Le=re.length;be<Le;be++){const ft=i.get(re[be]);ft.__webglTexture===void 0&&(ft.__webglTexture=o.createTexture(),r.memory.textures++)}if(N.samples>0&&he(N)===!1){H.__webglMultisampledFramebuffer=o.createFramebuffer(),H.__webglColorRenderbuffer=[],t.bindFramebuffer(o.FRAMEBUFFER,H.__webglMultisampledFramebuffer);for(let be=0;be<re.length;be++){const Le=re[be];H.__webglColorRenderbuffer[be]=o.createRenderbuffer(),o.bindRenderbuffer(o.RENDERBUFFER,H.__webglColorRenderbuffer[be]);const ft=s.convert(Le.format,Le.colorSpace),de=s.convert(Le.type),De=x(Le.internalFormat,ft,de,Le.colorSpace,N.isXRRenderTarget===!0),Ke=xe(N);o.renderbufferStorageMultisample(o.RENDERBUFFER,Ke,De,N.width,N.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+be,o.RENDERBUFFER,H.__webglColorRenderbuffer[be])}o.bindRenderbuffer(o.RENDERBUFFER,null),N.depthBuffer&&(H.__webglDepthRenderbuffer=o.createRenderbuffer(),Te(H.__webglDepthRenderbuffer,N,!0)),t.bindFramebuffer(o.FRAMEBUFFER,null)}}if(ne){t.bindTexture(o.TEXTURE_CUBE_MAP,ie.__webglTexture),pe(o.TEXTURE_CUBE_MAP,w);for(let be=0;be<6;be++)if(w.mipmaps&&w.mipmaps.length>0)for(let Le=0;Le<w.mipmaps.length;Le++)le(H.__webglFramebuffer[be][Le],N,w,o.COLOR_ATTACHMENT0,o.TEXTURE_CUBE_MAP_POSITIVE_X+be,Le);else le(H.__webglFramebuffer[be],N,w,o.COLOR_ATTACHMENT0,o.TEXTURE_CUBE_MAP_POSITIVE_X+be,0);m(w)&&y(o.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Be){for(let be=0,Le=re.length;be<Le;be++){const ft=re[be],de=i.get(ft);t.bindTexture(o.TEXTURE_2D,de.__webglTexture),pe(o.TEXTURE_2D,ft),le(H.__webglFramebuffer,N,ft,o.COLOR_ATTACHMENT0+be,o.TEXTURE_2D,0),m(ft)&&y(o.TEXTURE_2D)}t.unbindTexture()}else{let be=o.TEXTURE_2D;if((N.isWebGL3DRenderTarget||N.isWebGLArrayRenderTarget)&&(be=N.isWebGL3DRenderTarget?o.TEXTURE_3D:o.TEXTURE_2D_ARRAY),t.bindTexture(be,ie.__webglTexture),pe(be,w),w.mipmaps&&w.mipmaps.length>0)for(let Le=0;Le<w.mipmaps.length;Le++)le(H.__webglFramebuffer[Le],N,w,o.COLOR_ATTACHMENT0,be,Le);else le(H.__webglFramebuffer,N,w,o.COLOR_ATTACHMENT0,be,0);m(w)&&y(be),t.unbindTexture()}N.depthBuffer&&Ve(N)}function et(N){const w=N.textures;for(let H=0,ie=w.length;H<ie;H++){const re=w[H];if(m(re)){const ne=N.isWebGLCubeRenderTarget?o.TEXTURE_CUBE_MAP:o.TEXTURE_2D,Be=i.get(re).__webglTexture;t.bindTexture(ne,Be),y(ne),t.unbindTexture()}}}const se=[],P=[];function ve(N){if(N.samples>0){if(he(N)===!1){const w=N.textures,H=N.width,ie=N.height;let re=o.COLOR_BUFFER_BIT;const ne=N.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,Be=i.get(N),be=w.length>1;if(be)for(let Le=0;Le<w.length;Le++)t.bindFramebuffer(o.FRAMEBUFFER,Be.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+Le,o.RENDERBUFFER,null),t.bindFramebuffer(o.FRAMEBUFFER,Be.__webglFramebuffer),o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0+Le,o.TEXTURE_2D,null,0);t.bindFramebuffer(o.READ_FRAMEBUFFER,Be.__webglMultisampledFramebuffer),t.bindFramebuffer(o.DRAW_FRAMEBUFFER,Be.__webglFramebuffer);for(let Le=0;Le<w.length;Le++){if(N.resolveDepthBuffer&&(N.depthBuffer&&(re|=o.DEPTH_BUFFER_BIT),N.stencilBuffer&&N.resolveStencilBuffer&&(re|=o.STENCIL_BUFFER_BIT)),be){o.framebufferRenderbuffer(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.RENDERBUFFER,Be.__webglColorRenderbuffer[Le]);const ft=i.get(w[Le]).__webglTexture;o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,ft,0)}o.blitFramebuffer(0,0,H,ie,0,0,H,ie,re,o.NEAREST),l===!0&&(se.length=0,P.length=0,se.push(o.COLOR_ATTACHMENT0+Le),N.depthBuffer&&N.resolveDepthBuffer===!1&&(se.push(ne),P.push(ne),o.invalidateFramebuffer(o.DRAW_FRAMEBUFFER,P)),o.invalidateFramebuffer(o.READ_FRAMEBUFFER,se))}if(t.bindFramebuffer(o.READ_FRAMEBUFFER,null),t.bindFramebuffer(o.DRAW_FRAMEBUFFER,null),be)for(let Le=0;Le<w.length;Le++){t.bindFramebuffer(o.FRAMEBUFFER,Be.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+Le,o.RENDERBUFFER,Be.__webglColorRenderbuffer[Le]);const ft=i.get(w[Le]).__webglTexture;t.bindFramebuffer(o.FRAMEBUFFER,Be.__webglFramebuffer),o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0+Le,o.TEXTURE_2D,ft,0)}t.bindFramebuffer(o.DRAW_FRAMEBUFFER,Be.__webglMultisampledFramebuffer)}else if(N.depthBuffer&&N.resolveDepthBuffer===!1&&l){const w=N.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT;o.invalidateFramebuffer(o.DRAW_FRAMEBUFFER,[w])}}}function xe(N){return Math.min(n.maxSamples,N.samples)}function he(N){const w=i.get(N);return N.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&w.__useRenderToTexture!==!1}function Se(N){const w=r.render.frame;h.get(N)!==w&&(h.set(N,w),N.update())}function ke(N,w){const H=N.colorSpace,ie=N.format,re=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||H!==js&&H!==Ls&&(vt.getTransfer(H)===Dt?(ie!==Xi||re!==cs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",H)),w}function Ce(N){return typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement?(c.width=N.naturalWidth||N.width,c.height=N.naturalHeight||N.height):typeof VideoFrame<"u"&&N instanceof VideoFrame?(c.width=N.displayWidth,c.height=N.displayHeight):(c.width=N.width,c.height=N.height),c}this.allocateTextureUnit=B,this.resetTextureUnits=T,this.setTexture2D=G,this.setTexture2DArray=j,this.setTexture3D=k,this.setTextureCube=ae,this.rebindTextures=Xe,this.setupRenderTarget=We,this.updateRenderTargetMipmap=et,this.updateMultisampleRenderTarget=ve,this.setupDepthRenderbuffer=Ve,this.setupFrameBufferTexture=le,this.useMultisampledRTT=he}function sM(o,e){function t(i,n=Ls){let s;const r=vt.getTransfer(n);if(i===cs)return o.UNSIGNED_BYTE;if(i===gf)return o.UNSIGNED_SHORT_4_4_4_4;if(i===yf)return o.UNSIGNED_SHORT_5_5_5_1;if(i===Ay)return o.UNSIGNED_INT_5_9_9_9_REV;if(i===Ty)return o.BYTE;if(i===wy)return o.SHORT;if(i===Za)return o.UNSIGNED_SHORT;if(i===mf)return o.INT;if(i===qs)return o.UNSIGNED_INT;if(i===en)return o.FLOAT;if(i===Do)return o.HALF_FLOAT;if(i===Ey)return o.ALPHA;if(i===Ry)return o.RGB;if(i===Xi)return o.RGBA;if(i===Cy)return o.LUMINANCE;if(i===Ny)return o.LUMINANCE_ALPHA;if(i===yo)return o.DEPTH_COMPONENT;if(i===Ao)return o.DEPTH_STENCIL;if(i===xf)return o.RED;if(i===Gc)return o.RED_INTEGER;if(i===Py)return o.RG;if(i===_f)return o.RG_INTEGER;if(i===vf)return o.RGBA_INTEGER;if(i===Zl||i===Kl||i===jl||i===Jl)if(r===Dt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===Zl)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Kl)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===jl)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Jl)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===Zl)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Kl)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===jl)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Jl)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===fd||i===pd||i===md||i===gd)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===fd)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===pd)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===md)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===gd)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===yd||i===xd||i===_d)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===yd||i===xd)return r===Dt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===_d)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===vd||i===Sd||i===bd||i===Md||i===Td||i===wd||i===Ad||i===Ed||i===Rd||i===Cd||i===Nd||i===Pd||i===Id||i===Ld)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===vd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Sd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===bd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Md)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Td)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===wd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Ad)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Ed)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Rd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Cd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Nd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Pd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Id)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Ld)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===Ql||i===Dd||i===Ud)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===Ql)return r===Dt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Dd)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Ud)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Iy||i===Fd||i===Bd||i===Od)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===Ql)return s.COMPRESSED_RED_RGTC1_EXT;if(i===Fd)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Bd)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Od)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===wo?o.UNSIGNED_INT_24_8:o[i]!==void 0?o[i]:null}return{convert:t}}class rM extends Ai{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Ia extends Rt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const kP={type:"move"};class Hp{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ia,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ia,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new R,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new R),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ia,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new R,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new R),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,r=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){r=!0;for(const g of e.hand.values()){const m=t.getJointPose(g,i),y=this._getHandJoint(c,g);m!==null&&(y.matrix.fromArray(m.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.matrixWorldNeedsUpdate=!0,y.jointRadius=m.radius),y.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(kP)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=r!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Ia;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}const GP=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,VP=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class HP{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new xi,s=e.properties.get(n);s.__webglTexture=t.texture,(t.depthNear!=i.depthNear||t.depthFar!=i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new sn({vertexShader:GP,fragmentShader:VP,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new qt(new rl(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class WP extends fs{constructor(e,t){super();const i=this;let n=null,s=1,r=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const g=new HP,m=t.getContextAttributes();let y=null,x=null;const _=[],v=[],E=new Y;let M=null;const b=new Ai;b.layers.enable(1),b.viewport=new dt;const A=new Ai;A.layers.enable(2),A.viewport=new dt;const L=[b,A],S=new rM;S.layers.enable(1),S.layers.enable(2);let T=null,B=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(J){let le=_[J];return le===void 0&&(le=new Hp,_[J]=le),le.getTargetRaySpace()},this.getControllerGrip=function(J){let le=_[J];return le===void 0&&(le=new Hp,_[J]=le),le.getGripSpace()},this.getHand=function(J){let le=_[J];return le===void 0&&(le=new Hp,_[J]=le),le.getHandSpace()};function F(J){const le=v.indexOf(J.inputSource);if(le===-1)return;const Te=_[le];Te!==void 0&&(Te.update(J.inputSource,J.frame,c||r),Te.dispatchEvent({type:J.type,data:J.inputSource}))}function G(){n.removeEventListener("select",F),n.removeEventListener("selectstart",F),n.removeEventListener("selectend",F),n.removeEventListener("squeeze",F),n.removeEventListener("squeezestart",F),n.removeEventListener("squeezeend",F),n.removeEventListener("end",G),n.removeEventListener("inputsourceschange",j);for(let J=0;J<_.length;J++){const le=v[J];le!==null&&(v[J]=null,_[J].disconnect(le))}T=null,B=null,g.reset(),e.setRenderTarget(y),f=null,d=null,u=null,n=null,x=null,Qe.stop(),i.isPresenting=!1,e.setPixelRatio(M),e.setSize(E.width,E.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(J){s=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(J){a=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||r},this.setReferenceSpace=function(J){c=J},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(J){if(n=J,n!==null){if(y=e.getRenderTarget(),n.addEventListener("select",F),n.addEventListener("selectstart",F),n.addEventListener("selectend",F),n.addEventListener("squeeze",F),n.addEventListener("squeezestart",F),n.addEventListener("squeezeend",F),n.addEventListener("end",G),n.addEventListener("inputsourceschange",j),m.xrCompatible!==!0&&await t.makeXRCompatible(),M=e.getPixelRatio(),e.getSize(E),n.renderState.layers===void 0){const le={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(n,t,le),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new Ln(f.framebufferWidth,f.framebufferHeight,{format:Xi,type:cs,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let le=null,Te=null,_e=null;m.depth&&(_e=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,le=m.stencil?Ao:yo,Te=m.stencil?wo:qs);const Ve={colorFormat:t.RGBA8,depthFormat:_e,scaleFactor:s};u=new XRWebGLBinding(n,t),d=u.createProjectionLayer(Ve),n.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),x=new Ln(d.textureWidth,d.textureHeight,{format:Xi,type:cs,depthTexture:new ky(d.textureWidth,d.textureHeight,Te,void 0,void 0,void 0,void 0,void 0,void 0,le),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,r=await n.requestReferenceSpace(a),Qe.setContext(n),Qe.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return g.getDepthTexture()};function j(J){for(let le=0;le<J.removed.length;le++){const Te=J.removed[le],_e=v.indexOf(Te);_e>=0&&(v[_e]=null,_[_e].disconnect(Te))}for(let le=0;le<J.added.length;le++){const Te=J.added[le];let _e=v.indexOf(Te);if(_e===-1){for(let Xe=0;Xe<_.length;Xe++)if(Xe>=v.length){v.push(Te),_e=Xe;break}else if(v[Xe]===null){v[Xe]=Te,_e=Xe;break}if(_e===-1)break}const Ve=_[_e];Ve&&Ve.connect(Te)}}const k=new R,ae=new R;function X(J,le,Te){k.setFromMatrixPosition(le.matrixWorld),ae.setFromMatrixPosition(Te.matrixWorld);const _e=k.distanceTo(ae),Ve=le.projectionMatrix.elements,Xe=Te.projectionMatrix.elements,We=Ve[14]/(Ve[10]-1),et=Ve[14]/(Ve[10]+1),se=(Ve[9]+1)/Ve[5],P=(Ve[9]-1)/Ve[5],ve=(Ve[8]-1)/Ve[0],xe=(Xe[8]+1)/Xe[0],he=We*ve,Se=We*xe,ke=_e/(-ve+xe),Ce=ke*-ve;if(le.matrixWorld.decompose(J.position,J.quaternion,J.scale),J.translateX(Ce),J.translateZ(ke),J.matrixWorld.compose(J.position,J.quaternion,J.scale),J.matrixWorldInverse.copy(J.matrixWorld).invert(),Ve[10]===-1)J.projectionMatrix.copy(le.projectionMatrix),J.projectionMatrixInverse.copy(le.projectionMatrixInverse);else{const N=We+ke,w=et+ke,H=he-Ce,ie=Se+(_e-Ce),re=se*et/w*N,ne=P*et/w*N;J.projectionMatrix.makePerspective(H,ie,re,ne,N,w),J.projectionMatrixInverse.copy(J.projectionMatrix).invert()}}function ce(J,le){le===null?J.matrixWorld.copy(J.matrix):J.matrixWorld.multiplyMatrices(le.matrixWorld,J.matrix),J.matrixWorldInverse.copy(J.matrixWorld).invert()}this.updateCamera=function(J){if(n===null)return;let le=J.near,Te=J.far;g.texture!==null&&(g.depthNear>0&&(le=g.depthNear),g.depthFar>0&&(Te=g.depthFar)),S.near=A.near=b.near=le,S.far=A.far=b.far=Te,(T!==S.near||B!==S.far)&&(n.updateRenderState({depthNear:S.near,depthFar:S.far}),T=S.near,B=S.far);const _e=J.parent,Ve=S.cameras;ce(S,_e);for(let Xe=0;Xe<Ve.length;Xe++)ce(Ve[Xe],_e);Ve.length===2?X(S,b,A):S.projectionMatrix.copy(b.projectionMatrix),ue(J,S,_e)};function ue(J,le,Te){Te===null?J.matrix.copy(le.matrixWorld):(J.matrix.copy(Te.matrixWorld),J.matrix.invert(),J.matrix.multiply(le.matrixWorld)),J.matrix.decompose(J.position,J.quaternion,J.scale),J.updateMatrixWorld(!0),J.projectionMatrix.copy(le.projectionMatrix),J.projectionMatrixInverse.copy(le.projectionMatrixInverse),J.isPerspectiveCamera&&(J.fov=Ka*2*Math.atan(1/J.projectionMatrix.elements[5]),J.zoom=1)}this.getCamera=function(){return S},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(J){l=J,d!==null&&(d.fixedFoveation=J),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=J)},this.hasDepthSensing=function(){return g.texture!==null},this.getDepthSensingMesh=function(){return g.getMesh(S)};let pe=null;function Ze(J,le){if(h=le.getViewerPose(c||r),p=le,h!==null){const Te=h.views;f!==null&&(e.setRenderTargetFramebuffer(x,f.framebuffer),e.setRenderTarget(x));let _e=!1;Te.length!==S.cameras.length&&(S.cameras.length=0,_e=!0);for(let Xe=0;Xe<Te.length;Xe++){const We=Te[Xe];let et=null;if(f!==null)et=f.getViewport(We);else{const P=u.getViewSubImage(d,We);et=P.viewport,Xe===0&&(e.setRenderTargetTextures(x,P.colorTexture,d.ignoreDepthValues?void 0:P.depthStencilTexture),e.setRenderTarget(x))}let se=L[Xe];se===void 0&&(se=new Ai,se.layers.enable(Xe),se.viewport=new dt,L[Xe]=se),se.matrix.fromArray(We.transform.matrix),se.matrix.decompose(se.position,se.quaternion,se.scale),se.projectionMatrix.fromArray(We.projectionMatrix),se.projectionMatrixInverse.copy(se.projectionMatrix).invert(),se.viewport.set(et.x,et.y,et.width,et.height),Xe===0&&(S.matrix.copy(se.matrix),S.matrix.decompose(S.position,S.quaternion,S.scale)),_e===!0&&S.cameras.push(se)}const Ve=n.enabledFeatures;if(Ve&&Ve.includes("depth-sensing")){const Xe=u.getDepthInformation(Te[0]);Xe&&Xe.isValid&&Xe.texture&&g.init(e,Xe,n.renderState)}}for(let Te=0;Te<_.length;Te++){const _e=v[Te],Ve=_[Te];_e!==null&&Ve!==void 0&&Ve.update(_e,le,c||r)}pe&&pe(J,le),le.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:le}),p=null}const Qe=new Qb;Qe.setAnimationLoop(Ze),this.setAnimationLoop=function(J){pe=J},this.dispose=function(){}}}const $r=new Xn,$P=new $e;function XP(o,e){function t(m,y){m.matrixAutoUpdate===!0&&m.updateMatrix(),y.value.copy(m.matrix)}function i(m,y){y.color.getRGB(m.fogColor.value,Kb(o)),y.isFog?(m.fogNear.value=y.near,m.fogFar.value=y.far):y.isFogExp2&&(m.fogDensity.value=y.density)}function n(m,y,x,_,v){y.isMeshBasicMaterial||y.isMeshLambertMaterial?s(m,y):y.isMeshToonMaterial?(s(m,y),u(m,y)):y.isMeshPhongMaterial?(s(m,y),h(m,y)):y.isMeshStandardMaterial?(s(m,y),d(m,y),y.isMeshPhysicalMaterial&&f(m,y,v)):y.isMeshMatcapMaterial?(s(m,y),p(m,y)):y.isMeshDepthMaterial?s(m,y):y.isMeshDistanceMaterial?(s(m,y),g(m,y)):y.isMeshNormalMaterial?s(m,y):y.isLineBasicMaterial?(r(m,y),y.isLineDashedMaterial&&a(m,y)):y.isPointsMaterial?l(m,y,x,_):y.isSpriteMaterial?c(m,y):y.isShadowMaterial?(m.color.value.copy(y.color),m.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function s(m,y){m.opacity.value=y.opacity,y.color&&m.diffuse.value.copy(y.color),y.emissive&&m.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(m.map.value=y.map,t(y.map,m.mapTransform)),y.alphaMap&&(m.alphaMap.value=y.alphaMap,t(y.alphaMap,m.alphaMapTransform)),y.bumpMap&&(m.bumpMap.value=y.bumpMap,t(y.bumpMap,m.bumpMapTransform),m.bumpScale.value=y.bumpScale,y.side===qi&&(m.bumpScale.value*=-1)),y.normalMap&&(m.normalMap.value=y.normalMap,t(y.normalMap,m.normalMapTransform),m.normalScale.value.copy(y.normalScale),y.side===qi&&m.normalScale.value.negate()),y.displacementMap&&(m.displacementMap.value=y.displacementMap,t(y.displacementMap,m.displacementMapTransform),m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias),y.emissiveMap&&(m.emissiveMap.value=y.emissiveMap,t(y.emissiveMap,m.emissiveMapTransform)),y.specularMap&&(m.specularMap.value=y.specularMap,t(y.specularMap,m.specularMapTransform)),y.alphaTest>0&&(m.alphaTest.value=y.alphaTest);const x=e.get(y),_=x.envMap,v=x.envMapRotation;_&&(m.envMap.value=_,$r.copy(v),$r.x*=-1,$r.y*=-1,$r.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&($r.y*=-1,$r.z*=-1),m.envMapRotation.value.setFromMatrix4($P.makeRotationFromEuler($r)),m.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=y.reflectivity,m.ior.value=y.ior,m.refractionRatio.value=y.refractionRatio),y.lightMap&&(m.lightMap.value=y.lightMap,m.lightMapIntensity.value=y.lightMapIntensity,t(y.lightMap,m.lightMapTransform)),y.aoMap&&(m.aoMap.value=y.aoMap,m.aoMapIntensity.value=y.aoMapIntensity,t(y.aoMap,m.aoMapTransform))}function r(m,y){m.diffuse.value.copy(y.color),m.opacity.value=y.opacity,y.map&&(m.map.value=y.map,t(y.map,m.mapTransform))}function a(m,y){m.dashSize.value=y.dashSize,m.totalSize.value=y.dashSize+y.gapSize,m.scale.value=y.scale}function l(m,y,x,_){m.diffuse.value.copy(y.color),m.opacity.value=y.opacity,m.size.value=y.size*x,m.scale.value=_*.5,y.map&&(m.map.value=y.map,t(y.map,m.uvTransform)),y.alphaMap&&(m.alphaMap.value=y.alphaMap,t(y.alphaMap,m.alphaMapTransform)),y.alphaTest>0&&(m.alphaTest.value=y.alphaTest)}function c(m,y){m.diffuse.value.copy(y.color),m.opacity.value=y.opacity,m.rotation.value=y.rotation,y.map&&(m.map.value=y.map,t(y.map,m.mapTransform)),y.alphaMap&&(m.alphaMap.value=y.alphaMap,t(y.alphaMap,m.alphaMapTransform)),y.alphaTest>0&&(m.alphaTest.value=y.alphaTest)}function h(m,y){m.specular.value.copy(y.specular),m.shininess.value=Math.max(y.shininess,1e-4)}function u(m,y){y.gradientMap&&(m.gradientMap.value=y.gradientMap)}function d(m,y){m.metalness.value=y.metalness,y.metalnessMap&&(m.metalnessMap.value=y.metalnessMap,t(y.metalnessMap,m.metalnessMapTransform)),m.roughness.value=y.roughness,y.roughnessMap&&(m.roughnessMap.value=y.roughnessMap,t(y.roughnessMap,m.roughnessMapTransform)),y.envMap&&(m.envMapIntensity.value=y.envMapIntensity)}function f(m,y,x){m.ior.value=y.ior,y.sheen>0&&(m.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),m.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(m.sheenColorMap.value=y.sheenColorMap,t(y.sheenColorMap,m.sheenColorMapTransform)),y.sheenRoughnessMap&&(m.sheenRoughnessMap.value=y.sheenRoughnessMap,t(y.sheenRoughnessMap,m.sheenRoughnessMapTransform))),y.clearcoat>0&&(m.clearcoat.value=y.clearcoat,m.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(m.clearcoatMap.value=y.clearcoatMap,t(y.clearcoatMap,m.clearcoatMapTransform)),y.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap,t(y.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),y.clearcoatNormalMap&&(m.clearcoatNormalMap.value=y.clearcoatNormalMap,t(y.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),y.side===qi&&m.clearcoatNormalScale.value.negate())),y.dispersion>0&&(m.dispersion.value=y.dispersion),y.iridescence>0&&(m.iridescence.value=y.iridescence,m.iridescenceIOR.value=y.iridescenceIOR,m.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(m.iridescenceMap.value=y.iridescenceMap,t(y.iridescenceMap,m.iridescenceMapTransform)),y.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=y.iridescenceThicknessMap,t(y.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),y.transmission>0&&(m.transmission.value=y.transmission,m.transmissionSamplerMap.value=x.texture,m.transmissionSamplerSize.value.set(x.width,x.height),y.transmissionMap&&(m.transmissionMap.value=y.transmissionMap,t(y.transmissionMap,m.transmissionMapTransform)),m.thickness.value=y.thickness,y.thicknessMap&&(m.thicknessMap.value=y.thicknessMap,t(y.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=y.attenuationDistance,m.attenuationColor.value.copy(y.attenuationColor)),y.anisotropy>0&&(m.anisotropyVector.value.set(y.anisotropy*Math.cos(y.anisotropyRotation),y.anisotropy*Math.sin(y.anisotropyRotation)),y.anisotropyMap&&(m.anisotropyMap.value=y.anisotropyMap,t(y.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=y.specularIntensity,m.specularColor.value.copy(y.specularColor),y.specularColorMap&&(m.specularColorMap.value=y.specularColorMap,t(y.specularColorMap,m.specularColorMapTransform)),y.specularIntensityMap&&(m.specularIntensityMap.value=y.specularIntensityMap,t(y.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,y){y.matcap&&(m.matcap.value=y.matcap)}function g(m,y){const x=e.get(y).light;m.referencePosition.value.setFromMatrixPosition(x.matrixWorld),m.nearDistance.value=x.shadow.camera.near,m.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function qP(o,e,t,i){let n={},s={},r=[];const a=o.getParameter(o.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,_){const v=_.program;i.uniformBlockBinding(x,v)}function c(x,_){let v=n[x.id];v===void 0&&(p(x),v=h(x),n[x.id]=v,x.addEventListener("dispose",m));const E=_.program;i.updateUBOMapping(x,E);const M=e.render.frame;s[x.id]!==M&&(d(x),s[x.id]=M)}function h(x){const _=u();x.__bindingPointIndex=_;const v=o.createBuffer(),E=x.__size,M=x.usage;return o.bindBuffer(o.UNIFORM_BUFFER,v),o.bufferData(o.UNIFORM_BUFFER,E,M),o.bindBuffer(o.UNIFORM_BUFFER,null),o.bindBufferBase(o.UNIFORM_BUFFER,_,v),v}function u(){for(let x=0;x<a;x++)if(r.indexOf(x)===-1)return r.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const _=n[x.id],v=x.uniforms,E=x.__cache;o.bindBuffer(o.UNIFORM_BUFFER,_);for(let M=0,b=v.length;M<b;M++){const A=Array.isArray(v[M])?v[M]:[v[M]];for(let L=0,S=A.length;L<S;L++){const T=A[L];if(f(T,M,L,E)===!0){const B=T.__offset,F=Array.isArray(T.value)?T.value:[T.value];let G=0;for(let j=0;j<F.length;j++){const k=F[j],ae=g(k);typeof k=="number"||typeof k=="boolean"?(T.__data[0]=k,o.bufferSubData(o.UNIFORM_BUFFER,B+G,T.__data)):k.isMatrix3?(T.__data[0]=k.elements[0],T.__data[1]=k.elements[1],T.__data[2]=k.elements[2],T.__data[3]=0,T.__data[4]=k.elements[3],T.__data[5]=k.elements[4],T.__data[6]=k.elements[5],T.__data[7]=0,T.__data[8]=k.elements[6],T.__data[9]=k.elements[7],T.__data[10]=k.elements[8],T.__data[11]=0):(k.toArray(T.__data,G),G+=ae.storage/Float32Array.BYTES_PER_ELEMENT)}o.bufferSubData(o.UNIFORM_BUFFER,B,T.__data)}}}o.bindBuffer(o.UNIFORM_BUFFER,null)}function f(x,_,v,E){const M=x.value,b=_+"_"+v;if(E[b]===void 0)return typeof M=="number"||typeof M=="boolean"?E[b]=M:E[b]=M.clone(),!0;{const A=E[b];if(typeof M=="number"||typeof M=="boolean"){if(A!==M)return E[b]=M,!0}else if(A.equals(M)===!1)return A.copy(M),!0}return!1}function p(x){const _=x.uniforms;let v=0;const E=16;for(let b=0,A=_.length;b<A;b++){const L=Array.isArray(_[b])?_[b]:[_[b]];for(let S=0,T=L.length;S<T;S++){const B=L[S],F=Array.isArray(B.value)?B.value:[B.value];for(let G=0,j=F.length;G<j;G++){const k=F[G],ae=g(k),X=v%E,ce=X%ae.boundary,ue=X+ce;v+=ce,ue!==0&&E-ue<ae.storage&&(v+=E-ue),B.__data=new Float32Array(ae.storage/Float32Array.BYTES_PER_ELEMENT),B.__offset=v,v+=ae.storage}}}const M=v%E;return M>0&&(v+=E-M),x.__size=v,x.__cache={},this}function g(x){const _={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(_.boundary=4,_.storage=4):x.isVector2?(_.boundary=8,_.storage=8):x.isVector3||x.isColor?(_.boundary=16,_.storage=12):x.isVector4?(_.boundary=16,_.storage=16):x.isMatrix3?(_.boundary=48,_.storage=48):x.isMatrix4?(_.boundary=64,_.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),_}function m(x){const _=x.target;_.removeEventListener("dispose",m);const v=r.indexOf(_.__bindingPointIndex);r.splice(v,1),o.deleteBuffer(n[_.id]),delete n[_.id],delete s[_.id]}function y(){for(const x in n)o.deleteBuffer(n[x]);r=[],n={},s={}}return{bind:l,update:c,dispose:y}}class YP{constructor(e={}){const{canvas:t=Gb(),context:i=null,depth:n=!0,stencil:s=!1,alpha:r=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=e;this.isWebGLRenderer=!0;let d;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=i.getContextAttributes().alpha}else d=r;const f=new Uint32Array(4),p=new Int32Array(4);let g=null,m=null;const y=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=En,this.toneMapping=ks,this.toneMappingExposure=1;const _=this;let v=!1,E=0,M=0,b=null,A=-1,L=null;const S=new dt,T=new dt;let B=null;const F=new Ae(0);let G=0,j=t.width,k=t.height,ae=1,X=null,ce=null;const ue=new dt(0,0,j,k),pe=new dt(0,0,j,k);let Ze=!1;const Qe=new Xc;let J=!1,le=!1;const Te=new $e,_e=new $e,Ve=new R,Xe=new dt,We={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let et=!1;function se(){return b===null?ae:1}let P=i;function ve(C,O){return t.getContext(C,O)}try{const C={alpha:!0,depth:n,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ff}`),t.addEventListener("webglcontextlost",oe,!1),t.addEventListener("webglcontextrestored",Ee,!1),t.addEventListener("webglcontextcreationerror",Pe,!1),P===null){const O="webgl2";if(P=ve(O,C),P===null)throw ve(O)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let xe,he,Se,ke,Ce,N,w,H,ie,re,ne,Be,be,Le,ft,de,De,Ke,je,Ue,pt,tt,Lt,D;function Ne(){xe=new QC(P),xe.init(),tt=new sM(P,xe),he=new qC(P,xe,e,tt),Se=new LP(P),he.reverseDepthBuffer&&Se.buffers.depth.setReversed(!0),ke=new iN(P),Ce=new vP,N=new zP(P,xe,Se,Ce,he,tt,ke),w=new ZC(_),H=new JC(_),ie=new cE(P),Lt=new $C(P,ie),re=new eN(P,ie,ke,Lt),ne=new sN(P,re,ie,ke),je=new nN(P,he,N),de=new YC(Ce),Be=new _P(_,w,H,xe,he,Lt,de),be=new XP(_,Ce),Le=new bP,ft=new RP(xe),Ke=new WC(_,w,H,Se,ne,d,l),De=new PP(_,ne,he),D=new qP(P,ke,he,Se),Ue=new XC(P,xe,ke),pt=new tN(P,xe,ke),ke.programs=Be.programs,_.capabilities=he,_.extensions=xe,_.properties=Ce,_.renderLists=Le,_.shadowMap=De,_.state=Se,_.info=ke}Ne();const Z=new WP(_,P);this.xr=Z,this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.forceContextLoss=function(){const C=xe.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=xe.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return ae},this.setPixelRatio=function(C){C!==void 0&&(ae=C,this.setSize(j,k,!1))},this.getSize=function(C){return C.set(j,k)},this.setSize=function(C,O,W=!0){if(Z.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}j=C,k=O,t.width=Math.floor(C*ae),t.height=Math.floor(O*ae),W===!0&&(t.style.width=C+"px",t.style.height=O+"px"),this.setViewport(0,0,C,O)},this.getDrawingBufferSize=function(C){return C.set(j*ae,k*ae).floor()},this.setDrawingBufferSize=function(C,O,W){j=C,k=O,ae=W,t.width=Math.floor(C*W),t.height=Math.floor(O*W),this.setViewport(0,0,C,O)},this.getCurrentViewport=function(C){return C.copy(S)},this.getViewport=function(C){return C.copy(ue)},this.setViewport=function(C,O,W,$){C.isVector4?ue.set(C.x,C.y,C.z,C.w):ue.set(C,O,W,$),Se.viewport(S.copy(ue).multiplyScalar(ae).round())},this.getScissor=function(C){return C.copy(pe)},this.setScissor=function(C,O,W,$){C.isVector4?pe.set(C.x,C.y,C.z,C.w):pe.set(C,O,W,$),Se.scissor(T.copy(pe).multiplyScalar(ae).round())},this.getScissorTest=function(){return Ze},this.setScissorTest=function(C){Se.setScissorTest(Ze=C)},this.setOpaqueSort=function(C){X=C},this.setTransparentSort=function(C){ce=C},this.getClearColor=function(C){return C.copy(Ke.getClearColor())},this.setClearColor=function(){Ke.setClearColor.apply(Ke,arguments)},this.getClearAlpha=function(){return Ke.getClearAlpha()},this.setClearAlpha=function(){Ke.setClearAlpha.apply(Ke,arguments)},this.clear=function(C=!0,O=!0,W=!0){let $=0;if(C){let z=!1;if(b!==null){const me=b.texture.format;z=me===vf||me===_f||me===Gc}if(z){const me=b.texture.type,Re=me===cs||me===qs||me===Za||me===wo||me===gf||me===yf,Fe=Ke.getClearColor(),Oe=Ke.getClearAlpha(),qe=Fe.r,Ye=Fe.g,ze=Fe.b;Re?(f[0]=qe,f[1]=Ye,f[2]=ze,f[3]=Oe,P.clearBufferuiv(P.COLOR,0,f)):(p[0]=qe,p[1]=Ye,p[2]=ze,p[3]=Oe,P.clearBufferiv(P.COLOR,0,p))}else $|=P.COLOR_BUFFER_BIT}O&&($|=P.DEPTH_BUFFER_BIT,P.clearDepth(this.capabilities.reverseDepthBuffer?0:1)),W&&($|=P.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),P.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",oe,!1),t.removeEventListener("webglcontextrestored",Ee,!1),t.removeEventListener("webglcontextcreationerror",Pe,!1),Le.dispose(),ft.dispose(),Ce.dispose(),w.dispose(),H.dispose(),ne.dispose(),Lt.dispose(),D.dispose(),Be.dispose(),Z.dispose(),Z.removeEventListener("sessionstart",i0),Z.removeEventListener("sessionend",n0),zr.stop()};function oe(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Ee(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const C=ke.autoReset,O=De.enabled,W=De.autoUpdate,$=De.needsUpdate,z=De.type;Ne(),ke.autoReset=C,De.enabled=O,De.autoUpdate=W,De.needsUpdate=$,De.type=z}function Pe(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function gt(C){const O=C.target;O.removeEventListener("dispose",gt),jt(O)}function jt(C){Ki(C),Ce.remove(C)}function Ki(C){const O=Ce.get(C).programs;O!==void 0&&(O.forEach(function(W){Be.releaseProgram(W)}),C.isShaderMaterial&&Be.releaseShaderCache(C))}this.renderBufferDirect=function(C,O,W,$,z,me){O===null&&(O=We);const Re=z.isMesh&&z.matrixWorld.determinant()<0,Fe=LA(C,O,W,$,z);Se.setMaterial($,Re);let Oe=W.index,qe=1;if($.wireframe===!0){if(Oe=re.getWireframeAttribute(W),Oe===void 0)return;qe=2}const Ye=W.drawRange,ze=W.attributes.position;let Nt=Ye.start*qe,Ut=(Ye.start+Ye.count)*qe;me!==null&&(Nt=Math.max(Nt,me.start*qe),Ut=Math.min(Ut,(me.start+me.count)*qe)),Oe!==null?(Nt=Math.max(Nt,0),Ut=Math.min(Ut,Oe.count)):ze!=null&&(Nt=Math.max(Nt,0),Ut=Math.min(Ut,ze.count));const Ht=Ut-Nt;if(Ht<0||Ht===1/0)return;Lt.setup(z,$,Fe,W,Oe);let cn,Mt=Ue;if(Oe!==null&&(cn=ie.get(Oe),Mt=pt,Mt.setIndex(cn)),z.isMesh)$.wireframe===!0?(Se.setLineWidth($.wireframeLinewidth*se()),Mt.setMode(P.LINES)):Mt.setMode(P.TRIANGLES);else if(z.isLine){let Ge=$.linewidth;Ge===void 0&&(Ge=1),Se.setLineWidth(Ge*se()),z.isLineSegments?Mt.setMode(P.LINES):z.isLineLoop?Mt.setMode(P.LINE_LOOP):Mt.setMode(P.LINE_STRIP)}else z.isPoints?Mt.setMode(P.POINTS):z.isSprite&&Mt.setMode(P.TRIANGLES);if(z.isBatchedMesh)if(z._multiDrawInstances!==null)Mt.renderMultiDrawInstances(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount,z._multiDrawInstances);else if(xe.get("WEBGL_multi_draw"))Mt.renderMultiDraw(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount);else{const Ge=z._multiDrawStarts,_i=z._multiDrawCounts,Tt=z._multiDrawCount,Dn=Oe?ie.get(Oe).bytesPerElement:1,Vo=Ce.get($).currentProgram.getUniforms();for(let hn=0;hn<Tt;hn++)Vo.setValue(P,"_gl_DrawID",hn),Mt.render(Ge[hn]/Dn,_i[hn])}else if(z.isInstancedMesh)Mt.renderInstances(Nt,Ht,z.count);else if(W.isInstancedBufferGeometry){const Ge=W._maxInstanceCount!==void 0?W._maxInstanceCount:1/0,_i=Math.min(W.instanceCount,Ge);Mt.renderInstances(Nt,Ht,_i)}else Mt.render(Nt,Ht)};function St(C,O,W){C.transparent===!0&&C.side===ts&&C.forceSinglePass===!1?(C.side=qi,C.needsUpdate=!0,uh(C,O,W),C.side=$s,C.needsUpdate=!0,uh(C,O,W),C.side=ts):uh(C,O,W)}this.compile=function(C,O,W=null){W===null&&(W=C),m=ft.get(W),m.init(O),x.push(m),W.traverseVisible(function(z){z.isLight&&z.layers.test(O.layers)&&(m.pushLight(z),z.castShadow&&m.pushShadow(z))}),C!==W&&C.traverseVisible(function(z){z.isLight&&z.layers.test(O.layers)&&(m.pushLight(z),z.castShadow&&m.pushShadow(z))}),m.setupLights();const $=new Set;return C.traverse(function(z){if(!(z.isMesh||z.isPoints||z.isLine||z.isSprite))return;const me=z.material;if(me)if(Array.isArray(me))for(let Re=0;Re<me.length;Re++){const Fe=me[Re];St(Fe,W,z),$.add(Fe)}else St(me,W,z),$.add(me)}),x.pop(),m=null,$},this.compileAsync=function(C,O,W=null){const $=this.compile(C,O,W);return new Promise(z=>{function me(){if($.forEach(function(Re){Ce.get(Re).currentProgram.isReady()&&$.delete(Re)}),$.size===0){z(C);return}setTimeout(me,10)}xe.get("KHR_parallel_shader_compile")!==null?me():setTimeout(me,10)})};let ji=null;function gs(C){ji&&ji(C)}function i0(){zr.stop()}function n0(){zr.start()}const zr=new Qb;zr.setAnimationLoop(gs),typeof self<"u"&&zr.setContext(self),this.setAnimationLoop=function(C){ji=C,Z.setAnimationLoop(C),C===null?zr.stop():zr.start()},Z.addEventListener("sessionstart",i0),Z.addEventListener("sessionend",n0),this.render=function(C,O){if(O!==void 0&&O.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;if(C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),O.parent===null&&O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),Z.enabled===!0&&Z.isPresenting===!0&&(Z.cameraAutoUpdate===!0&&Z.updateCamera(O),O=Z.getCamera()),C.isScene===!0&&C.onBeforeRender(_,C,O,b),m=ft.get(C,x.length),m.init(O),x.push(m),_e.multiplyMatrices(O.projectionMatrix,O.matrixWorldInverse),Qe.setFromProjectionMatrix(_e),le=this.localClippingEnabled,J=de.init(this.clippingPlanes,le),g=Le.get(C,y.length),g.init(),y.push(g),Z.enabled===!0&&Z.isPresenting===!0){const me=_.xr.getDepthSensingMesh();me!==null&&dp(me,O,-1/0,_.sortObjects)}dp(C,O,0,_.sortObjects),g.finish(),_.sortObjects===!0&&g.sort(X,ce),et=Z.enabled===!1||Z.isPresenting===!1||Z.hasDepthSensing()===!1,et&&Ke.addToRenderList(g,C),this.info.render.frame++,J===!0&&de.beginShadows();const W=m.state.shadowsArray;De.render(W,C,O),J===!0&&de.endShadows(),this.info.autoReset===!0&&this.info.reset();const $=g.opaque,z=g.transmissive;if(m.setupLights(),O.isArrayCamera){const me=O.cameras;if(z.length>0)for(let Re=0,Fe=me.length;Re<Fe;Re++){const Oe=me[Re];r0($,z,C,Oe)}et&&Ke.render(C);for(let Re=0,Fe=me.length;Re<Fe;Re++){const Oe=me[Re];s0(g,C,Oe,Oe.viewport)}}else z.length>0&&r0($,z,C,O),et&&Ke.render(C),s0(g,C,O);b!==null&&(N.updateMultisampleRenderTarget(b),N.updateRenderTargetMipmap(b)),C.isScene===!0&&C.onAfterRender(_,C,O),Lt.resetDefaultState(),A=-1,L=null,x.pop(),x.length>0?(m=x[x.length-1],J===!0&&de.setGlobalState(_.clippingPlanes,m.state.camera)):m=null,y.pop(),y.length>0?g=y[y.length-1]:g=null};function dp(C,O,W,$){if(C.visible===!1)return;if(C.layers.test(O.layers)){if(C.isGroup)W=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(O);else if(C.isLight)m.pushLight(C),C.castShadow&&m.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||Qe.intersectsSprite(C)){$&&Xe.setFromMatrixPosition(C.matrixWorld).applyMatrix4(_e);const Re=ne.update(C),Fe=C.material;Fe.visible&&g.push(C,Re,Fe,W,Xe.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||Qe.intersectsObject(C))){const Re=ne.update(C),Fe=C.material;if($&&(C.boundingSphere!==void 0?(C.boundingSphere===null&&C.computeBoundingSphere(),Xe.copy(C.boundingSphere.center)):(Re.boundingSphere===null&&Re.computeBoundingSphere(),Xe.copy(Re.boundingSphere.center)),Xe.applyMatrix4(C.matrixWorld).applyMatrix4(_e)),Array.isArray(Fe)){const Oe=Re.groups;for(let qe=0,Ye=Oe.length;qe<Ye;qe++){const ze=Oe[qe],Nt=Fe[ze.materialIndex];Nt&&Nt.visible&&g.push(C,Re,Nt,W,Xe.z,ze)}}else Fe.visible&&g.push(C,Re,Fe,W,Xe.z,null)}}const me=C.children;for(let Re=0,Fe=me.length;Re<Fe;Re++)dp(me[Re],O,W,$)}function s0(C,O,W,$){const z=C.opaque,me=C.transmissive,Re=C.transparent;m.setupLightsView(W),J===!0&&de.setGlobalState(_.clippingPlanes,W),$&&Se.viewport(S.copy($)),z.length>0&&hh(z,O,W),me.length>0&&hh(me,O,W),Re.length>0&&hh(Re,O,W),Se.buffers.depth.setTest(!0),Se.buffers.depth.setMask(!0),Se.buffers.color.setMask(!0),Se.setPolygonOffset(!1)}function r0(C,O,W,$){if((W.isScene===!0?W.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[$.id]===void 0&&(m.state.transmissionRenderTarget[$.id]=new Ln(1,1,{generateMipmaps:!0,type:xe.has("EXT_color_buffer_half_float")||xe.has("EXT_color_buffer_float")?Do:cs,minFilter:ns,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:vt.workingColorSpace}));const me=m.state.transmissionRenderTarget[$.id],Re=$.viewport||S;me.setSize(Re.z,Re.w);const Fe=_.getRenderTarget();_.setRenderTarget(me),_.getClearColor(F),G=_.getClearAlpha(),G<1&&_.setClearColor(16777215,.5),_.clear(),et&&Ke.render(W);const Oe=_.toneMapping;_.toneMapping=ks;const qe=$.viewport;if($.viewport!==void 0&&($.viewport=void 0),m.setupLightsView($),J===!0&&de.setGlobalState(_.clippingPlanes,$),hh(C,W,$),N.updateMultisampleRenderTarget(me),N.updateRenderTargetMipmap(me),xe.has("WEBGL_multisampled_render_to_texture")===!1){let Ye=!1;for(let ze=0,Nt=O.length;ze<Nt;ze++){const Ut=O[ze],Ht=Ut.object,cn=Ut.geometry,Mt=Ut.material,Ge=Ut.group;if(Mt.side===ts&&Ht.layers.test($.layers)){const _i=Mt.side;Mt.side=qi,Mt.needsUpdate=!0,o0(Ht,W,$,cn,Mt,Ge),Mt.side=_i,Mt.needsUpdate=!0,Ye=!0}}Ye===!0&&(N.updateMultisampleRenderTarget(me),N.updateRenderTargetMipmap(me))}_.setRenderTarget(Fe),_.setClearColor(F,G),qe!==void 0&&($.viewport=qe),_.toneMapping=Oe}function hh(C,O,W){const $=O.isScene===!0?O.overrideMaterial:null;for(let z=0,me=C.length;z<me;z++){const Re=C[z],Fe=Re.object,Oe=Re.geometry,qe=$===null?Re.material:$,Ye=Re.group;Fe.layers.test(W.layers)&&o0(Fe,O,W,Oe,qe,Ye)}}function o0(C,O,W,$,z,me){C.onBeforeRender(_,O,W,$,z,me),C.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),z.onBeforeRender(_,O,W,$,C,me),z.transparent===!0&&z.side===ts&&z.forceSinglePass===!1?(z.side=qi,z.needsUpdate=!0,_.renderBufferDirect(W,O,$,z,C,me),z.side=$s,z.needsUpdate=!0,_.renderBufferDirect(W,O,$,z,C,me),z.side=ts):_.renderBufferDirect(W,O,$,z,C,me),C.onAfterRender(_,O,W,$,z,me)}function uh(C,O,W){O.isScene!==!0&&(O=We);const $=Ce.get(C),z=m.state.lights,me=m.state.shadowsArray,Re=z.state.version,Fe=Be.getParameters(C,z.state,me,O,W),Oe=Be.getProgramCacheKey(Fe);let qe=$.programs;$.environment=C.isMeshStandardMaterial?O.environment:null,$.fog=O.fog,$.envMap=(C.isMeshStandardMaterial?H:w).get(C.envMap||$.environment),$.envMapRotation=$.environment!==null&&C.envMap===null?O.environmentRotation:C.envMapRotation,qe===void 0&&(C.addEventListener("dispose",gt),qe=new Map,$.programs=qe);let Ye=qe.get(Oe);if(Ye!==void 0){if($.currentProgram===Ye&&$.lightsStateVersion===Re)return l0(C,Fe),Ye}else Fe.uniforms=Be.getUniforms(C),C.onBeforeCompile(Fe,_),Ye=Be.acquireProgram(Fe,Oe),qe.set(Oe,Ye),$.uniforms=Fe.uniforms;const ze=$.uniforms;return(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(ze.clippingPlanes=de.uniform),l0(C,Fe),$.needsLights=UA(C),$.lightsStateVersion=Re,$.needsLights&&(ze.ambientLightColor.value=z.state.ambient,ze.lightProbe.value=z.state.probe,ze.directionalLights.value=z.state.directional,ze.directionalLightShadows.value=z.state.directionalShadow,ze.spotLights.value=z.state.spot,ze.spotLightShadows.value=z.state.spotShadow,ze.rectAreaLights.value=z.state.rectArea,ze.ltc_1.value=z.state.rectAreaLTC1,ze.ltc_2.value=z.state.rectAreaLTC2,ze.pointLights.value=z.state.point,ze.pointLightShadows.value=z.state.pointShadow,ze.hemisphereLights.value=z.state.hemi,ze.directionalShadowMap.value=z.state.directionalShadowMap,ze.directionalShadowMatrix.value=z.state.directionalShadowMatrix,ze.spotShadowMap.value=z.state.spotShadowMap,ze.spotLightMatrix.value=z.state.spotLightMatrix,ze.spotLightMap.value=z.state.spotLightMap,ze.pointShadowMap.value=z.state.pointShadowMap,ze.pointShadowMatrix.value=z.state.pointShadowMatrix),$.currentProgram=Ye,$.uniformsList=null,Ye}function a0(C){if(C.uniformsList===null){const O=C.currentProgram.getUniforms();C.uniformsList=Yu.seqWithValue(O.seq,C.uniforms)}return C.uniformsList}function l0(C,O){const W=Ce.get(C);W.outputColorSpace=O.outputColorSpace,W.batching=O.batching,W.batchingColor=O.batchingColor,W.instancing=O.instancing,W.instancingColor=O.instancingColor,W.instancingMorph=O.instancingMorph,W.skinning=O.skinning,W.morphTargets=O.morphTargets,W.morphNormals=O.morphNormals,W.morphColors=O.morphColors,W.morphTargetsCount=O.morphTargetsCount,W.numClippingPlanes=O.numClippingPlanes,W.numIntersection=O.numClipIntersection,W.vertexAlphas=O.vertexAlphas,W.vertexTangents=O.vertexTangents,W.toneMapping=O.toneMapping}function LA(C,O,W,$,z){O.isScene!==!0&&(O=We),N.resetTextureUnits();const me=O.fog,Re=$.isMeshStandardMaterial?O.environment:null,Fe=b===null?_.outputColorSpace:b.isXRRenderTarget===!0?b.texture.colorSpace:js,Oe=($.isMeshStandardMaterial?H:w).get($.envMap||Re),qe=$.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,Ye=!!W.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),ze=!!W.morphAttributes.position,Nt=!!W.morphAttributes.normal,Ut=!!W.morphAttributes.color;let Ht=ks;$.toneMapped&&(b===null||b.isXRRenderTarget===!0)&&(Ht=_.toneMapping);const cn=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,Mt=cn!==void 0?cn.length:0,Ge=Ce.get($),_i=m.state.lights;if(J===!0&&(le===!0||C!==L)){const Tn=C===L&&$.id===A;de.setState($,C,Tn)}let Tt=!1;$.version===Ge.__version?(Ge.needsLights&&Ge.lightsStateVersion!==_i.state.version||Ge.outputColorSpace!==Fe||z.isBatchedMesh&&Ge.batching===!1||!z.isBatchedMesh&&Ge.batching===!0||z.isBatchedMesh&&Ge.batchingColor===!0&&z.colorTexture===null||z.isBatchedMesh&&Ge.batchingColor===!1&&z.colorTexture!==null||z.isInstancedMesh&&Ge.instancing===!1||!z.isInstancedMesh&&Ge.instancing===!0||z.isSkinnedMesh&&Ge.skinning===!1||!z.isSkinnedMesh&&Ge.skinning===!0||z.isInstancedMesh&&Ge.instancingColor===!0&&z.instanceColor===null||z.isInstancedMesh&&Ge.instancingColor===!1&&z.instanceColor!==null||z.isInstancedMesh&&Ge.instancingMorph===!0&&z.morphTexture===null||z.isInstancedMesh&&Ge.instancingMorph===!1&&z.morphTexture!==null||Ge.envMap!==Oe||$.fog===!0&&Ge.fog!==me||Ge.numClippingPlanes!==void 0&&(Ge.numClippingPlanes!==de.numPlanes||Ge.numIntersection!==de.numIntersection)||Ge.vertexAlphas!==qe||Ge.vertexTangents!==Ye||Ge.morphTargets!==ze||Ge.morphNormals!==Nt||Ge.morphColors!==Ut||Ge.toneMapping!==Ht||Ge.morphTargetsCount!==Mt)&&(Tt=!0):(Tt=!0,Ge.__version=$.version);let Dn=Ge.currentProgram;Tt===!0&&(Dn=uh($,O,z));let Vo=!1,hn=!1,fp=!1;const Zt=Dn.getUniforms(),ir=Ge.uniforms;if(Se.useProgram(Dn.program)&&(Vo=!0,hn=!0,fp=!0),$.id!==A&&(A=$.id,hn=!0),Vo||L!==C){he.reverseDepthBuffer?(Te.copy(C.projectionMatrix),L1(Te),D1(Te),Zt.setValue(P,"projectionMatrix",Te)):Zt.setValue(P,"projectionMatrix",C.projectionMatrix),Zt.setValue(P,"viewMatrix",C.matrixWorldInverse);const Tn=Zt.map.cameraPosition;Tn!==void 0&&Tn.setValue(P,Ve.setFromMatrixPosition(C.matrixWorld)),he.logarithmicDepthBuffer&&Zt.setValue(P,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Zt.setValue(P,"isOrthographic",C.isOrthographicCamera===!0),L!==C&&(L=C,hn=!0,fp=!0)}if(z.isSkinnedMesh){Zt.setOptional(P,z,"bindMatrix"),Zt.setOptional(P,z,"bindMatrixInverse");const Tn=z.skeleton;Tn&&(Tn.boneTexture===null&&Tn.computeBoneTexture(),Zt.setValue(P,"boneTexture",Tn.boneTexture,N))}z.isBatchedMesh&&(Zt.setOptional(P,z,"batchingTexture"),Zt.setValue(P,"batchingTexture",z._matricesTexture,N),Zt.setOptional(P,z,"batchingIdTexture"),Zt.setValue(P,"batchingIdTexture",z._indirectTexture,N),Zt.setOptional(P,z,"batchingColorTexture"),z._colorsTexture!==null&&Zt.setValue(P,"batchingColorTexture",z._colorsTexture,N));const pp=W.morphAttributes;if((pp.position!==void 0||pp.normal!==void 0||pp.color!==void 0)&&je.update(z,W,Dn),(hn||Ge.receiveShadow!==z.receiveShadow)&&(Ge.receiveShadow=z.receiveShadow,Zt.setValue(P,"receiveShadow",z.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(ir.envMap.value=Oe,ir.flipEnvMap.value=Oe.isCubeTexture&&Oe.isRenderTargetTexture===!1?-1:1),$.isMeshStandardMaterial&&$.envMap===null&&O.environment!==null&&(ir.envMapIntensity.value=O.environmentIntensity),hn&&(Zt.setValue(P,"toneMappingExposure",_.toneMappingExposure),Ge.needsLights&&DA(ir,fp),me&&$.fog===!0&&be.refreshFogUniforms(ir,me),be.refreshMaterialUniforms(ir,$,ae,k,m.state.transmissionRenderTarget[C.id]),Yu.upload(P,a0(Ge),ir,N)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(Yu.upload(P,a0(Ge),ir,N),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Zt.setValue(P,"center",z.center),Zt.setValue(P,"modelViewMatrix",z.modelViewMatrix),Zt.setValue(P,"normalMatrix",z.normalMatrix),Zt.setValue(P,"modelMatrix",z.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const Tn=$.uniformsGroups;for(let mp=0,FA=Tn.length;mp<FA;mp++){const c0=Tn[mp];D.update(c0,Dn),D.bind(c0,Dn)}}return Dn}function DA(C,O){C.ambientLightColor.needsUpdate=O,C.lightProbe.needsUpdate=O,C.directionalLights.needsUpdate=O,C.directionalLightShadows.needsUpdate=O,C.pointLights.needsUpdate=O,C.pointLightShadows.needsUpdate=O,C.spotLights.needsUpdate=O,C.spotLightShadows.needsUpdate=O,C.rectAreaLights.needsUpdate=O,C.hemisphereLights.needsUpdate=O}function UA(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(C,O,W){Ce.get(C.texture).__webglTexture=O,Ce.get(C.depthTexture).__webglTexture=W;const $=Ce.get(C);$.__hasExternalTextures=!0,$.__autoAllocateDepthBuffer=W===void 0,$.__autoAllocateDepthBuffer||xe.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(C,O){const W=Ce.get(C);W.__webglFramebuffer=O,W.__useDefaultFramebuffer=O===void 0},this.setRenderTarget=function(C,O=0,W=0){b=C,E=O,M=W;let $=!0,z=null,me=!1,Re=!1;if(C){const Oe=Ce.get(C);if(Oe.__useDefaultFramebuffer!==void 0)Se.bindFramebuffer(P.FRAMEBUFFER,null),$=!1;else if(Oe.__webglFramebuffer===void 0)N.setupRenderTarget(C);else if(Oe.__hasExternalTextures)N.rebindTextures(C,Ce.get(C.texture).__webglTexture,Ce.get(C.depthTexture).__webglTexture);else if(C.depthBuffer){const ze=C.depthTexture;if(Oe.__boundDepthTexture!==ze){if(ze!==null&&Ce.has(ze)&&(C.width!==ze.image.width||C.height!==ze.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");N.setupDepthRenderbuffer(C)}}const qe=C.texture;(qe.isData3DTexture||qe.isDataArrayTexture||qe.isCompressedArrayTexture)&&(Re=!0);const Ye=Ce.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Array.isArray(Ye[O])?z=Ye[O][W]:z=Ye[O],me=!0):C.samples>0&&N.useMultisampledRTT(C)===!1?z=Ce.get(C).__webglMultisampledFramebuffer:Array.isArray(Ye)?z=Ye[W]:z=Ye,S.copy(C.viewport),T.copy(C.scissor),B=C.scissorTest}else S.copy(ue).multiplyScalar(ae).floor(),T.copy(pe).multiplyScalar(ae).floor(),B=Ze;if(Se.bindFramebuffer(P.FRAMEBUFFER,z)&&$&&Se.drawBuffers(C,z),Se.viewport(S),Se.scissor(T),Se.setScissorTest(B),me){const Oe=Ce.get(C.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_CUBE_MAP_POSITIVE_X+O,Oe.__webglTexture,W)}else if(Re){const Oe=Ce.get(C.texture),qe=O||0;P.framebufferTextureLayer(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,Oe.__webglTexture,W||0,qe)}A=-1},this.readRenderTargetPixels=function(C,O,W,$,z,me,Re){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Fe=Ce.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Re!==void 0&&(Fe=Fe[Re]),Fe){Se.bindFramebuffer(P.FRAMEBUFFER,Fe);try{const Oe=C.texture,qe=Oe.format,Ye=Oe.type;if(!he.textureFormatReadable(qe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!he.textureTypeReadable(Ye)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}O>=0&&O<=C.width-$&&W>=0&&W<=C.height-z&&P.readPixels(O,W,$,z,tt.convert(qe),tt.convert(Ye),me)}finally{const Oe=b!==null?Ce.get(b).__webglFramebuffer:null;Se.bindFramebuffer(P.FRAMEBUFFER,Oe)}}},this.readRenderTargetPixelsAsync=async function(C,O,W,$,z,me,Re){if(!(C&&C.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Fe=Ce.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Re!==void 0&&(Fe=Fe[Re]),Fe){const Oe=C.texture,qe=Oe.format,Ye=Oe.type;if(!he.textureFormatReadable(qe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!he.textureTypeReadable(Ye))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(O>=0&&O<=C.width-$&&W>=0&&W<=C.height-z){Se.bindFramebuffer(P.FRAMEBUFFER,Fe);const ze=P.createBuffer();P.bindBuffer(P.PIXEL_PACK_BUFFER,ze),P.bufferData(P.PIXEL_PACK_BUFFER,me.byteLength,P.STREAM_READ),P.readPixels(O,W,$,z,tt.convert(qe),tt.convert(Ye),0);const Nt=b!==null?Ce.get(b).__webglFramebuffer:null;Se.bindFramebuffer(P.FRAMEBUFFER,Nt);const Ut=P.fenceSync(P.SYNC_GPU_COMMANDS_COMPLETE,0);return P.flush(),await I1(P,Ut,4),P.bindBuffer(P.PIXEL_PACK_BUFFER,ze),P.getBufferSubData(P.PIXEL_PACK_BUFFER,0,me),P.deleteBuffer(ze),P.deleteSync(Ut),me}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(C,O=null,W=0){C.isTexture!==!0&&($u("WebGLRenderer: copyFramebufferToTexture function signature has changed."),O=arguments[0]||null,C=arguments[1]);const $=Math.pow(2,-W),z=Math.floor(C.image.width*$),me=Math.floor(C.image.height*$),Re=O!==null?O.x:0,Fe=O!==null?O.y:0;N.setTexture2D(C,0),P.copyTexSubImage2D(P.TEXTURE_2D,W,0,0,Re,Fe,z,me),Se.unbindTexture()},this.copyTextureToTexture=function(C,O,W=null,$=null,z=0){C.isTexture!==!0&&($u("WebGLRenderer: copyTextureToTexture function signature has changed."),$=arguments[0]||null,C=arguments[1],O=arguments[2],z=arguments[3]||0,W=null);let me,Re,Fe,Oe,qe,Ye;W!==null?(me=W.max.x-W.min.x,Re=W.max.y-W.min.y,Fe=W.min.x,Oe=W.min.y):(me=C.image.width,Re=C.image.height,Fe=0,Oe=0),$!==null?(qe=$.x,Ye=$.y):(qe=0,Ye=0);const ze=tt.convert(O.format),Nt=tt.convert(O.type);N.setTexture2D(O,0),P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,O.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,O.unpackAlignment);const Ut=P.getParameter(P.UNPACK_ROW_LENGTH),Ht=P.getParameter(P.UNPACK_IMAGE_HEIGHT),cn=P.getParameter(P.UNPACK_SKIP_PIXELS),Mt=P.getParameter(P.UNPACK_SKIP_ROWS),Ge=P.getParameter(P.UNPACK_SKIP_IMAGES),_i=C.isCompressedTexture?C.mipmaps[z]:C.image;P.pixelStorei(P.UNPACK_ROW_LENGTH,_i.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,_i.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,Fe),P.pixelStorei(P.UNPACK_SKIP_ROWS,Oe),C.isDataTexture?P.texSubImage2D(P.TEXTURE_2D,z,qe,Ye,me,Re,ze,Nt,_i.data):C.isCompressedTexture?P.compressedTexSubImage2D(P.TEXTURE_2D,z,qe,Ye,_i.width,_i.height,ze,_i.data):P.texSubImage2D(P.TEXTURE_2D,z,qe,Ye,me,Re,ze,Nt,_i),P.pixelStorei(P.UNPACK_ROW_LENGTH,Ut),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,Ht),P.pixelStorei(P.UNPACK_SKIP_PIXELS,cn),P.pixelStorei(P.UNPACK_SKIP_ROWS,Mt),P.pixelStorei(P.UNPACK_SKIP_IMAGES,Ge),z===0&&O.generateMipmaps&&P.generateMipmap(P.TEXTURE_2D),Se.unbindTexture()},this.copyTextureToTexture3D=function(C,O,W=null,$=null,z=0){C.isTexture!==!0&&($u("WebGLRenderer: copyTextureToTexture3D function signature has changed."),W=arguments[0]||null,$=arguments[1]||null,C=arguments[2],O=arguments[3],z=arguments[4]||0);let me,Re,Fe,Oe,qe,Ye,ze,Nt,Ut;const Ht=C.isCompressedTexture?C.mipmaps[z]:C.image;W!==null?(me=W.max.x-W.min.x,Re=W.max.y-W.min.y,Fe=W.max.z-W.min.z,Oe=W.min.x,qe=W.min.y,Ye=W.min.z):(me=Ht.width,Re=Ht.height,Fe=Ht.depth,Oe=0,qe=0,Ye=0),$!==null?(ze=$.x,Nt=$.y,Ut=$.z):(ze=0,Nt=0,Ut=0);const cn=tt.convert(O.format),Mt=tt.convert(O.type);let Ge;if(O.isData3DTexture)N.setTexture3D(O,0),Ge=P.TEXTURE_3D;else if(O.isDataArrayTexture||O.isCompressedArrayTexture)N.setTexture2DArray(O,0),Ge=P.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,O.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,O.unpackAlignment);const _i=P.getParameter(P.UNPACK_ROW_LENGTH),Tt=P.getParameter(P.UNPACK_IMAGE_HEIGHT),Dn=P.getParameter(P.UNPACK_SKIP_PIXELS),Vo=P.getParameter(P.UNPACK_SKIP_ROWS),hn=P.getParameter(P.UNPACK_SKIP_IMAGES);P.pixelStorei(P.UNPACK_ROW_LENGTH,Ht.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,Ht.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,Oe),P.pixelStorei(P.UNPACK_SKIP_ROWS,qe),P.pixelStorei(P.UNPACK_SKIP_IMAGES,Ye),C.isDataTexture||C.isData3DTexture?P.texSubImage3D(Ge,z,ze,Nt,Ut,me,Re,Fe,cn,Mt,Ht.data):O.isCompressedArrayTexture?P.compressedTexSubImage3D(Ge,z,ze,Nt,Ut,me,Re,Fe,cn,Ht.data):P.texSubImage3D(Ge,z,ze,Nt,Ut,me,Re,Fe,cn,Mt,Ht),P.pixelStorei(P.UNPACK_ROW_LENGTH,_i),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,Tt),P.pixelStorei(P.UNPACK_SKIP_PIXELS,Dn),P.pixelStorei(P.UNPACK_SKIP_ROWS,Vo),P.pixelStorei(P.UNPACK_SKIP_IMAGES,hn),z===0&&O.generateMipmaps&&P.generateMipmap(Ge),Se.unbindTexture()},this.initRenderTarget=function(C){Ce.get(C).__webglFramebuffer===void 0&&N.setupRenderTarget(C)},this.initTexture=function(C){C.isCubeTexture?N.setTextureCube(C,0):C.isData3DTexture?N.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?N.setTexture2DArray(C,0):N.setTexture2D(C,0),Se.unbindTexture()},this.resetState=function(){E=0,M=0,b=null,Se.reset(),Lt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ss}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===bf?"display-p3":"srgb",t.unpackColorSpace=vt.workingColorSpace===Vc?"display-p3":"srgb"}}class Ef{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ae(e),this.density=t}clone(){return new Ef(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Rf{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new Ae(e),this.near=t,this.far=i}clone(){return new Rf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let oM=class extends Rt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Xn,this.environmentIntensity=1,this.environmentRotation=new Xn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}},Yc=class{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=xc,this.updateRanges=[],this.version=0,this.uuid=Sn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Sn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Sn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}};const zi=new R;let Nn=class aM{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)zi.fromBufferAttribute(this,t),zi.applyMatrix4(e),this.setXYZ(t,zi.x,zi.y,zi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)zi.fromBufferAttribute(this,t),zi.applyNormalMatrix(e),this.setXYZ(t,zi.x,zi.y,zi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)zi.fromBufferAttribute(this,t),zi.transformDirection(e),this.setXYZ(t,zi.x,zi.y,zi.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=Wi(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=it(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Wi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Wi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Wi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Wi(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array),s=it(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new xt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new aM(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}},Hy=class extends Oi{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}},ia;const vl=new R,na=new R,sa=new R,ra=new Y,Sl=new Y,lM=new $e,Ih=new R,bl=new R,Lh=new R,K0=new Y,Wp=new Y,j0=new Y;class cM extends Rt{constructor(e=new Hy){if(super(),this.isSprite=!0,this.type="Sprite",ia===void 0){ia=new ht;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Yc(t,5);ia.setIndex([0,1,2,0,2,3]),ia.setAttribute("position",new Nn(i,3,0,!1)),ia.setAttribute("uv",new Nn(i,2,3,!1))}this.geometry=ia,this.material=e,this.center=new Y(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),na.setFromMatrixScale(this.matrixWorld),lM.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),sa.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&na.multiplyScalar(-sa.z);const i=this.material.rotation;let n,s;i!==0&&(s=Math.cos(i),n=Math.sin(i));const r=this.center;Dh(Ih.set(-.5,-.5,0),sa,r,na,n,s),Dh(bl.set(.5,-.5,0),sa,r,na,n,s),Dh(Lh.set(.5,.5,0),sa,r,na,n,s),K0.set(0,0),Wp.set(1,0),j0.set(1,1);let a=e.ray.intersectTriangle(Ih,bl,Lh,!1,vl);if(a===null&&(Dh(bl.set(-.5,.5,0),sa,r,na,n,s),Wp.set(0,1),a=e.ray.intersectTriangle(Ih,Lh,bl,!1,vl),a===null))return;const l=e.ray.origin.distanceTo(vl);l<e.near||l>e.far||t.push({distance:l,point:vl.clone(),uv:br.getInterpolation(vl,Ih,bl,Lh,K0,Wp,j0,new Y),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Dh(o,e,t,i,n,s){ra.subVectors(o,t).addScalar(.5).multiply(i),n!==void 0?(Sl.x=s*ra.x-n*ra.y,Sl.y=n*ra.x+s*ra.y):Sl.copy(ra),o.copy(e),o.x+=Sl.x,o.y+=Sl.y,o.applyMatrix4(lM)}const Uh=new R,J0=new R;class hM extends Rt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const s=t[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let s;for(s=0;s<n.length&&!(t<n[s].distance);s++);return n.splice(s,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const n=t.splice(i,1);return this.remove(n[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let s=t[i].distance;if(t[i].object.visible&&(s-=s*t[i].hysteresis),e<s)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){Uh.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(Uh);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Uh.setFromMatrixPosition(e.matrixWorld),J0.setFromMatrixPosition(this.matrixWorld);const i=Uh.distanceTo(J0)/e.zoom;t[0].object.visible=!0;let n,s;for(n=1,s=t.length;n<s;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),i>=r)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<s;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,s=i.length;n<s;n++){const r=i[n];t.object.levels.push({object:r.object.uuid,distance:r.distance,hysteresis:r.hysteresis})}return t}}const Q0=new R,e_=new dt,t_=new dt,ZP=new R,i_=new $e,Fh=new R,$p=new gi,n_=new $e,Xp=new Uo;class uM extends qt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=_g,this.bindMatrix=new $e,this.bindMatrixInverse=new $e,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new mi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Fh),this.boundingBox.expandByPoint(Fh)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new gi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Fh),this.boundingSphere.expandByPoint(Fh)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),$p.copy(this.boundingSphere),$p.applyMatrix4(n),e.ray.intersectsSphere($p)!==!1&&(n_.copy(n).invert(),Xp.copy(e.ray).applyMatrix4(n_),!(this.boundingBox!==null&&Xp.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Xp)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new dt,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===_g?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===bb?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;e_.fromBufferAttribute(n.attributes.skinIndex,e),t_.fromBufferAttribute(n.attributes.skinWeight,e),Q0.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const r=t_.getComponent(s);if(r!==0){const a=e_.getComponent(s);i_.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(ZP.copy(Q0).applyMatrix4(i_),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Wy extends Rt{constructor(){super(),this.isBone=!0,this.type="Bone"}}let os=class extends xi{constructor(e=null,t=1,i=1,n,s,r,a,l,c=pi,h=pi,u,d){super(null,r,a,l,c,h,n,s,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};const s_=new $e,KP=new $e;class Cf{constructor(e=[],t=[]){this.uuid=Sn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new $e)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new $e;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let s=0,r=e.length;s<r;s++){const a=e[s]?e[s].matrixWorld:KP;s_.multiplyMatrices(a,t[s]),s_.toArray(i,s*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new Cf(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new os(t,e,e,Xi,en);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const s=e.bones[i];let r=t[s];r===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),r=new Wy),this.bones.push(r),this.boneInverses.push(new $e().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,s=t.length;n<s;n++){const r=t[n];e.bones.push(r.uuid);const a=i[n];e.boneInverses.push(a.toArray())}return e}}let Rr=class extends xt{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}};const oa=new $e,r_=new $e,Bh=[],o_=new mi,jP=new $e,Ml=new qt,Tl=new gi;class dM extends qt{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Rr(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,jP)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new mi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,oa),o_.copy(e.boundingBox).applyMatrix4(oa),this.boundingBox.union(o_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new gi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,oa),Tl.copy(e.boundingSphere).applyMatrix4(oa),this.boundingSphere.union(Tl)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,s=i.length+1,r=e*s+1;for(let a=0;a<i.length;a++)i[a]=n[r+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(Ml.geometry=this.geometry,Ml.material=this.material,Ml.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Tl.copy(this.boundingSphere),Tl.applyMatrix4(i),e.ray.intersectsSphere(Tl)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,oa),r_.multiplyMatrices(i,oa),Ml.matrixWorld=r_,Ml.raycast(e,Bh);for(let r=0,a=Bh.length;r<a;r++){const l=Bh[r];l.instanceId=s,l.object=this,t.push(l)}Bh.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Rr(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new os(new Float32Array(n*this.count),n,this.count,xf,en));const s=this.morphTexture.source.data.data;let r=0;for(let c=0;c<i.length;c++)r+=i[c];const a=this.geometry.morphTargetsRelative?1:1-r,l=n*e;s[l]=a,s.set(i,l+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function JP(o,e){return o.z-e.z}function QP(o,e){return e.z-o.z}class e2{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i){const n=this.pool,s=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1,index:-1});const r=n[this.index];s.push(r),this.index++,r.start=e.start,r.count=e.count,r.z=t,r.index=i}reset(){this.list.length=0,this.index=0}}const cr=new $e,qp=new $e,t2=new $e,i2=new Ae(1,1,1),a_=new $e,Yp=new Xc,Oh=new mi,Xr=new gi,wl=new R,l_=new R,n2=new R,Zp=new e2,Pi=new qt,zh=[];function s2(o,e,t=0){const i=e.itemSize;if(o.isInterleavedBufferAttribute||o.array.constructor!==e.array.constructor){const n=o.count;for(let s=0;s<n;s++)for(let r=0;r<i;r++)e.setComponent(s+t,r,o.getComponent(s,r))}else e.array.set(o.array,t*i);e.needsUpdate=!0}class fM extends qt{get maxInstanceCount(){return this._maxInstanceCount}constructor(e,t,i=t*2,n){super(new ht,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawInfo=[],this._availableInstanceIds=[],this._drawRanges=[],this._reservedRanges=[],this._bounds=[],this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._visibilityChanged=!0,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new os(t,e,e,Xi,en);this._matricesTexture=i}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),i=new os(t,e,e,Gc,qs);this._indirectTexture=i}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),i=new os(t,e,e,Xi,en);i.colorSpace=vt.workingColorSpace,this._colorsTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,n=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const r=e.getAttribute(s),{array:a,itemSize:l,normalized:c}=r,h=new a.constructor(i*l),u=new xt(h,l,c);t.setAttribute(s,u)}if(e.getIndex()!==null){const s=i>65535?new Uint32Array(n):new Uint16Array(n);t.setIndex(new xt(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(!e.hasAttribute(i))throw new Error(`BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=e.getAttribute(i),s=t.getAttribute(i);if(n.itemSize!==s.itemSize||n.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mi);const e=this.boundingBox,t=this._drawInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,cr),this.getBoundingBoxAt(s,Oh).applyMatrix4(cr),e.union(Oh)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gi);const e=this.boundingSphere,t=this._drawInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,cr),this.getBoundingSphereAt(s,Xr).applyMatrix4(cr),e.union(Xr)}}addInstance(e){if(this._drawInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("BatchedMesh: Maximum item count reached.");const i={visible:!0,active:!0,geometryIndex:e};let n=null;this._availableInstanceIds.length>0?(n=this._availableInstanceIds.pop(),this._drawInfo[n]=i):(n=this._drawInfo.length,this._drawInfo.push(i));const s=this._matricesTexture,r=s.image.data;t2.toArray(r,n*16),s.needsUpdate=!0;const a=this._colorsTexture;return a&&(i2.toArray(a.image.data,n*4),a.needsUpdate=!0),n}addGeometry(e,t=-1,i=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._drawInfo.length>=this._maxInstanceCount)throw new Error("BatchedMesh: Maximum item count reached.");const n={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const r=this._reservedRanges,a=this._drawRanges,l=this._bounds;this._geometryCount!==0&&(s=r[r.length-1]),t===-1?n.vertexCount=e.getAttribute("position").count:n.vertexCount=t,s===null?n.vertexStart=0:n.vertexStart=s.vertexStart+s.vertexCount;const c=e.getIndex(),h=c!==null;if(h&&(i===-1?n.indexCount=c.count:n.indexCount=i,s===null?n.indexStart=0:n.indexStart=s.indexStart+s.indexCount),n.indexStart!==-1&&n.indexStart+n.indexCount>this._maxIndexCount||n.vertexStart+n.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const u=this._geometryCount;return this._geometryCount++,r.push(n),a.push({start:h?n.indexStart:n.vertexStart,count:-1}),l.push({boxInitialized:!1,box:new mi,sphereInitialized:!1,sphere:new gi}),this.setGeometryAt(u,e),u}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,n=i.getIndex()!==null,s=i.getIndex(),r=t.getIndex(),a=this._reservedRanges[e];if(n&&r.count>a.indexCount||t.attributes.position.count>a.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.vertexCount;for(const f in i.attributes){const p=t.getAttribute(f),g=i.getAttribute(f);s2(p,g,l);const m=p.itemSize;for(let y=p.count,x=c;y<x;y++){const _=l+y;for(let v=0;v<m;v++)g.setComponent(_,v,0)}g.needsUpdate=!0,g.addUpdateRange(l*m,c*m)}if(n){const f=a.indexStart;for(let p=0;p<r.count;p++)s.setX(f+p,l+r.getX(p));for(let p=r.count,g=a.indexCount;p<g;p++)s.setX(f+p,l);s.needsUpdate=!0,s.addUpdateRange(f,a.indexCount)}const h=this._bounds[e];t.boundingBox!==null?(h.box.copy(t.boundingBox),h.boxInitialized=!0):h.boxInitialized=!1,t.boundingSphere!==null?(h.sphere.copy(t.boundingSphere),h.sphereInitialized=!0):h.sphereInitialized=!1;const u=this._drawRanges[e],d=t.getAttribute("position");return u.count=n?r.count:d.count,this._visibilityChanged=!0,e}deleteInstance(e){const t=this._drawInfo;return e>=t.length||t[e].active===!1?this:(t[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const i=this._bounds[e],n=i.box,s=this.geometry;if(i.boxInitialized===!1){n.makeEmpty();const r=s.index,a=s.attributes.position,l=this._drawRanges[e];for(let c=l.start,h=l.start+l.count;c<h;c++){let u=c;r&&(u=r.getX(u)),n.expandByPoint(wl.fromBufferAttribute(a,u))}i.boxInitialized=!0}return t.copy(n),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const i=this._bounds[e],n=i.sphere,s=this.geometry;if(i.sphereInitialized===!1){n.makeEmpty(),this.getBoundingBoxAt(e,Oh),Oh.getCenter(n.center);const r=s.index,a=s.attributes.position,l=this._drawRanges[e];let c=0;for(let h=l.start,u=l.start+l.count;h<u;h++){let d=h;r&&(d=r.getX(d)),wl.fromBufferAttribute(a,d),c=Math.max(c,n.center.distanceToSquared(wl))}n.radius=Math.sqrt(c),i.sphereInitialized=!0}return t.copy(n),t}setMatrixAt(e,t){const i=this._drawInfo,n=this._matricesTexture,s=this._matricesTexture.image.data;return e>=i.length||i[e].active===!1?this:(t.toArray(s,e*16),n.needsUpdate=!0,this)}getMatrixAt(e,t){const i=this._drawInfo,n=this._matricesTexture.image.data;return e>=i.length||i[e].active===!1?null:t.fromArray(n,e*16)}setColorAt(e,t){this._colorsTexture===null&&this._initColorsTexture();const i=this._colorsTexture,n=this._colorsTexture.image.data,s=this._drawInfo;return e>=s.length||s[e].active===!1?this:(t.toArray(n,e*4),i.needsUpdate=!0,this)}getColorAt(e,t){const i=this._colorsTexture.image.data,n=this._drawInfo;return e>=n.length||n[e].active===!1?null:t.fromArray(i,e*4)}setVisibleAt(e,t){const i=this._drawInfo;return e>=i.length||i[e].active===!1||i[e].visible===t?this:(i[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._drawInfo;return e>=t.length||t[e].active===!1?!1:t[e].visible}setGeometryIdAt(e,t){const i=this._drawInfo;return e>=i.length||i[e].active===!1||t<0||t>=this._geometryCount?null:(i[e].geometryIndex=t,this)}getGeometryIdAt(e){const t=this._drawInfo;return e>=t.length||t[e].active===!1?-1:t[e].geometryIndex}getGeometryRangeAt(e,t={}){if(e<0||e>=this._geometryCount)return null;const i=this._drawRanges[e];return t.start=i.start,t.count=i.count,t}raycast(e,t){const i=this._drawInfo,n=this._drawRanges,s=this.matrixWorld,r=this.geometry;Pi.material=this.material,Pi.geometry.index=r.index,Pi.geometry.attributes=r.attributes,Pi.geometry.boundingBox===null&&(Pi.geometry.boundingBox=new mi),Pi.geometry.boundingSphere===null&&(Pi.geometry.boundingSphere=new gi);for(let a=0,l=i.length;a<l;a++){if(!i[a].visible||!i[a].active)continue;const c=i[a].geometryIndex,h=n[c];Pi.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,Pi.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,Pi.geometry.boundingBox),this.getBoundingSphereAt(c,Pi.geometry.boundingSphere),Pi.raycast(e,zh);for(let u=0,d=zh.length;u<d;u++){const f=zh[u];f.object=this,f.batchId=a,t.push(f)}zh.length=0}Pi.material=null,Pi.geometry.index=null,Pi.geometry.attributes={},Pi.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._drawInfo=e._drawInfo.map(t=>({...t})),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,i,n,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const r=n.getIndex(),a=r===null?1:r.array.BYTES_PER_ELEMENT,l=this._drawInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._drawRanges,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data;d&&(a_.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),Yp.setFromProjectionMatrix(a_,e.coordinateSystem));let g=0;if(this.sortObjects){qp.copy(this.matrixWorld).invert(),wl.setFromMatrixPosition(i.matrixWorld).applyMatrix4(qp),l_.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(qp);for(let x=0,_=l.length;x<_;x++)if(l[x].visible&&l[x].active){const v=l[x].geometryIndex;this.getMatrixAt(x,cr),this.getBoundingSphereAt(v,Xr).applyMatrix4(cr);let E=!1;if(d&&(E=!Yp.intersectsSphere(Xr)),!E){const M=n2.subVectors(Xr.center,wl).dot(l_);Zp.push(u[v],M,x)}}const m=Zp.list,y=this.customSort;y===null?m.sort(s.transparent?QP:JP):y.call(this,m,i);for(let x=0,_=m.length;x<_;x++){const v=m[x];c[g]=v.start*a,h[g]=v.count,p[g]=v.index,g++}Zp.reset()}else for(let m=0,y=l.length;m<y;m++)if(l[m].visible&&l[m].active){const x=l[m].geometryIndex;let _=!1;if(d&&(this.getMatrixAt(m,cr),this.getBoundingSphereAt(x,Xr).applyMatrix4(cr),_=!Yp.intersectsSphere(Xr)),!_){const v=u[x];c[g]=v.start*a,h[g]=v.count,p[g]=m,g++}}f.needsUpdate=!0,this._multiDrawCount=g,this._visibilityChanged=!1}onBeforeShadow(e,t,i,n,s,r){this.onBeforeRender(e,null,n,s,r)}}let Zi=class extends Oi{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ae(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};const kd=new R,Gd=new R,c_=new $e,Al=new Uo,kh=new gi,Kp=new R,h_=new R;class Cr extends Rt{constructor(e=new ht,t=new Zi){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)kd.fromBufferAttribute(t,n-1),Gd.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=kd.distanceTo(Gd);e.setAttribute("lineDistance",new Ie(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),kh.copy(i.boundingSphere),kh.applyMatrix4(n),kh.radius+=s,e.ray.intersectsSphere(kh)===!1)return;c_.copy(n).invert(),Al.copy(e.ray).applyMatrix4(c_);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=i.index,d=i.attributes.position;if(h!==null){const f=Math.max(0,r.start),p=Math.min(h.count,r.start+r.count);for(let g=f,m=p-1;g<m;g+=c){const y=h.getX(g),x=h.getX(g+1),_=Gh(this,e,Al,l,y,x);_&&t.push(_)}if(this.isLineLoop){const g=h.getX(p-1),m=h.getX(f),y=Gh(this,e,Al,l,g,m);y&&t.push(y)}}else{const f=Math.max(0,r.start),p=Math.min(d.count,r.start+r.count);for(let g=f,m=p-1;g<m;g+=c){const y=Gh(this,e,Al,l,g,g+1);y&&t.push(y)}if(this.isLineLoop){const g=Gh(this,e,Al,l,p-1,f);g&&t.push(g)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Gh(o,e,t,i,n,s){const r=o.geometry.attributes.position;if(kd.fromBufferAttribute(r,n),Gd.fromBufferAttribute(r,s),t.distanceSqToSegment(kd,Gd,Kp,h_)>i)return;Kp.applyMatrix4(o.matrixWorld);const l=e.ray.origin.distanceTo(Kp);if(!(l<e.near||l>e.far))return{distance:l,point:h_.clone().applyMatrix4(o.matrixWorld),index:n,face:null,faceIndex:null,barycoord:null,object:o}}const u_=new R,d_=new R;class ps extends Cr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)u_.fromBufferAttribute(t,n),d_.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+u_.distanceTo(d_);e.setAttribute("lineDistance",new Ie(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class pM extends Cr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}let $y=class extends Oi{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};const f_=new $e,Eg=new Uo,Vh=new gi,Hh=new R;class mM extends Rt{constructor(e=new ht,t=new $y){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Vh.copy(i.boundingSphere),Vh.applyMatrix4(n),Vh.radius+=s,e.ray.intersectsSphere(Vh)===!1)return;f_.copy(n).invert(),Eg.copy(e.ray).applyMatrix4(f_);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,u=i.attributes.position;if(c!==null){const d=Math.max(0,r.start),f=Math.min(c.count,r.start+r.count);for(let p=d,g=f;p<g;p++){const m=c.getX(p);Hh.fromBufferAttribute(u,m),p_(Hh,m,l,n,e,t,this)}}else{const d=Math.max(0,r.start),f=Math.min(u.count,r.start+r.count);for(let p=d,g=f;p<g;p++)Hh.fromBufferAttribute(u,p),p_(Hh,p,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function p_(o,e,t,i,n,s,r){const a=Eg.distanceSqToPoint(o);if(a<t){const l=new R;Eg.closestPointToPoint(o,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:r})}}class r2 extends xi{constructor(e,t,i,n,s,r,a,l,c){super(e,t,i,n,s,r,a,l,c),this.isVideoTexture=!0,this.minFilter=r!==void 0?r:ni,this.magFilter=s!==void 0?s:ni,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}let o2=class extends xi{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=pi,this.minFilter=pi,this.generateMipmaps=!1,this.needsUpdate=!0}};class Nf extends xi{constructor(e,t,i,n,s,r,a,l,c,h,u,d){super(null,r,a,l,c,h,n,s,u,d),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class a2 extends Nf{constructor(e,t,i,n,s,r){super(e,t,i,s,r),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=Cn,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class l2 extends Nf{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,Xs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class c2 extends xi{constructor(e,t,i,n,s,r,a,l,c){super(e,t,i,n,s,r,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Zn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),s=0;t.push(0);for(let r=1;r<=e;r++)i=this.getPoint(r/e),s+=i.distanceTo(n),t.push(s),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let n=0;const s=i.length;let r;t?r=t:r=e*i[s-1];let a=0,l=s-1,c;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),c=i[n]-r,c<0)a=n+1;else if(c>0)l=n-1;else{l=n;break}if(n=l,i[n]===r)return n/(s-1);const h=i[n],d=i[n+1]-h,f=(r-h)/d;return(n+f)/(s-1)}getTangent(e,t){let n=e-1e-4,s=e+1e-4;n<0&&(n=0),s>1&&(s=1);const r=this.getPoint(n),a=this.getPoint(s),l=t||(r.isVector2?new Y:new R);return l.copy(a).sub(r).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new R,n=[],s=[],r=[],a=new R,l=new $e;for(let f=0;f<=e;f++){const p=f/e;n[f]=this.getTangentAt(p,new R)}s[0]=new R,r[0]=new R;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),u<=c&&(c=u,i.set(0,1,0)),d<=c&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],a),r[0].crossVectors(n[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),r[f]=r[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos($t(n[f-1].dot(n[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,p))}r[f].crossVectors(n[f],s[f])}if(t===!0){let f=Math.acos($t(s[0].dot(s[e]),-1,1));f/=e,n[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(n[p],f*p)),r[p].crossVectors(n[p],s[p])}return{tangents:n,normals:s,binormals:r}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Pf extends Zn{constructor(e=0,t=0,i=1,n=1,s=0,r=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new Y){const i=t,n=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(r?s=0:s=n),this.aClockwise===!0&&!r&&(s===n?s=-n:s=s-n);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class gM extends Pf{constructor(e,t,i,n,s,r){super(e,t,i,i,n,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function Xy(){let o=0,e=0,t=0,i=0;function n(s,r,a,l){o=s,e=a,t=-3*s+3*r-2*a-l,i=2*s-2*r+a+l}return{initCatmullRom:function(s,r,a,l,c){n(r,a,c*(a-s),c*(l-r))},initNonuniformCatmullRom:function(s,r,a,l,c,h,u){let d=(r-s)/c-(a-s)/(c+h)+(a-r)/h,f=(a-r)/h-(l-r)/(h+u)+(l-a)/u;d*=h,f*=h,n(r,a,d,f)},calc:function(s){const r=s*s,a=r*s;return o+e*s+t*r+i*a}}}const Wh=new R,jp=new Xy,Jp=new Xy,Qp=new Xy;class yM extends Zn{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new R){const i=t,n=this.points,s=n.length,r=(s-(this.closed?0:1))*e;let a=Math.floor(r),l=r-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,h;this.closed||a>0?c=n[(a-1)%s]:(Wh.subVectors(n[0],n[1]).add(n[0]),c=Wh);const u=n[a%s],d=n[(a+1)%s];if(this.closed||a+2<s?h=n[(a+2)%s]:(Wh.subVectors(n[s-1],n[s-2]).add(n[s-1]),h=Wh),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),g=Math.pow(u.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(h),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),jp.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,g,m),Jp.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,g,m),Qp.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,g,m)}else this.curveType==="catmullrom"&&(jp.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),Jp.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),Qp.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return i.set(jp.calc(l),Jp.calc(l),Qp.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new R().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function m_(o,e,t,i,n){const s=(i-e)*.5,r=(n-t)*.5,a=o*o,l=o*a;return(2*t-2*i+s+r)*l+(-3*t+3*i-2*s-r)*a+s*o+t}function h2(o,e){const t=1-o;return t*t*e}function u2(o,e){return 2*(1-o)*o*e}function d2(o,e){return o*o*e}function tc(o,e,t,i){return h2(o,e)+u2(o,t)+d2(o,i)}function f2(o,e){const t=1-o;return t*t*t*e}function p2(o,e){const t=1-o;return 3*t*t*o*e}function m2(o,e){return 3*(1-o)*o*o*e}function g2(o,e){return o*o*o*e}function ic(o,e,t,i,n){return f2(o,e)+p2(o,t)+m2(o,i)+g2(o,n)}class qy extends Zn{constructor(e=new Y,t=new Y,i=new Y,n=new Y){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new Y){const i=t,n=this.v0,s=this.v1,r=this.v2,a=this.v3;return i.set(ic(e,n.x,s.x,r.x,a.x),ic(e,n.y,s.y,r.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class xM extends Zn{constructor(e=new R,t=new R,i=new R,n=new R){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new R){const i=t,n=this.v0,s=this.v1,r=this.v2,a=this.v3;return i.set(ic(e,n.x,s.x,r.x,a.x),ic(e,n.y,s.y,r.y,a.y),ic(e,n.z,s.z,r.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Yy extends Zn{constructor(e=new Y,t=new Y){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Y){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Y){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class _M extends Zn{constructor(e=new R,t=new R){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new R){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new R){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zy extends Zn{constructor(e=new Y,t=new Y,i=new Y){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Y){const i=t,n=this.v0,s=this.v1,r=this.v2;return i.set(tc(e,n.x,s.x,r.x),tc(e,n.y,s.y,r.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ky extends Zn{constructor(e=new R,t=new R,i=new R){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new R){const i=t,n=this.v0,s=this.v1,r=this.v2;return i.set(tc(e,n.x,s.x,r.x),tc(e,n.y,s.y,r.y),tc(e,n.z,s.z,r.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class jy extends Zn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Y){const i=t,n=this.points,s=(n.length-1)*e,r=Math.floor(s),a=s-r,l=n[r===0?r:r-1],c=n[r],h=n[r>n.length-2?n.length-1:r+1],u=n[r>n.length-3?n.length-1:r+2];return i.set(m_(a,l.x,c.x,h.x,u.x),m_(a,l.y,c.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new Y().fromArray(n))}return this}}var Vd=Object.freeze({__proto__:null,ArcCurve:gM,CatmullRomCurve3:yM,CubicBezierCurve:qy,CubicBezierCurve3:xM,EllipseCurve:Pf,LineCurve:Yy,LineCurve3:_M,QuadraticBezierCurve:Zy,QuadraticBezierCurve3:Ky,SplineCurve:jy});class vM extends Zn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Vd[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const r=n[s]-i,a=this.curves[s],l=a.getLength(),c=l===0?0:1-r/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const r=s[n],a=r.isEllipseCurve?e*2:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?e*r.points.length:e,l=r.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new Vd[n.type]().fromJSON(n))}return this}}class bc extends vM{constructor(e){super(),this.type="Path",this.currentPoint=new Y,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new Yy(this.currentPoint.clone(),new Y(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const s=new Zy(this.currentPoint.clone(),new Y(e,t),new Y(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,s,r){const a=new qy(this.currentPoint.clone(),new Y(e,t),new Y(i,n),new Y(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new jy(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,s,r){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,n,s,r),this}absarc(e,t,i,n,s,r){return this.absellipse(e,t,i,i,n,s,r),this}ellipse(e,t,i,n,s,r,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,s,r,a,l),this}absellipse(e,t,i,n,s,r,a,l){const c=new Pf(e,t,i,n,s,r,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Zc extends ht{constructor(e=[new Y(0,-.5),new Y(.5,0),new Y(0,.5)],t=12,i=0,n=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=$t(n,0,Math.PI*2);const s=[],r=[],a=[],l=[],c=[],h=1/t,u=new R,d=new Y,f=new R,p=new R,g=new R;let m=0,y=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:m=e[x+1].x-e[x].x,y=e[x+1].y-e[x].y,f.x=y*1,f.y=-m,f.z=y*0,g.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(g.x,g.y,g.z);break;default:m=e[x+1].x-e[x].x,y=e[x+1].y-e[x].y,f.x=y*1,f.y=-m,f.z=y*0,p.copy(f),f.x+=g.x,f.y+=g.y,f.z+=g.z,f.normalize(),l.push(f.x,f.y,f.z),g.copy(p)}for(let x=0;x<=t;x++){const _=i+x*h*n,v=Math.sin(_),E=Math.cos(_);for(let M=0;M<=e.length-1;M++){u.x=e[M].x*v,u.y=e[M].y,u.z=e[M].x*E,r.push(u.x,u.y,u.z),d.x=x/t,d.y=M/(e.length-1),a.push(d.x,d.y);const b=l[3*M+0]*v,A=l[3*M+1],L=l[3*M+0]*E;c.push(b,A,L)}}for(let x=0;x<t;x++)for(let _=0;_<e.length-1;_++){const v=_+x*e.length,E=v,M=v+e.length,b=v+e.length+1,A=v+1;s.push(E,M,A),s.push(b,A,M)}this.setIndex(s),this.setAttribute("position",new Ie(r,3)),this.setAttribute("uv",new Ie(a,2)),this.setAttribute("normal",new Ie(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zc(e.points,e.segments,e.phiStart,e.phiLength)}}class If extends Zc{constructor(e=1,t=1,i=4,n=8){const s=new bc;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new If(e.radius,e.length,e.capSegments,e.radialSegments)}}class Lf extends ht{constructor(e=1,t=32,i=0,n=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const s=[],r=[],a=[],l=[],c=new R,h=new Y;r.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=i+u/t*n;c.x=e*Math.cos(f),c.y=e*Math.sin(f),r.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(r[d]/e+1)/2,h.y=(r[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new Ie(r,3)),this.setAttribute("normal",new Ie(a,3)),this.setAttribute("uv",new Ie(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lf(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class al extends ht{constructor(e=1,t=1,i=1,n=32,s=1,r=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),s=Math.floor(s);const h=[],u=[],d=[],f=[];let p=0;const g=[],m=i/2;let y=0;x(),r===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(h),this.setAttribute("position",new Ie(u,3)),this.setAttribute("normal",new Ie(d,3)),this.setAttribute("uv",new Ie(f,2));function x(){const v=new R,E=new R;let M=0;const b=(t-e)/i;for(let A=0;A<=s;A++){const L=[],S=A/s,T=S*(t-e)+e;for(let B=0;B<=n;B++){const F=B/n,G=F*l+a,j=Math.sin(G),k=Math.cos(G);E.x=T*j,E.y=-S*i+m,E.z=T*k,u.push(E.x,E.y,E.z),v.set(j,b,k).normalize(),d.push(v.x,v.y,v.z),f.push(F,1-S),L.push(p++)}g.push(L)}for(let A=0;A<n;A++)for(let L=0;L<s;L++){const S=g[L][A],T=g[L+1][A],B=g[L+1][A+1],F=g[L][A+1];e>0&&(h.push(S,T,F),M+=3),t>0&&(h.push(T,B,F),M+=3)}c.addGroup(y,M,0),y+=M}function _(v){const E=p,M=new Y,b=new R;let A=0;const L=v===!0?e:t,S=v===!0?1:-1;for(let B=1;B<=n;B++)u.push(0,m*S,0),d.push(0,S,0),f.push(.5,.5),p++;const T=p;for(let B=0;B<=n;B++){const G=B/n*l+a,j=Math.cos(G),k=Math.sin(G);b.x=L*k,b.y=m*S,b.z=L*j,u.push(b.x,b.y,b.z),d.push(0,S,0),M.x=j*.5+.5,M.y=k*.5*S+.5,f.push(M.x,M.y),p++}for(let B=0;B<n;B++){const F=E+B,G=T+B;v===!0?h.push(G,G+1,F):h.push(G+1,G,F),A+=3}c.addGroup(y,A,v===!0?1:2),y+=A}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new al(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Df extends al{constructor(e=1,t=1,i=32,n=1,s=!1,r=0,a=Math.PI*2){super(0,e,t,i,n,s,r,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:r,thetaLength:a}}static fromJSON(e){return new Df(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Fr extends ht{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const s=[],r=[];a(n),c(i),h(),this.setAttribute("position",new Ie(s,3)),this.setAttribute("normal",new Ie(s.slice(),3)),this.setAttribute("uv",new Ie(r,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const _=new R,v=new R,E=new R;for(let M=0;M<t.length;M+=3)f(t[M+0],_),f(t[M+1],v),f(t[M+2],E),l(_,v,E,x)}function l(x,_,v,E){const M=E+1,b=[];for(let A=0;A<=M;A++){b[A]=[];const L=x.clone().lerp(v,A/M),S=_.clone().lerp(v,A/M),T=M-A;for(let B=0;B<=T;B++)B===0&&A===M?b[A][B]=L:b[A][B]=L.clone().lerp(S,B/T)}for(let A=0;A<M;A++)for(let L=0;L<2*(M-A)-1;L++){const S=Math.floor(L/2);L%2===0?(d(b[A][S+1]),d(b[A+1][S]),d(b[A][S])):(d(b[A][S+1]),d(b[A+1][S+1]),d(b[A+1][S]))}}function c(x){const _=new R;for(let v=0;v<s.length;v+=3)_.x=s[v+0],_.y=s[v+1],_.z=s[v+2],_.normalize().multiplyScalar(x),s[v+0]=_.x,s[v+1]=_.y,s[v+2]=_.z}function h(){const x=new R;for(let _=0;_<s.length;_+=3){x.x=s[_+0],x.y=s[_+1],x.z=s[_+2];const v=m(x)/2/Math.PI+.5,E=y(x)/Math.PI+.5;r.push(v,1-E)}p(),u()}function u(){for(let x=0;x<r.length;x+=6){const _=r[x+0],v=r[x+2],E=r[x+4],M=Math.max(_,v,E),b=Math.min(_,v,E);M>.9&&b<.1&&(_<.2&&(r[x+0]+=1),v<.2&&(r[x+2]+=1),E<.2&&(r[x+4]+=1))}}function d(x){s.push(x.x,x.y,x.z)}function f(x,_){const v=x*3;_.x=e[v+0],_.y=e[v+1],_.z=e[v+2]}function p(){const x=new R,_=new R,v=new R,E=new R,M=new Y,b=new Y,A=new Y;for(let L=0,S=0;L<s.length;L+=9,S+=6){x.set(s[L+0],s[L+1],s[L+2]),_.set(s[L+3],s[L+4],s[L+5]),v.set(s[L+6],s[L+7],s[L+8]),M.set(r[S+0],r[S+1]),b.set(r[S+2],r[S+3]),A.set(r[S+4],r[S+5]),E.copy(x).add(_).add(v).divideScalar(3);const T=m(E);g(M,S+0,x,T),g(b,S+2,_,T),g(A,S+4,v,T)}}function g(x,_,v,E){E<0&&x.x===1&&(r[_]=x.x-1),v.x===0&&v.z===0&&(r[_]=E/2/Math.PI+.5)}function m(x){return Math.atan2(x.z,-x.x)}function y(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fr(e.vertices,e.indices,e.radius,e.details)}}class Uf extends Fr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],r=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,r,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Uf(e.radius,e.detail)}}const $h=new R,Xh=new R,em=new R,qh=new br;class SM extends ht{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),s=Math.cos(xo*t),r=e.getIndex(),a=e.getAttribute("position"),l=r?r.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){r?(c[0]=r.getX(p),c[1]=r.getX(p+1),c[2]=r.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:g,b:m,c:y}=qh;if(g.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),y.fromBufferAttribute(a,c[2]),qh.getNormal(em),u[0]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,u[1]=`${Math.round(m.x*n)},${Math.round(m.y*n)},${Math.round(m.z*n)}`,u[2]=`${Math.round(y.x*n)},${Math.round(y.y*n)},${Math.round(y.z*n)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let x=0;x<3;x++){const _=(x+1)%3,v=u[x],E=u[_],M=qh[h[x]],b=qh[h[_]],A=`${v}_${E}`,L=`${E}_${v}`;L in d&&d[L]?(em.dot(d[L].normal)<=s&&(f.push(M.x,M.y,M.z),f.push(b.x,b.y,b.z)),d[L]=null):A in d||(d[A]={index0:c[x],index1:c[_],normal:em.clone()})}}for(const p in d)if(d[p]){const{index0:g,index1:m}=d[p];$h.fromBufferAttribute(a,g),Xh.fromBufferAttribute(a,m),f.push($h.x,$h.y,$h.z),f.push(Xh.x,Xh.y,Xh.z)}this.setAttribute("position",new Ie(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class _o extends bc{constructor(e){super(e),this.uuid=Sn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new bc().fromJSON(n))}return this}}const y2={triangulate:function(o,e,t=2){const i=e&&e.length,n=i?e[0]*t:o.length;let s=bM(o,0,n,t,!0);const r=[];if(!s||s.next===s.prev)return r;let a,l,c,h,u,d,f;if(i&&(s=b2(o,e,s,t)),o.length>80*t){a=c=o[0],l=h=o[1];for(let p=t;p<n;p+=t)u=o[p],d=o[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Mc(s,r,t,a,l,f,0),r}};function bM(o,e,t,i,n){let s,r;if(n===L2(o,e,t,i)>0)for(s=e;s<t;s+=i)r=g_(s,o[s],o[s+1],r);else for(s=t-i;s>=e;s-=i)r=g_(s,o[s],o[s+1],r);return r&&Ff(r,r.next)&&(wc(r),r=r.next),r}function Eo(o,e){if(!o)return o;e||(e=o);let t=o,i;do if(i=!1,!t.steiner&&(Ff(t,t.next)||Gt(t.prev,t,t.next)===0)){if(wc(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Mc(o,e,t,i,n,s,r){if(!o)return;!r&&s&&E2(o,i,n,s);let a=o,l,c;for(;o.prev!==o.next;){if(l=o.prev,c=o.next,s?_2(o,i,n,s):x2(o)){e.push(l.i/t|0),e.push(o.i/t|0),e.push(c.i/t|0),wc(o),o=c.next,a=c.next;continue}if(o=c,o===a){r?r===1?(o=v2(Eo(o),e,t),Mc(o,e,t,i,n,s,2)):r===2&&S2(o,e,t,i,n,s):Mc(Eo(o),e,t,i,n,s,1);break}}}function x2(o){const e=o.prev,t=o,i=o.next;if(Gt(e,t,i)>=0)return!1;const n=e.x,s=t.x,r=i.x,a=e.y,l=t.y,c=i.y,h=n<s?n<r?n:r:s<r?s:r,u=a<l?a<c?a:c:l<c?l:c,d=n>s?n>r?n:r:s>r?s:r,f=a>l?a>c?a:c:l>c?l:c;let p=i.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&La(n,a,s,l,r,c,p.x,p.y)&&Gt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function _2(o,e,t,i){const n=o.prev,s=o,r=o.next;if(Gt(n,s,r)>=0)return!1;const a=n.x,l=s.x,c=r.x,h=n.y,u=s.y,d=r.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,g=a>l?a>c?a:c:l>c?l:c,m=h>u?h>d?h:d:u>d?u:d,y=Rg(f,p,e,t,i),x=Rg(g,m,e,t,i);let _=o.prevZ,v=o.nextZ;for(;_&&_.z>=y&&v&&v.z<=x;){if(_.x>=f&&_.x<=g&&_.y>=p&&_.y<=m&&_!==n&&_!==r&&La(a,h,l,u,c,d,_.x,_.y)&&Gt(_.prev,_,_.next)>=0||(_=_.prevZ,v.x>=f&&v.x<=g&&v.y>=p&&v.y<=m&&v!==n&&v!==r&&La(a,h,l,u,c,d,v.x,v.y)&&Gt(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;_&&_.z>=y;){if(_.x>=f&&_.x<=g&&_.y>=p&&_.y<=m&&_!==n&&_!==r&&La(a,h,l,u,c,d,_.x,_.y)&&Gt(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;v&&v.z<=x;){if(v.x>=f&&v.x<=g&&v.y>=p&&v.y<=m&&v!==n&&v!==r&&La(a,h,l,u,c,d,v.x,v.y)&&Gt(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function v2(o,e,t){let i=o;do{const n=i.prev,s=i.next.next;!Ff(n,s)&&MM(n,i,i.next,s)&&Tc(n,s)&&Tc(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),wc(i),wc(i.next),i=o=s),i=i.next}while(i!==o);return Eo(i)}function S2(o,e,t,i,n,s){let r=o;do{let a=r.next.next;for(;a!==r.prev;){if(r.i!==a.i&&N2(r,a)){let l=TM(r,a);r=Eo(r,r.next),l=Eo(l,l.next),Mc(r,e,t,i,n,s,0),Mc(l,e,t,i,n,s,0);return}a=a.next}r=r.next}while(r!==o)}function b2(o,e,t,i){const n=[];let s,r,a,l,c;for(s=0,r=e.length;s<r;s++)a=e[s]*i,l=s<r-1?e[s+1]*i:o.length,c=bM(o,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(C2(c));for(n.sort(M2),s=0;s<n.length;s++)t=T2(n[s],t);return t}function M2(o,e){return o.x-e.x}function T2(o,e){const t=w2(o,e);if(!t)return e;const i=TM(t,o);return Eo(i,i.next),Eo(t,t.next)}function w2(o,e){let t=e,i=-1/0,n;const s=o.x,r=o.y;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const d=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=s&&d>i&&(i=d,n=t.x<t.next.x?t:t.next,d===s))return n}t=t.next}while(t!==e);if(!n)return null;const a=n,l=n.x,c=n.y;let h=1/0,u;t=n;do s>=t.x&&t.x>=l&&s!==t.x&&La(r<c?s:i,r,l,c,r<c?i:s,r,t.x,t.y)&&(u=Math.abs(r-t.y)/(s-t.x),Tc(t,o)&&(u<h||u===h&&(t.x>n.x||t.x===n.x&&A2(n,t)))&&(n=t,h=u)),t=t.next;while(t!==a);return n}function A2(o,e){return Gt(o.prev,o,e.prev)<0&&Gt(e.next,o,o.next)<0}function E2(o,e,t,i){let n=o;do n.z===0&&(n.z=Rg(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==o);n.prevZ.nextZ=null,n.prevZ=null,R2(n)}function R2(o){let e,t,i,n,s,r,a,l,c=1;do{for(t=o,o=null,s=null,r=0;t;){for(r++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:o=n,n.prevZ=s,s=n;t=i}s.nextZ=null,c*=2}while(r>1);return o}function Rg(o,e,t,i,n){return o=(o-t)*n|0,e=(e-i)*n|0,o=(o|o<<8)&16711935,o=(o|o<<4)&252645135,o=(o|o<<2)&858993459,o=(o|o<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,o|e<<1}function C2(o){let e=o,t=o;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==o);return t}function La(o,e,t,i,n,s,r,a){return(n-r)*(e-a)>=(o-r)*(s-a)&&(o-r)*(i-a)>=(t-r)*(e-a)&&(t-r)*(s-a)>=(n-r)*(i-a)}function N2(o,e){return o.next.i!==e.i&&o.prev.i!==e.i&&!P2(o,e)&&(Tc(o,e)&&Tc(e,o)&&I2(o,e)&&(Gt(o.prev,o,e.prev)||Gt(o,e.prev,e))||Ff(o,e)&&Gt(o.prev,o,o.next)>0&&Gt(e.prev,e,e.next)>0)}function Gt(o,e,t){return(e.y-o.y)*(t.x-e.x)-(e.x-o.x)*(t.y-e.y)}function Ff(o,e){return o.x===e.x&&o.y===e.y}function MM(o,e,t,i){const n=Zh(Gt(o,e,t)),s=Zh(Gt(o,e,i)),r=Zh(Gt(t,i,o)),a=Zh(Gt(t,i,e));return!!(n!==s&&r!==a||n===0&&Yh(o,t,e)||s===0&&Yh(o,i,e)||r===0&&Yh(t,o,i)||a===0&&Yh(t,e,i))}function Yh(o,e,t){return e.x<=Math.max(o.x,t.x)&&e.x>=Math.min(o.x,t.x)&&e.y<=Math.max(o.y,t.y)&&e.y>=Math.min(o.y,t.y)}function Zh(o){return o>0?1:o<0?-1:0}function P2(o,e){let t=o;do{if(t.i!==o.i&&t.next.i!==o.i&&t.i!==e.i&&t.next.i!==e.i&&MM(t,t.next,o,e))return!0;t=t.next}while(t!==o);return!1}function Tc(o,e){return Gt(o.prev,o,o.next)<0?Gt(o,e,o.next)>=0&&Gt(o,o.prev,e)>=0:Gt(o,e,o.prev)<0||Gt(o,o.next,e)<0}function I2(o,e){let t=o,i=!1;const n=(o.x+e.x)/2,s=(o.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==o);return i}function TM(o,e){const t=new Cg(o.i,o.x,o.y),i=new Cg(e.i,e.x,e.y),n=o.next,s=e.prev;return o.next=e,e.prev=o,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function g_(o,e,t,i){const n=new Cg(o,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function wc(o){o.next.prev=o.prev,o.prev.next=o.next,o.prevZ&&(o.prevZ.nextZ=o.nextZ),o.nextZ&&(o.nextZ.prevZ=o.prevZ)}function Cg(o,e,t){this.i=o,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function L2(o,e,t,i){let n=0;for(let s=e,r=t-i;s<t;s+=i)n+=(o[r]-o[s])*(o[s+1]+o[r+1]),r=s;return n}class as{static area(e){const t=e.length;let i=0;for(let n=t-1,s=0;s<t;n=s++)i+=e[n].x*e[s].y-e[s].x*e[n].y;return i*.5}static isClockWise(e){return as.area(e)<0}static triangulateShape(e,t){const i=[],n=[],s=[];y_(e),x_(i,e);let r=e.length;t.forEach(y_);for(let l=0;l<t.length;l++)n.push(r),r+=t[l].length,x_(i,t[l]);const a=y2.triangulate(i,n);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function y_(o){const e=o.length;e>2&&o[e-1].equals(o[0])&&o.pop()}function x_(o,e){for(let t=0;t<e.length;t++)o.push(e[t].x),o.push(e[t].y)}class Kc extends ht{constructor(e=new _o([new Y(.5,.5),new Y(-.5,.5),new Y(-.5,-.5),new Y(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];r(c)}this.setAttribute("position",new Ie(n,3)),this.setAttribute("uv",new Ie(s,2)),this.computeVertexNormals();function r(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const y=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:D2;let _,v=!1,E,M,b,A;y&&(_=y.getSpacedPoints(h),v=!0,d=!1,E=y.computeFrenetFrames(h,!1),M=new R,b=new R,A=new R),d||(m=0,f=0,p=0,g=0);const L=a.extractPoints(c);let S=L.shape;const T=L.holes;if(!as.isClockWise(S)){S=S.reverse();for(let se=0,P=T.length;se<P;se++){const ve=T[se];as.isClockWise(ve)&&(T[se]=ve.reverse())}}const F=as.triangulateShape(S,T),G=S;for(let se=0,P=T.length;se<P;se++){const ve=T[se];S=S.concat(ve)}function j(se,P,ve){return P||console.error("THREE.ExtrudeGeometry: vec does not exist"),se.clone().addScaledVector(P,ve)}const k=S.length,ae=F.length;function X(se,P,ve){let xe,he,Se;const ke=se.x-P.x,Ce=se.y-P.y,N=ve.x-se.x,w=ve.y-se.y,H=ke*ke+Ce*Ce,ie=ke*w-Ce*N;if(Math.abs(ie)>Number.EPSILON){const re=Math.sqrt(H),ne=Math.sqrt(N*N+w*w),Be=P.x-Ce/re,be=P.y+ke/re,Le=ve.x-w/ne,ft=ve.y+N/ne,de=((Le-Be)*w-(ft-be)*N)/(ke*w-Ce*N);xe=Be+ke*de-se.x,he=be+Ce*de-se.y;const De=xe*xe+he*he;if(De<=2)return new Y(xe,he);Se=Math.sqrt(De/2)}else{let re=!1;ke>Number.EPSILON?N>Number.EPSILON&&(re=!0):ke<-Number.EPSILON?N<-Number.EPSILON&&(re=!0):Math.sign(Ce)===Math.sign(w)&&(re=!0),re?(xe=-Ce,he=ke,Se=Math.sqrt(H)):(xe=ke,he=Ce,Se=Math.sqrt(H/2))}return new Y(xe/Se,he/Se)}const ce=[];for(let se=0,P=G.length,ve=P-1,xe=se+1;se<P;se++,ve++,xe++)ve===P&&(ve=0),xe===P&&(xe=0),ce[se]=X(G[se],G[ve],G[xe]);const ue=[];let pe,Ze=ce.concat();for(let se=0,P=T.length;se<P;se++){const ve=T[se];pe=[];for(let xe=0,he=ve.length,Se=he-1,ke=xe+1;xe<he;xe++,Se++,ke++)Se===he&&(Se=0),ke===he&&(ke=0),pe[xe]=X(ve[xe],ve[Se],ve[ke]);ue.push(pe),Ze=Ze.concat(pe)}for(let se=0;se<m;se++){const P=se/m,ve=f*Math.cos(P*Math.PI/2),xe=p*Math.sin(P*Math.PI/2)+g;for(let he=0,Se=G.length;he<Se;he++){const ke=j(G[he],ce[he],xe);_e(ke.x,ke.y,-ve)}for(let he=0,Se=T.length;he<Se;he++){const ke=T[he];pe=ue[he];for(let Ce=0,N=ke.length;Ce<N;Ce++){const w=j(ke[Ce],pe[Ce],xe);_e(w.x,w.y,-ve)}}}const Qe=p+g;for(let se=0;se<k;se++){const P=d?j(S[se],Ze[se],Qe):S[se];v?(b.copy(E.normals[0]).multiplyScalar(P.x),M.copy(E.binormals[0]).multiplyScalar(P.y),A.copy(_[0]).add(b).add(M),_e(A.x,A.y,A.z)):_e(P.x,P.y,0)}for(let se=1;se<=h;se++)for(let P=0;P<k;P++){const ve=d?j(S[P],Ze[P],Qe):S[P];v?(b.copy(E.normals[se]).multiplyScalar(ve.x),M.copy(E.binormals[se]).multiplyScalar(ve.y),A.copy(_[se]).add(b).add(M),_e(A.x,A.y,A.z)):_e(ve.x,ve.y,u/h*se)}for(let se=m-1;se>=0;se--){const P=se/m,ve=f*Math.cos(P*Math.PI/2),xe=p*Math.sin(P*Math.PI/2)+g;for(let he=0,Se=G.length;he<Se;he++){const ke=j(G[he],ce[he],xe);_e(ke.x,ke.y,u+ve)}for(let he=0,Se=T.length;he<Se;he++){const ke=T[he];pe=ue[he];for(let Ce=0,N=ke.length;Ce<N;Ce++){const w=j(ke[Ce],pe[Ce],xe);v?_e(w.x,w.y+_[h-1].y,_[h-1].x+ve):_e(w.x,w.y,u+ve)}}}J(),le();function J(){const se=n.length/3;if(d){let P=0,ve=k*P;for(let xe=0;xe<ae;xe++){const he=F[xe];Ve(he[2]+ve,he[1]+ve,he[0]+ve)}P=h+m*2,ve=k*P;for(let xe=0;xe<ae;xe++){const he=F[xe];Ve(he[0]+ve,he[1]+ve,he[2]+ve)}}else{for(let P=0;P<ae;P++){const ve=F[P];Ve(ve[2],ve[1],ve[0])}for(let P=0;P<ae;P++){const ve=F[P];Ve(ve[0]+k*h,ve[1]+k*h,ve[2]+k*h)}}i.addGroup(se,n.length/3-se,0)}function le(){const se=n.length/3;let P=0;Te(G,P),P+=G.length;for(let ve=0,xe=T.length;ve<xe;ve++){const he=T[ve];Te(he,P),P+=he.length}i.addGroup(se,n.length/3-se,1)}function Te(se,P){let ve=se.length;for(;--ve>=0;){const xe=ve;let he=ve-1;he<0&&(he=se.length-1);for(let Se=0,ke=h+m*2;Se<ke;Se++){const Ce=k*Se,N=k*(Se+1),w=P+xe+Ce,H=P+he+Ce,ie=P+he+N,re=P+xe+N;Xe(w,H,ie,re)}}}function _e(se,P,ve){l.push(se),l.push(P),l.push(ve)}function Ve(se,P,ve){We(se),We(P),We(ve);const xe=n.length/3,he=x.generateTopUV(i,n,xe-3,xe-2,xe-1);et(he[0]),et(he[1]),et(he[2])}function Xe(se,P,ve,xe){We(se),We(P),We(xe),We(P),We(ve),We(xe);const he=n.length/3,Se=x.generateSideWallUV(i,n,he-6,he-3,he-2,he-1);et(Se[0]),et(Se[1]),et(Se[3]),et(Se[1]),et(Se[2]),et(Se[3])}function We(se){n.push(l[se*3+0]),n.push(l[se*3+1]),n.push(l[se*3+2])}function et(se){s.push(se.x),s.push(se.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return U2(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,r=e.shapes.length;s<r;s++){const a=t[e.shapes[s]];i.push(a)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new Vd[n.type]().fromJSON(n)),new Kc(i,e.options)}}const D2={generateTopUV:function(o,e,t,i,n){const s=e[t*3],r=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[n*3],h=e[n*3+1];return[new Y(s,r),new Y(a,l),new Y(c,h)]},generateSideWallUV:function(o,e,t,i,n,s){const r=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],d=e[n*3],f=e[n*3+1],p=e[n*3+2],g=e[s*3],m=e[s*3+1],y=e[s*3+2];return Math.abs(a-h)<Math.abs(r-c)?[new Y(r,1-l),new Y(c,1-u),new Y(d,1-p),new Y(g,1-y)]:[new Y(a,1-l),new Y(h,1-u),new Y(f,1-p),new Y(m,1-y)]}};function U2(o,e,t){if(t.shapes=[],Array.isArray(o))for(let i=0,n=o.length;i<n;i++){const s=o[i];t.shapes.push(s.uuid)}else t.shapes.push(o.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Bf extends Fr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(n,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Bf(e.radius,e.detail)}}class jc extends Fr{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new jc(e.radius,e.detail)}}class Of extends ht{constructor(e=.5,t=1,i=32,n=1,s=0,r=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:s,thetaLength:r},i=Math.max(3,i),n=Math.max(1,n);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/n,f=new R,p=new Y;for(let g=0;g<=n;g++){for(let m=0;m<=i;m++){const y=s+m/i*r;f.x=u*Math.cos(y),f.y=u*Math.sin(y),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let g=0;g<n;g++){const m=g*(i+1);for(let y=0;y<i;y++){const x=y+m,_=x,v=x+i+1,E=x+i+2,M=x+1;a.push(_,v,M),a.push(v,E,M)}}this.setIndex(a),this.setAttribute("position",new Ie(l,3)),this.setAttribute("normal",new Ie(c,3)),this.setAttribute("uv",new Ie(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Of(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class zf extends ht{constructor(e=new _o([new Y(0,.5),new Y(-.5,-.5),new Y(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],s=[],r=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new Ie(n,3)),this.setAttribute("normal",new Ie(s,3)),this.setAttribute("uv",new Ie(r,2));function c(h){const u=n.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;as.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,y=p.length;m<y;m++){const x=p[m];as.isClockWise(x)===!0&&(p[m]=x.reverse())}const g=as.triangulateShape(f,p);for(let m=0,y=p.length;m<y;m++){const x=p[m];f=f.concat(x)}for(let m=0,y=f.length;m<y;m++){const x=f[m];n.push(x.x,x.y,0),s.push(0,0,1),r.push(x.x,x.y)}for(let m=0,y=g.length;m<y;m++){const x=g[m],_=x[0]+u,v=x[1]+u,E=x[2]+u;i.push(_,v,E),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return F2(t,e)}static fromJSON(e,t){const i=[];for(let n=0,s=e.shapes.length;n<s;n++){const r=t[e.shapes[n]];i.push(r)}return new zf(i,e.curveSegments)}}function F2(o,e){if(e.shapes=[],Array.isArray(o))for(let t=0,i=o.length;t<i;t++){const n=o[t];e.shapes.push(n.uuid)}else e.shapes.push(o.uuid);return e}let Jy=class wM extends ht{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(r+a,Math.PI);let c=0;const h=[],u=new R,d=new R,f=[],p=[],g=[],m=[];for(let y=0;y<=i;y++){const x=[],_=y/i;let v=0;y===0&&r===0?v=.5/t:y===i&&l===Math.PI&&(v=-.5/t);for(let E=0;E<=t;E++){const M=E/t;u.x=-e*Math.cos(n+M*s)*Math.sin(r+_*a),u.y=e*Math.cos(r+_*a),u.z=e*Math.sin(n+M*s)*Math.sin(r+_*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),g.push(d.x,d.y,d.z),m.push(M+v,1-_),x.push(c++)}h.push(x)}for(let y=0;y<i;y++)for(let x=0;x<t;x++){const _=h[y][x+1],v=h[y][x],E=h[y+1][x],M=h[y+1][x+1];(y!==0||r>0)&&f.push(_,v,M),(y!==i-1||l<Math.PI)&&f.push(v,E,M)}this.setIndex(f),this.setAttribute("position",new Ie(p,3)),this.setAttribute("normal",new Ie(g,3)),this.setAttribute("uv",new Ie(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wM(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};class kf extends Fr{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new kf(e.radius,e.detail)}}class Gf extends ht{constructor(e=1,t=.4,i=12,n=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:s},i=Math.floor(i),n=Math.floor(n);const r=[],a=[],l=[],c=[],h=new R,u=new R,d=new R;for(let f=0;f<=i;f++)for(let p=0;p<=n;p++){const g=p/n*s,m=f/i*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(g),u.y=(e+t*Math.cos(m))*Math.sin(g),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),h.x=e*Math.cos(g),h.y=e*Math.sin(g),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let p=1;p<=n;p++){const g=(n+1)*f+p-1,m=(n+1)*(f-1)+p-1,y=(n+1)*(f-1)+p,x=(n+1)*f+p;r.push(g,m,x),r.push(m,y,x)}this.setIndex(r),this.setAttribute("position",new Ie(a,3)),this.setAttribute("normal",new Ie(l,3)),this.setAttribute("uv",new Ie(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Gf(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Vf extends ht{constructor(e=1,t=.4,i=64,n=8,s=2,r=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:s,q:r},i=Math.floor(i),n=Math.floor(n);const a=[],l=[],c=[],h=[],u=new R,d=new R,f=new R,p=new R,g=new R,m=new R,y=new R;for(let _=0;_<=i;++_){const v=_/i*s*Math.PI*2;x(v,s,r,e,f),x(v+.01,s,r,e,p),m.subVectors(p,f),y.addVectors(p,f),g.crossVectors(m,y),y.crossVectors(g,m),g.normalize(),y.normalize();for(let E=0;E<=n;++E){const M=E/n*Math.PI*2,b=-t*Math.cos(M),A=t*Math.sin(M);u.x=f.x+(b*y.x+A*g.x),u.y=f.y+(b*y.y+A*g.y),u.z=f.z+(b*y.z+A*g.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(_/i),h.push(E/n)}}for(let _=1;_<=i;_++)for(let v=1;v<=n;v++){const E=(n+1)*(_-1)+(v-1),M=(n+1)*_+(v-1),b=(n+1)*_+v,A=(n+1)*(_-1)+v;a.push(E,M,A),a.push(M,b,A)}this.setIndex(a),this.setAttribute("position",new Ie(l,3)),this.setAttribute("normal",new Ie(c,3)),this.setAttribute("uv",new Ie(h,2));function x(_,v,E,M,b){const A=Math.cos(_),L=Math.sin(_),S=E/v*_,T=Math.cos(S);b.x=M*(2+T)*.5*A,b.y=M*(2+T)*L*.5,b.z=M*Math.sin(S)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Vf(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Hf extends ht{constructor(e=new Ky(new R(-1,-1,0),new R(-1,1,0),new R(1,1,0)),t=64,i=1,n=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:s};const r=e.computeFrenetFrames(t,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const a=new R,l=new R,c=new Y;let h=new R;const u=[],d=[],f=[],p=[];g(),this.setIndex(p),this.setAttribute("position",new Ie(u,3)),this.setAttribute("normal",new Ie(d,3)),this.setAttribute("uv",new Ie(f,2));function g(){for(let _=0;_<t;_++)m(_);m(s===!1?t:0),x(),y()}function m(_){h=e.getPointAt(_/t,h);const v=r.normals[_],E=r.binormals[_];for(let M=0;M<=n;M++){const b=M/n*Math.PI*2,A=Math.sin(b),L=-Math.cos(b);l.x=L*v.x+A*E.x,l.y=L*v.y+A*E.y,l.z=L*v.z+A*E.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+i*l.x,a.y=h.y+i*l.y,a.z=h.z+i*l.z,u.push(a.x,a.y,a.z)}}function y(){for(let _=1;_<=t;_++)for(let v=1;v<=n;v++){const E=(n+1)*(_-1)+(v-1),M=(n+1)*_+(v-1),b=(n+1)*_+v,A=(n+1)*(_-1)+v;p.push(E,M,A),p.push(M,b,A)}}function x(){for(let _=0;_<=t;_++)for(let v=0;v<=n;v++)c.x=_/t,c.y=v/n,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Hf(new Vd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Qy extends ht{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new R,s=new R;if(e.index!==null){const r=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,g=d+f;p<g;p+=3)for(let m=0;m<3;m++){const y=a.getX(p+m),x=a.getX(p+(m+1)%3);n.fromBufferAttribute(r,y),s.fromBufferAttribute(r,x),__(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}}else{const r=e.attributes.position;for(let a=0,l=r.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;n.fromBufferAttribute(r,h),s.fromBufferAttribute(r,u),__(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ie(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function __(o,e,t){const i=`${o.x},${o.y},${o.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${o.x},${o.y},${o.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}var v_=Object.freeze({__proto__:null,BoxGeometry:Hc,CapsuleGeometry:If,CircleGeometry:Lf,ConeGeometry:Df,CylinderGeometry:al,DodecahedronGeometry:Uf,EdgesGeometry:SM,ExtrudeGeometry:Kc,IcosahedronGeometry:Bf,LatheGeometry:Zc,OctahedronGeometry:jc,PlaneGeometry:rl,PolyhedronGeometry:Fr,RingGeometry:Of,ShapeGeometry:zf,SphereGeometry:Jy,TetrahedronGeometry:kf,TorusGeometry:Gf,TorusKnotGeometry:Vf,TubeGeometry:Hf,WireframeGeometry:Qy});let AM=class extends Oi{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ae(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}};class EM extends sn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}let ex=class extends Oi{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Xn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},RM=class extends ex{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Y(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return $t(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ae(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}},CM=class extends Oi{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ae(16777215),this.specular=new Ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Xn,this.combine=kc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},NM=class extends Oi{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},PM=class extends Oi{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}},IM=class extends Oi{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Xn,this.combine=kc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},LM=class extends Oi{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}},DM=class extends Zi{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}};function mo(o,e,t){return!o||!t&&o.constructor===e?o:typeof e.BYTES_PER_ELEMENT=="number"?new e(o):Array.prototype.slice.call(o)}function UM(o){return ArrayBuffer.isView(o)&&!(o instanceof DataView)}function FM(o){function e(n,s){return o[n]-o[s]}const t=o.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function Ng(o,e,t){const i=o.length,n=new o.constructor(i);for(let s=0,r=0;r!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)n[r++]=o[a+l]}return n}function tx(o,e,t,i){let n=1,s=o[0];for(;s!==void 0&&s[i]===void 0;)s=o[n++];if(s===void 0)return;let r=s[i];if(r!==void 0)if(Array.isArray(r))do r=s[i],r!==void 0&&(e.push(s.time),t.push.apply(t,r)),s=o[n++];while(s!==void 0);else if(r.toArray!==void 0)do r=s[i],r!==void 0&&(e.push(s.time),r.toArray(t,t.length)),s=o[n++];while(s!==void 0);else do r=s[i],r!==void 0&&(e.push(s.time),t.push(r)),s=o[n++];while(s!==void 0)}function B2(o,e,t,i,n=30){const s=o.clone();s.name=e;const r=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*n;if(!(p<t||p>=i)){u.push(c.times[f]);for(let g=0;g<h;++g)d.push(c.values[f*h+g])}}u.length!==0&&(c.times=mo(u,c.times.constructor),c.values=mo(d,c.values.constructor),r.push(c))}s.tracks=r;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function O2(o,e=0,t=o,i=30){i<=0&&(i=30);const n=t.tracks.length,s=e/i;for(let r=0;r<n;++r){const a=t.tracks[r],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=o.tracks.find(function(y){return y.name===a.name&&y.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let g;if(s<=a.times[0]){const y=h,x=u-h;g=a.values.slice(y,x)}else if(s>=a.times[p]){const y=p*u+h,x=y+u-h;g=a.values.slice(y,x)}else{const y=a.createInterpolant(),x=h,_=u-h;y.evaluate(s),g=y.resultBuffer.slice(x,_)}l==="quaternion"&&new li().fromArray(g).normalize().conjugate().toArray(g);const m=c.times.length;for(let y=0;y<m;++y){const x=y*f+d;if(l==="quaternion")li.multiplyQuaternionsFlat(c.values,x,g,0,c.values,x);else{const _=f-d*2;for(let v=0;v<_;++v)c.values[x+v]-=g[v]}}}return o.blendMode=Ly,o}const z2={convertArray:mo,isTypedArray:UM,getKeyframeOrder:FM,sortedArray:Ng,flattenJSON:tx,subclip:B2,makeClipAdditive:O2};class Jc{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],s=t[i-1];e:{t:{let r;i:{n:if(!(e<n)){for(let a=i+2;;){if(n===void 0){if(e<s)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(s=n,n=t[++i],e<n)break t}r=t.length;break i}if(!(e>=s)){const a=t[1];e<a&&(i=2,s=a);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=s,s=t[--i-1],e>=s)break t}r=i,i=0;break i}break e}for(;i<r;){const a=i+r>>>1;e<t[a]?r=a:i=a+1}if(n=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n;for(let r=0;r!==n;++r)t[r]=i[s+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class BM extends Jc{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:uo,endingEnd:uo}}intervalChanged_(e,t,i){const n=this.parameterPositions;let s=e-2,r=e+1,a=n[s],l=n[r];if(a===void 0)switch(this.getSettings_().endingStart){case fo:s=e,a=2*t-i;break;case pc:s=n.length-2,a=t+n[s]-n[s+1];break;default:s=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case fo:r=e,l=2*i-t;break;case pc:r=1,l=i+n[1]-n[0];break;default:r=e-1,l=t}const c=(i-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=s*h,this._offsetNext=r*h}interpolate_(e,t,i,n){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(i-t)/(n-t),g=p*p,m=g*p,y=-d*m+2*d*g-d*p,x=(1+d)*m+(-1.5-2*d)*g+(-.5+d)*p+1,_=(-1-f)*m+(1.5+f)*g+.5*p,v=f*m-f*g;for(let E=0;E!==a;++E)s[E]=y*r[h+E]+x*r[c+E]+_*r[l+E]+v*r[u+E];return s}}class ix extends Jc{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(i-t)/(n-t),u=1-h;for(let d=0;d!==a;++d)s[d]=r[c+d]*u+r[l+d]*h;return s}}class OM extends Jc{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Kn{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=mo(t,this.TimeBufferType),this.values=mo(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:mo(e.times,Array),values:mo(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new OM(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ix(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new BM(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case fc:t=this.InterpolantFactoryMethodDiscrete;break;case zd:t=this.InterpolantFactoryMethodLinear;break;case Wu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return fc;case this.InterpolantFactoryMethodLinear:return zd;case this.InterpolantFactoryMethodSmooth:return Wu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let s=0,r=n-1;for(;s!==n&&i[s]<e;)++s;for(;r!==-1&&i[r]>t;)--r;if(++r,s!==0||r!==n){s>=r&&(r=Math.max(r,1),s=r-1);const a=this.getValueSize();this.times=i.slice(s,r),this.values=this.values.slice(s*a,r*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let a=0;a!==s;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(r!==null&&r>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,r),e=!1;break}r=l}if(n!==void 0&&UM(n))for(let a=0,l=n.length;a!==l;++a){const c=n[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===Wu,s=e.length-1;let r=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(n)l=!0;else{const u=a*i,d=u-i,f=u+i;for(let p=0;p!==i;++p){const g=t[u+p];if(g!==t[d+p]||g!==t[f+p]){l=!0;break}}}if(l){if(a!==r){e[r]=e[a];const u=a*i,d=r*i;for(let f=0;f!==i;++f)t[d+f]=t[u+f]}++r}}if(s>0){e[r]=e[s];for(let a=s*i,l=r*i,c=0;c!==i;++c)t[l+c]=t[a+c];++r}return r!==e.length?(this.times=e.slice(0,r),this.values=t.slice(0,r*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Kn.prototype.TimeBufferType=Float32Array;Kn.prototype.ValueBufferType=Float32Array;Kn.prototype.DefaultInterpolation=zd;class Fo extends Kn{constructor(e,t,i){super(e,t,i)}}Fo.prototype.ValueTypeName="bool";Fo.prototype.ValueBufferType=Array;Fo.prototype.DefaultInterpolation=fc;Fo.prototype.InterpolantFactoryMethodLinear=void 0;Fo.prototype.InterpolantFactoryMethodSmooth=void 0;class nx extends Kn{}nx.prototype.ValueTypeName="color";class Ac extends Kn{}Ac.prototype.ValueTypeName="number";class zM extends Jc{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=(i-t)/(n-t);let c=e*a;for(let h=c+a;c!==h;c+=4)li.slerpFlat(s,0,r,c-a,r,c,l);return s}}class Qc extends Kn{InterpolantFactoryMethodLinear(e){return new zM(this.times,this.values,this.getValueSize(),e)}}Qc.prototype.ValueTypeName="quaternion";Qc.prototype.InterpolantFactoryMethodSmooth=void 0;class Bo extends Kn{constructor(e,t,i){super(e,t,i)}}Bo.prototype.ValueTypeName="string";Bo.prototype.ValueBufferType=Array;Bo.prototype.DefaultInterpolation=fc;Bo.prototype.InterpolantFactoryMethodLinear=void 0;Bo.prototype.InterpolantFactoryMethodSmooth=void 0;class Ec extends Kn{}Ec.prototype.ValueTypeName="vector";class Rc{constructor(e="",t=-1,i=[],n=Sf){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=Sn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let r=0,a=i.length;r!==a;++r)t.push(G2(i[r]).scale(n));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,r=i.length;s!==r;++s)t.push(Kn.toJSON(i[s]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const s=t.length,r=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const h=FM(l);l=Ng(l,1,h),c=Ng(c,1,h),!n&&l[0]===0&&(l.push(s),c.push(c[0])),r.push(new Ac(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,r)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(s);if(h&&h.length>1){const u=h[1];let d=n[u];d||(n[u]=d=[]),d.push(c)}}const r=[];for(const a in n)r.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return r}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,d,f,p,g){if(f.length!==0){const m=[],y=[];tx(f,m,y,p),m.length!==0&&g.push(new u(d,m,y))}},n=[],s=e.name||"default",r=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let g=0;g<d[p].morphTargets.length;g++)f[d[p].morphTargets[g]]=-1;for(const g in f){const m=[],y=[];for(let x=0;x!==d[p].morphTargets.length;++x){const _=d[p];m.push(_.time),y.push(_.morphTarget===g?1:0)}n.push(new Ac(".morphTargetInfluence["+g+"]",m,y))}l=f.length*r}else{const f=".bones["+t[u].name+"]";i(Ec,f+".position",d,"pos",n),i(Qc,f+".quaternion",d,"rot",n),i(Ec,f+".scale",d,"scl",n)}}return n.length===0?null:new this(s,l,n,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function k2(o){switch(o.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ac;case"vector":case"vector2":case"vector3":case"vector4":return Ec;case"color":return nx;case"quaternion":return Qc;case"bool":case"boolean":return Fo;case"string":return Bo}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+o)}function G2(o){if(o.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=k2(o.type);if(o.times===void 0){const t=[],i=[];tx(o.keys,t,i,"value"),o.times=t,o.values=i}return e.parse!==void 0?e.parse(o):new e(o.name,o.times,o.values,o.interpolation)}const Bs={enabled:!1,files:{},add:function(o,e){this.enabled!==!1&&(this.files[o]=e)},get:function(o){if(this.enabled!==!1)return this.files[o]},remove:function(o){delete this.files[o]},clear:function(){this.files={}}};class sx{constructor(e,t,i){const n=this;let s=!1,r=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){a++,s===!1&&n.onStart!==void 0&&n.onStart(h,r,a),s=!0},this.itemEnd=function(h){r++,n.onProgress!==void 0&&n.onProgress(h,r,a),r===a&&(s=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const kM=new sx;class ln{constructor(e){this.manager=e!==void 0?e:kM,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,s){i.load(e,n,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ln.DEFAULT_MATERIAL_NAME="__DEFAULT";const bs={};class V2 extends Error{constructor(e,t){super(e),this.response=t}}class Ys extends ln{constructor(e){super(e)}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Bs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(bs[e]!==void 0){bs[e].push({onLoad:t,onProgress:i,onError:n});return}bs[e]=[],bs[e].push({onLoad:t,onProgress:i,onError:n});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(r).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=bs[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let g=0;const m=new ReadableStream({start(y){x();function x(){u.read().then(({done:_,value:v})=>{if(_)y.close();else{g+=v.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:g,total:f});for(let M=0,b=h.length;M<b;M++){const A=h[M];A.onProgress&&A.onProgress(E)}y.enqueue(v),x()}},_=>{y.error(_)})}}});return new Response(m)}else throw new V2(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{Bs.add(e,c);const h=bs[e];delete bs[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=bs[e];if(h===void 0)throw this.manager.itemError(e),c;delete bs[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class H2 extends ln{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new Ys(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t=[];for(let i=0;i<e.length;i++){const n=Rc.parse(e[i]);t.push(n)}return t}}class W2 extends ln{constructor(e){super(e)}load(e,t,i,n){const s=this,r=[],a=new Nf,l=new Ys(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=s.parse(d,!0);r[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=ni),a.image=r,a.format=f.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=s.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){r[p]={mipmaps:[]};for(let g=0;g<d.mipmapCount;g++)r[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+g]),r[p].format=d.format,r[p].width=d.width,r[p].height=d.height}a.image=r}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=ni),a.format=d.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}}class Cc extends ln{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Bs.get(e);if(r!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const a=Sc("img");function l(){h(),Bs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(u){h(),n&&n(u),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class $2 extends ln{constructor(e){super(e)}load(e,t,i,n){const s=new $c;s.colorSpace=En;const r=new Cc(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function l(c){r.load(e[c],function(h){s.images[c]=h,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,n)}for(let c=0;c<e.length;++c)l(c);return s}}class X2 extends ln{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new os,a=new Ys(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){let c;try{c=s.parse(l)}catch(h){if(n!==void 0)n(h);else{console.error(h);return}}c.image!==void 0?r.image=c.image:c.data!==void 0&&(r.image.width=c.width,r.image.height=c.height,r.image.data=c.data),r.wrapS=c.wrapS!==void 0?c.wrapS:Cn,r.wrapT=c.wrapT!==void 0?c.wrapT:Cn,r.magFilter=c.magFilter!==void 0?c.magFilter:ni,r.minFilter=c.minFilter!==void 0?c.minFilter:ni,r.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(r.colorSpace=c.colorSpace),c.flipY!==void 0&&(r.flipY=c.flipY),c.format!==void 0&&(r.format=c.format),c.type!==void 0&&(r.type=c.type),c.mipmaps!==void 0&&(r.mipmaps=c.mipmaps,r.minFilter=ns),c.mipmapCount===1&&(r.minFilter=ni),c.generateMipmaps!==void 0&&(r.generateMipmaps=c.generateMipmaps),r.needsUpdate=!0,t&&t(r,c)},i,n),r}}class q2 extends ln{constructor(e){super(e)}load(e,t,i,n){const s=new xi,r=new Cc(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},i,n),s}}let Br=class extends Rt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ae(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}},GM=class extends Br{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ae(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}};const tm=new $e,S_=new R,b_=new R;let rx=class{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Y(512,512),this.map=null,this.mapPass=null,this.matrix=new $e,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Xc,this._frameExtents=new Y(1,1),this._viewportCount=1,this._viewports=[new dt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;S_.setFromMatrixPosition(e.matrixWorld),t.position.copy(S_),b_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(b_),t.updateMatrixWorld(),tm.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(tm),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(tm)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}},Y2=class extends rx{constructor(){super(new Ai(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=Ka*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}},VM=class extends Br{constructor(e,t,i=0,n=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.distance=i,this.angle=n,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new Y2}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}};const M_=new $e,El=new R,im=new R;let Z2=class extends rx{constructor(){super(new Ai(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Y(4,2),this._viewportCount=6,this._viewports=[new dt(2,1,1,1),new dt(0,1,1,1),new dt(3,1,1,1),new dt(1,1,1,1),new dt(3,0,1,1),new dt(1,0,1,1)],this._cubeDirections=[new R(1,0,0),new R(-1,0,0),new R(0,0,1),new R(0,0,-1),new R(0,1,0),new R(0,-1,0)],this._cubeUps=[new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,0,1),new R(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),El.setFromMatrixPosition(e.matrixWorld),i.position.copy(El),im.copy(i.position),im.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(im),i.updateMatrixWorld(),n.makeTranslation(-El.x,-El.y,-El.z),M_.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(M_)}},HM=class extends Br{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Z2}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}},K2=class extends rx{constructor(){super(new qc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},WM=class extends Br{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.shadow=new K2}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},$M=class extends Br{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}},XM=class extends Br{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}},qM=class{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new R)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*n),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*i),t.addScaledVector(r[4],1.092548*(i*n)),t.addScaledVector(r[5],1.092548*(n*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(i*s)),t.addScaledVector(r[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*n),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*i),t.addScaledVector(r[4],2*.429043*i*n),t.addScaledVector(r[5],2*.429043*n*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*i*s),t.addScaledVector(r[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,s=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-n*n)}},YM=class extends Br{constructor(e=new qM,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}};class Wf extends ln{constructor(e){super(e),this.textures={}}load(e,t,i,n){const s=this,r=new Ys(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const n=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(n.uuid=e.uuid),e.name!==void 0&&(n.name=e.name),e.color!==void 0&&n.color!==void 0&&n.color.setHex(e.color),e.roughness!==void 0&&(n.roughness=e.roughness),e.metalness!==void 0&&(n.metalness=e.metalness),e.sheen!==void 0&&(n.sheen=e.sheen),e.sheenColor!==void 0&&(n.sheenColor=new Ae().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(n.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(e.emissive),e.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(e.specular),e.specularIntensity!==void 0&&(n.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(n.shininess=e.shininess),e.clearcoat!==void 0&&(n.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(n.dispersion=e.dispersion),e.iridescence!==void 0&&(n.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(n.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(n.transmission=e.transmission),e.thickness!==void 0&&(n.thickness=e.thickness),e.attenuationDistance!==void 0&&(n.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(n.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(n.fog=e.fog),e.flatShading!==void 0&&(n.flatShading=e.flatShading),e.blending!==void 0&&(n.blending=e.blending),e.combine!==void 0&&(n.combine=e.combine),e.side!==void 0&&(n.side=e.side),e.shadowSide!==void 0&&(n.shadowSide=e.shadowSide),e.opacity!==void 0&&(n.opacity=e.opacity),e.transparent!==void 0&&(n.transparent=e.transparent),e.alphaTest!==void 0&&(n.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(n.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(n.depthFunc=e.depthFunc),e.depthTest!==void 0&&(n.depthTest=e.depthTest),e.depthWrite!==void 0&&(n.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(n.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(n.blendSrc=e.blendSrc),e.blendDst!==void 0&&(n.blendDst=e.blendDst),e.blendEquation!==void 0&&(n.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(n.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(n.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(n.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(n.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(n.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(n.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(n.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(n.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(n.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(n.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(n.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(n.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(n.rotation=e.rotation),e.linewidth!==void 0&&(n.linewidth=e.linewidth),e.dashSize!==void 0&&(n.dashSize=e.dashSize),e.gapSize!==void 0&&(n.gapSize=e.gapSize),e.scale!==void 0&&(n.scale=e.scale),e.polygonOffset!==void 0&&(n.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(n.dithering=e.dithering),e.alphaToCoverage!==void 0&&(n.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(n.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(n.visible=e.visible),e.toneMapped!==void 0&&(n.toneMapped=e.toneMapped),e.userData!==void 0&&(n.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const r=e.uniforms[s];switch(n.uniforms[s]={},r.type){case"t":n.uniforms[s].value=i(r.value);break;case"c":n.uniforms[s].value=new Ae().setHex(r.value);break;case"v2":n.uniforms[s].value=new Y().fromArray(r.value);break;case"v3":n.uniforms[s].value=new R().fromArray(r.value);break;case"v4":n.uniforms[s].value=new dt().fromArray(r.value);break;case"m3":n.uniforms[s].value=new lt().fromArray(r.value);break;case"m4":n.uniforms[s].value=new $e().fromArray(r.value);break;default:n.uniforms[s].value=r.value}}if(e.defines!==void 0&&(n.defines=e.defines),e.vertexShader!==void 0&&(n.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(n.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(n.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)n.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(n.lights=e.lights),e.clipping!==void 0&&(n.clipping=e.clipping),e.size!==void 0&&(n.size=e.size),e.sizeAttenuation!==void 0&&(n.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(n.map=i(e.map)),e.matcap!==void 0&&(n.matcap=i(e.matcap)),e.alphaMap!==void 0&&(n.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(n.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(n.bumpScale=e.bumpScale),e.normalMap!==void 0&&(n.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(n.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),n.normalScale=new Y().fromArray(s)}return e.displacementMap!==void 0&&(n.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(n.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(n.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(n.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(n.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(n.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(n.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(n.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(n.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(n.envMap=i(e.envMap)),e.envMapRotation!==void 0&&n.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(n.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(n.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(n.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(n.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(n.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(n.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(n.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(n.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(n.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new Y().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(n.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(n.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(n.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(n.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(n.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Wf.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:AM,SpriteMaterial:Hy,RawShaderMaterial:EM,ShaderMaterial:sn,PointsMaterial:$y,MeshPhysicalMaterial:RM,MeshStandardMaterial:ex,MeshPhongMaterial:CM,MeshToonMaterial:NM,MeshNormalMaterial:PM,MeshLambertMaterial:IM,MeshDepthMaterial:Gy,MeshDistanceMaterial:Vy,MeshBasicMaterial:Ur,MeshMatcapMaterial:LM,LineDashedMaterial:DM,LineBasicMaterial:Zi,Material:Oi};return new t[e]}}class Pg{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class ox extends ht{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class ZM extends ln{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new Ys(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t={},i={};function n(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],y=s(f,m.buffer),x=Na(m.type,y),_=new Yc(x,m.stride);return _.uuid=m.uuid,t[p]=_,_}function s(f,p){if(i[p]!==void 0)return i[p];const m=f.arrayBuffers[p],y=new Uint32Array(m).buffer;return i[p]=y,y}const r=e.isInstancedBufferGeometry?new ox:new ht,a=e.data.index;if(a!==void 0){const f=Na(a.type,a.array);r.setIndex(new xt(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let g;if(p.isInterleavedBufferAttribute){const m=n(e.data,p.data);g=new Nn(m,p.itemSize,p.offset,p.normalized)}else{const m=Na(p.type,p.array),y=p.isInstancedBufferAttribute?Rr:xt;g=new y(m,p.itemSize,p.normalized)}p.name!==void 0&&(g.name=p.name),p.usage!==void 0&&g.setUsage(p.usage),r.setAttribute(f,g)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],g=[];for(let m=0,y=p.length;m<y;m++){const x=p[m];let _;if(x.isInterleavedBufferAttribute){const v=n(e.data,x.data);_=new Nn(v,x.itemSize,x.offset,x.normalized)}else{const v=Na(x.type,x.array);_=new xt(v,x.itemSize,x.normalized)}x.name!==void 0&&(_.name=x.name),g.push(_)}r.morphAttributes[f]=g}e.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const g=u[f];r.addGroup(g.start,g.count,g.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new R;d.center!==void 0&&f.fromArray(d.center),r.boundingSphere=new gi(f,d.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class j2 extends ln{constructor(e){super(e)}load(e,t,i,n){const s=this,r=this.path===""?Pg.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const a=new Ys(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){n!==void 0&&n(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){n!==void 0&&n(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},i,n)}async loadAsync(e,t){const i=this,n=this.path===""?Pg.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const s=new Ys(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const r=await s.loadAsync(e,t),a=JSON.parse(r),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(a)}parse(e,t){const i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,n),r=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,r),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,i),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in r)if(r[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),s=await this.parseImagesAsync(e.images),r=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,r),l=this.parseObject(e.object,n,a,r,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,n=e.length;i<n;i++){const s=new _o().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},n={};if(t.traverse(function(s){s.isBone&&(n[s.uuid]=s)}),e!==void 0)for(let s=0,r=e.length;s<r;s++){const a=new Cf().fromJSON(e[s],n);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};if(e!==void 0){const n=new ZM;for(let s=0,r=e.length;s<r;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(l);break;default:l.type in v_?a=v_[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),i[l.uuid]=a}}return i}parseMaterials(e,t){const i={},n={};if(e!==void 0){const s=new Wf;s.setTextures(t);for(let r=0,a=e.length;r<a;r++){const l=e[r];i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),n[l.uuid]=i[l.uuid]}}return n}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const n=e[i],s=Rc.parse(n);t[s.uuid]=s}return t}parseImages(e,t){const i=this,n={};let s;function r(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return r(h)}else return l.data?{data:Na(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new sx(t);s=new Cc(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,g=d.length;p<g;p++){const m=d[p],y=a(m);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new os(y.data,y.width,y.height)))}n[u.uuid]=new po(f)}else{const f=a(u.url);n[u.uuid]=new po(f)}}}return n}async parseImagesAsync(e){const t=this,i={};let n;async function s(r){if(typeof r=="string"){const a=r,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await n.loadAsync(l)}else return r.data?{data:Na(r.type,r.data),width:r.width,height:r.height}:null}if(e!==void 0&&e.length>0){n=new Cc(this.manager),n.setCrossOrigin(this.crossOrigin);for(let r=0,a=e.length;r<a;r++){const l=e[r],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await s(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new os(p.data,p.width,p.height)))}i[l.uuid]=new po(h)}else{const h=await s(l.url);i[l.uuid]=new po(h)}}}return i}parseTextures(e,t){function i(s,r){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),r[s])}const n={};if(e!==void 0)for(let s=0,r=e.length;s<r;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new $c,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new os:h=new xi,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=i(a.mapping,J2)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=i(a.wrap[0],T_),h.wrapT=i(a.wrap[1],T_)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=i(a.minFilter,w_)),a.magFilter!==void 0&&(h.magFilter=i(a.magFilter,w_)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),n[a.uuid]=h}return n}parseObject(e,t,i,n,s){let r;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,g=d.length;p<g;p++){const m=d[p];i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(i[m])}return f}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}function c(d){return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),n[d]}let h,u;switch(e.type){case"Scene":r=new oM,e.background!==void 0&&(Number.isInteger(e.background)?r.background=new Ae(e.background):r.background=c(e.background)),e.environment!==void 0&&(r.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?r.fog=new Rf(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(r.fog=new Ef(e.fog.color,e.fog.density)),e.fog.name!==""&&(r.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(r.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(r.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&r.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(r.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&r.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":r=new Ai(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(r.focus=e.focus),e.zoom!==void 0&&(r.zoom=e.zoom),e.filmGauge!==void 0&&(r.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(r.filmOffset=e.filmOffset),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new qc(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(r.zoom=e.zoom),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new $M(e.color,e.intensity);break;case"DirectionalLight":r=new WM(e.color,e.intensity),r.target=e.target||"";break;case"PointLight":r=new HM(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new XM(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new VM(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),r.target=e.target||"";break;case"HemisphereLight":r=new GM(e.color,e.groundColor,e.intensity);break;case"LightProbe":r=new YM().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),r=new uM(h,u),e.bindMode!==void 0&&(r.bindMode=e.bindMode),e.bindMatrix!==void 0&&r.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(r.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),r=new qt(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;r=new dM(h,u,d),r.instanceMatrix=new Rr(new Float32Array(f.array),16),p!==void 0&&(r.instanceColor=new Rr(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),r=new fM(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),r.geometry=h,r.perObjectFrustumCulled=e.perObjectFrustumCulled,r.sortObjects=e.sortObjects,r._drawRanges=e.drawRanges,r._reservedRanges=e.reservedRanges,r._visibility=e.visibility,r._active=e.active,r._bounds=e.bounds.map(g=>{const m=new mi;m.min.fromArray(g.boxMin),m.max.fromArray(g.boxMax);const y=new gi;return y.radius=g.sphereRadius,y.center.fromArray(g.sphereCenter),{boxInitialized:g.boxInitialized,box:m,sphereInitialized:g.sphereInitialized,sphere:y}}),r._maxInstanceCount=e.maxInstanceCount,r._maxVertexCount=e.maxVertexCount,r._maxIndexCount=e.maxIndexCount,r._geometryInitialized=e.geometryInitialized,r._geometryCount=e.geometryCount,r._matricesTexture=c(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(r._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":r=new hM;break;case"Line":r=new Cr(a(e.geometry),l(e.material));break;case"LineLoop":r=new pM(a(e.geometry),l(e.material));break;case"LineSegments":r=new ps(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":r=new mM(a(e.geometry),l(e.material));break;case"Sprite":r=new cM(l(e.material));break;case"Group":r=new Ia;break;case"Bone":r=new Wy;break;default:r=new Rt}if(r.uuid=e.uuid,e.name!==void 0&&(r.name=e.name),e.matrix!==void 0?(r.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(e.position!==void 0&&r.position.fromArray(e.position),e.rotation!==void 0&&r.rotation.fromArray(e.rotation),e.quaternion!==void 0&&r.quaternion.fromArray(e.quaternion),e.scale!==void 0&&r.scale.fromArray(e.scale)),e.up!==void 0&&r.up.fromArray(e.up),e.castShadow!==void 0&&(r.castShadow=e.castShadow),e.receiveShadow!==void 0&&(r.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(r.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(r.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(r.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(r.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&r.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(r.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(r.visible=e.visible),e.frustumCulled!==void 0&&(r.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(r.renderOrder=e.renderOrder),e.userData!==void 0&&(r.userData=e.userData),e.layers!==void 0&&(r.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)r.add(this.parseObject(d[f],t,i,n,s))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];r.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(r.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],g=r.getObjectByProperty("uuid",p.object);g!==void 0&&r.addLevel(g,p.distance,p.hysteresis)}}return r}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const n=t[i.skeleton];n===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(n,i.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const i=t.target,n=e.getObjectByProperty("uuid",i);n!==void 0?t.target=n:t.target=new Rt}})}}const J2={UVMapping:pf,CubeReflectionMapping:Xs,CubeRefractionMapping:Er,EquirectangularReflectionMapping:cc,EquirectangularRefractionMapping:hc,CubeUVReflectionMapping:sl},T_={RepeatWrapping:uc,ClampToEdgeWrapping:Cn,MirroredRepeatWrapping:dc},w_={NearestFilter:pi,NearestMipmapNearestFilter:My,NearestMipmapLinearFilter:Ca,LinearFilter:ni,LinearMipmapNearestFilter:Yl,LinearMipmapLinearFilter:ns};class Q2 extends ln{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Bs.get(e);if(r!==void 0){if(s.manager.itemStart(e),r.then){r.then(c=>{t&&t(c),s.manager.itemEnd(e)}).catch(c=>{n&&n(c)});return}return setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return Bs.add(e,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){n&&n(c),Bs.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});Bs.add(e,l),s.manager.itemStart(e)}}let Kh;class ax{static getContext(){return Kh===void 0&&(Kh=new(window.AudioContext||window.webkitAudioContext)),Kh}static setContext(e){Kh=e}}class eI extends ln{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new Ys(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(l){try{const c=l.slice(0);ax.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},i,n);function a(l){n?n(l):console.error(l),s.manager.itemError(e)}}}const A_=new $e,E_=new $e,qr=new $e;class tI{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ai,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ai,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,qr.copy(e.projectionMatrix);const n=t.eyeSep/2,s=n*t.near/t.focus,r=t.near*Math.tan(xo*t.fov*.5)/t.zoom;let a,l;E_.elements[12]=-n,A_.elements[12]=n,a=-r*t.aspect+s,l=r*t.aspect+s,qr.elements[0]=2*t.near/(l-a),qr.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(qr),a=-r*t.aspect-s,l=r*t.aspect-s,qr.elements[0]=2*t.near/(l-a),qr.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(qr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(E_),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(A_)}}class lx{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=R_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=R_();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function R_(){return performance.now()}const Yr=new R,C_=new li,iI=new R,Zr=new R;class nI extends Rt{constructor(){super(),this.type="AudioListener",this.context=ax.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new lx}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Yr,C_,iI),Zr.set(0,0,-1).applyQuaternion(C_),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Yr.x,n),t.positionY.linearRampToValueAtTime(Yr.y,n),t.positionZ.linearRampToValueAtTime(Yr.z,n),t.forwardX.linearRampToValueAtTime(Zr.x,n),t.forwardY.linearRampToValueAtTime(Zr.y,n),t.forwardZ.linearRampToValueAtTime(Zr.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(Yr.x,Yr.y,Yr.z),t.setOrientation(Zr.x,Zr.y,Zr.z,i.x,i.y,i.z)}}class KM extends Rt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Kr=new R,N_=new li,sI=new R,jr=new R;class rI extends KM{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Kr,N_,sI),jr.set(0,0,1).applyQuaternion(N_);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Kr.x,i),t.positionY.linearRampToValueAtTime(Kr.y,i),t.positionZ.linearRampToValueAtTime(Kr.z,i),t.orientationX.linearRampToValueAtTime(jr.x,i),t.orientationY.linearRampToValueAtTime(jr.y,i),t.orientationZ.linearRampToValueAtTime(jr.z,i)}else t.setPosition(Kr.x,Kr.y,Kr.z),t.setOrientation(jr.x,jr.y,jr.z)}}class oI{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class jM{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,s,r;switch(t){case"quaternion":n=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":n=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:n=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,s=e*n+n;let r=this.cumulativeWeight;if(r===0){for(let a=0;a!==n;++a)i[s+a]=i[a];r=t}else{r+=t;const a=t/r;this._mixBufferRegion(i,s,0,a,n)}this.cumulativeWeight=r}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(i,n,l,1-s,t)}r>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let s=i,r=n;s!==r;++s)t[s]=t[n+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,s){if(n>=.5)for(let r=0;r!==s;++r)e[t+r]=e[i+r]}_slerp(e,t,i,n){li.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,s){const r=this._workIndex*s;li.multiplyQuaternionsFlat(e,r,e,t,e,i),li.slerpFlat(e,t,e,t,e,r,n)}_lerp(e,t,i,n,s){const r=1-n;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*r+e[i+a]*n}}_lerpAdditive(e,t,i,n,s){for(let r=0;r!==s;++r){const a=t+r;e[a]=e[a]+e[i+r]*n}}}const cx="\\[\\]\\.:\\/",aI=new RegExp("["+cx+"]","g"),hx="[^"+cx+"]",lI="[^"+cx.replace("\\.","")+"]",cI=/((?:WC+[\/:])*)/.source.replace("WC",hx),hI=/(WCOD+)?/.source.replace("WCOD",lI),uI=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hx),dI=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hx),fI=new RegExp("^"+cI+hI+uI+dI+"$"),pI=["material","materials","bones","map"];class mI{constructor(e,t,i){const n=i||yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class yt{constructor(e,t,i){this.path=t,this.parsedPath=i||yt.parseTrackName(t),this.node=yt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new yt.Composite(e,t,i):new yt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(aI,"")}static parseTrackName(e){const t=fI.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const s=i.nodeName.substring(n+1);pI.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let r=0;r<s.length;r++){const a=s[r];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let s=t.propertyIndex;if(e||(e=yt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const r=e[n];if(r===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else r.fromArray!==void 0&&r.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(l=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}yt.Composite=mI;yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};yt.prototype.GetterByBindingType=[yt.prototype._getValue_direct,yt.prototype._getValue_array,yt.prototype._getValue_arrayElement,yt.prototype._getValue_toArray];yt.prototype.SetterByBindingTypeAndVersioning=[[yt.prototype._setValue_direct,yt.prototype._setValue_direct_setNeedsUpdate,yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_array,yt.prototype._setValue_array_setNeedsUpdate,yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_arrayElement,yt.prototype._setValue_arrayElement_setNeedsUpdate,yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_fromArray,yt.prototype._setValue_fromArray_setNeedsUpdate,yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class gI{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Sn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,s=this._bindings,r=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let g=0,m=r;g!==m;++g)s[g].push(new yt(d,i[g],n[g]))}else if(p<c){a=e[p];const g=--c,m=e[g];t[m.uuid]=p,e[p]=m,t[f]=g,e[g]=d;for(let y=0,x=r;y!==x;++y){const _=s[y],v=_[g];let E=_[p];_[p]=v,E===void 0&&(E=new yt(d,i[y],n[y])),_[g]=E}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_;for(let r=0,a=arguments.length;r!==a;++r){const l=arguments[r],c=l.uuid,h=t[c];if(h!==void 0&&h>=s){const u=s++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=n;f!==p;++f){const g=i[f],m=g[u],y=g[h];g[h]=m,g[u]=y}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_,r=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<s){const d=--s,f=e[d],p=--r,g=e[p];t[f.uuid]=u,e[u]=f,t[g.uuid]=d,e[d]=g,e.pop();for(let m=0,y=n;m!==y;++m){const x=i[m],_=x[d],v=x[p];x[u]=_,x[d]=v,x.pop()}}else{const d=--r,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,g=n;p!==g;++p){const m=i[p];m[u]=m[d],m.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const i=this._bindingsIndicesByPath;let n=i[e];const s=this._bindings;if(n!==void 0)return s[n];const r=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);n=s.length,i[e]=n,r.push(e),a.push(t),s.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new yt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const n=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length-1,l=r[a],c=e[a];t[c]=i,r[i]=l,r.pop(),s[i]=s[a],s.pop(),n[i]=n[a],n.pop()}}}class JM{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const s=t.tracks,r=s.length,a=new Array(r),l={endingStart:uo,endingEnd:uo};for(let c=0;c!==r;++c){const h=s[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Tb,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const n=this._clip.duration,s=e._clip.duration,r=s/n,a=n/s;e.warp(1,r,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,s=n.time,r=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/r,c[1]=t/r,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const r=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Ly:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(r),c[h].accumulateAdditive(a);break;case Sf:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(r),c[h].accumulate(n,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,s=this._loopCount;const r=i===wb;if(e===0)return s===-1?n:r&&(s&1)===1?t-n:n;if(i===Mb){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,r)):this._setEndings(this.repetitions===0,!0,r)),n>=t||n<0){const a=Math.floor(n/t);n-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,r)}else this._setEndings(!1,!1,r);this._loopCount=s,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(r&&(s&1)===1)return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=fo,n.endingEnd=fo):(e?n.endingStart=this.zeroSlopeAtStart?fo:uo:n.endingStart=pc,t?n.endingEnd=this.zeroSlopeAtEnd?fo:uo:n.endingEnd=pc)}_scheduleFading(e,t,i){const n=this._mixer,s=n.time;let r=this._weightInterpolant;r===null&&(r=n._lendControlInterpolant(),this._weightInterpolant=r);const a=r.parameterPositions,l=r.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=i,this}}const yI=new Float32Array(1);class xI extends fs{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,s=n.length,r=e._propertyBindings,a=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==s;++u){const d=n[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,r[u]=p;else{if(p=r[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const g=t&&t._propertyBindings[u].binding.parsedPath;p=new jM(yt.create(i,f,g),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),r[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,n=e._clip.uuid,s=this._actionsByClip[n];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,n,i)}const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const n=this._actions,s=this._actionsByClip;let r=s[t];if(r===void 0)r={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=r;else{const a=r.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),r.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,r=this._actionsByClip,a=r[s],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete r[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_addInactiveBinding(e,t,i){const n=this._bindingsByRootAndName,s=this._bindings;let r=n[t];r===void 0&&(r={},n[t]=r),r[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,s=i.path,r=this._bindingsByRootAndName,a=r[n],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete r[n]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new ix(new Float32Array(2),new Float32Array(2),1,yI),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,s=t[n];e.__cacheIndex=n,t[n]=e,s.__cacheIndex=i,t[i]=s}clipAction(e,t,i){const n=t||this._root,s=n.uuid;let r=typeof e=="string"?Rc.findByName(n,e):e;const a=r!==null?r.uuid:e,l=this._actionsByClip[a];let c=null;if(i===void 0&&(r!==null?i=r.blendMode:i=Sf),l!==void 0){const u=l.actionByRoot[s];if(u!==void 0&&u.blendMode===i)return u;c=l.knownActions[0],r===null&&(r=c._clip)}if(r===null)return null;const h=new JM(this,r,t,i);return this._bindAction(h,c),this._addInactiveAction(h,a,s),h}existingAction(e,t){const i=t||this._root,n=i.uuid,s=typeof e=="string"?Rc.findByName(i,e):e,r=s?s.uuid:e,a=this._actionsByClip[r];return a!==void 0&&a.actionByRoot[n]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,s=Math.sign(e),r=this._accuIndex^=1;for(let c=0;c!==i;++c)t[c]._update(n,e,s,r);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(r);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,s=n[i];if(s!==void 0){const r=s.knownActions;for(let a=0,l=r.length;a!==l;++a){const c=r[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const r in i){const a=i[r].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const n=this._bindingsByRootAndName,s=n[t];if(s!==void 0)for(const r in s){const a=s[r];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}let _I=class QM{constructor(e){this.value=e}clone(){return new QM(this.value.clone===void 0?this.value:this.value.clone())}},vI=0,SI=class extends fs{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:vI++}),this.name="",this.usage=xc,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++){const s=Array.isArray(t[i])?t[i]:[t[i]];for(let r=0;r<s.length;r++)this.uniforms.push(s[r].clone())}return this}clone(){return new this.constructor().copy(this)}},Hd=class extends Yc{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}};class bI{constructor(e,t,i,n,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const P_=new $e;class MI{constructor(e,t,i=0,n=1/0){this.ray=new Uo(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Tf,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return P_.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(P_),this}intersectObject(e,t=!0,i=[]){return Ig(e,this,i,t),i.sort(I_),i}intersectObjects(e,t=!0,i=[]){for(let n=0,s=e.length;n<s;n++)Ig(e[n],this,i,t);return i.sort(I_),i}}function I_(o,e){return o.distance-e.distance}function Ig(o,e,t,i){let n=!0;if(o.layers.test(e.layers)&&o.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const s=o.children;for(let r=0,a=s.length;r<a;r++)Ig(s[r],e,t,!0)}}class Lg{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos($t(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class TI{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}class ux{constructor(e,t,i,n){ux.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const s=this.elements;return s[0]=e,s[2]=t,s[1]=i,s[3]=n,this}}const L_=new Y;class wI{constructor(e=new Y(1/0,1/0),t=new Y(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=L_.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,L_).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const D_=new R,jh=new R;class eT{constructor(e=new R,t=new R){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){D_.subVectors(e,this.start),jh.subVectors(this.end,this.start);const i=jh.dot(jh);let s=jh.dot(D_)/i;return t&&(s=$t(s,0,1)),s}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const U_=new R;class AI extends Rt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new ht,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,a=1,l=32;r<l;r++,a++){const c=r/l*Math.PI*2,h=a/l*Math.PI*2;n.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new Ie(n,3));const s=new Zi({fog:!1,toneMapped:!1});this.cone=new ps(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),U_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(U_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const hr=new R,Jh=new $e,nm=new $e;class EI extends ps{constructor(e){const t=tT(e),i=new ht,n=[],s=[],r=new Ae(0,0,1),a=new Ae(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),s.push(r.r,r.g,r.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new Ie(n,3)),i.setAttribute("color",new Ie(s,3));const l=new Zi({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");nm.copy(this.root.matrixWorld).invert();for(let s=0,r=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Jh.multiplyMatrices(nm,a.matrixWorld),hr.setFromMatrixPosition(Jh),n.setXYZ(r,hr.x,hr.y,hr.z),Jh.multiplyMatrices(nm,a.parent.matrixWorld),hr.setFromMatrixPosition(Jh),n.setXYZ(r+1,hr.x,hr.y,hr.z),r+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function tT(o){const e=[];o.isBone===!0&&e.push(o);for(let t=0;t<o.children.length;t++)e.push.apply(e,tT(o.children[t]));return e}class RI extends qt{constructor(e,t,i){const n=new Jy(t,4,2),s=new Ur({wireframe:!0,fog:!1,toneMapped:!1});super(n,s),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const CI=new R,F_=new Ae,B_=new Ae;class NI extends Rt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const n=new jc(t);n.rotateY(Math.PI*.5),this.material=new Ur({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=n.getAttribute("position"),r=new Float32Array(s.count*3);n.setAttribute("color",new xt(r,3)),this.add(new qt(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");F_.copy(this.light.color),B_.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){const s=i<n/2?F_:B_;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(CI.setFromMatrixPosition(this.light.matrixWorld).negate())}}class PI extends ps{constructor(e=10,t=10,i=4473924,n=8947848){i=new Ae(i),n=new Ae(n);const s=t/2,r=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=r){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const g=d===s?i:n;g.toArray(c,f),f+=3,g.toArray(c,f),f+=3,g.toArray(c,f),f+=3,g.toArray(c,f),f+=3}const h=new ht;h.setAttribute("position",new Ie(l,3)),h.setAttribute("color",new Ie(c,3));const u=new Zi({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class II extends ps{constructor(e=10,t=16,i=8,n=64,s=4473924,r=8947848){s=new Ae(s),r=new Ae(r);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const g=u&1?s:r;l.push(g.r,g.g,g.b),l.push(g.r,g.g,g.b)}for(let u=0;u<i;u++){const d=u&1?s:r,f=e-e/i*u;for(let p=0;p<n;p++){let g=p/n*(Math.PI*2),m=Math.sin(g)*f,y=Math.cos(g)*f;a.push(m,0,y),l.push(d.r,d.g,d.b),g=(p+1)/n*(Math.PI*2),m=Math.sin(g)*f,y=Math.cos(g)*f,a.push(m,0,y),l.push(d.r,d.g,d.b)}}const c=new ht;c.setAttribute("position",new Ie(a,3)),c.setAttribute("color",new Ie(l,3));const h=new Zi({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const O_=new R,Qh=new R,z_=new R;class LI extends Rt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let n=new ht;n.setAttribute("position",new Ie([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Zi({fog:!1,toneMapped:!1});this.lightPlane=new Cr(n,s),this.add(this.lightPlane),n=new ht,n.setAttribute("position",new Ie([0,0,0,0,0,1],3)),this.targetLine=new Cr(n,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),O_.setFromMatrixPosition(this.light.matrixWorld),Qh.setFromMatrixPosition(this.light.target.matrixWorld),z_.subVectors(Qh,O_),this.lightPlane.lookAt(Qh),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Qh),this.targetLine.scale.z=z_.length()}}const eu=new R,Wt=new wf;class DI extends ps{constructor(e){const t=new ht,i=new Zi({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],s=[],r={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,g){l(p),l(g)}function l(p){n.push(0,0,0),s.push(0,0,0),r[p]===void 0&&(r[p]=[]),r[p].push(n.length/3-1)}t.setAttribute("position",new Ie(n,3)),t.setAttribute("color",new Ie(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update();const c=new Ae(16755200),h=new Ae(16711680),u=new Ae(43775),d=new Ae(16777215),f=new Ae(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,i,n,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,n=1;Wt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Kt("c",t,e,Wt,0,0,-1),Kt("t",t,e,Wt,0,0,1),Kt("n1",t,e,Wt,-i,-n,-1),Kt("n2",t,e,Wt,i,-n,-1),Kt("n3",t,e,Wt,-i,n,-1),Kt("n4",t,e,Wt,i,n,-1),Kt("f1",t,e,Wt,-i,-n,1),Kt("f2",t,e,Wt,i,-n,1),Kt("f3",t,e,Wt,-i,n,1),Kt("f4",t,e,Wt,i,n,1),Kt("u1",t,e,Wt,i*.7,n*1.1,-1),Kt("u2",t,e,Wt,-i*.7,n*1.1,-1),Kt("u3",t,e,Wt,0,n*2,-1),Kt("cf1",t,e,Wt,-i,0,1),Kt("cf2",t,e,Wt,i,0,1),Kt("cf3",t,e,Wt,0,-n,1),Kt("cf4",t,e,Wt,0,n,1),Kt("cn1",t,e,Wt,-i,0,-1),Kt("cn2",t,e,Wt,i,0,-1),Kt("cn3",t,e,Wt,0,-n,-1),Kt("cn4",t,e,Wt,0,n,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Kt(o,e,t,i,n,s,r){eu.set(n,s,r).unproject(i);const a=e[o];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],eu.x,eu.y,eu.z)}}const tu=new mi;class UI extends ps{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(8*3),s=new ht;s.setIndex(new xt(i,1)),s.setAttribute("position",new xt(n,3)),super(s,new Zi({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&tu.setFromObject(this.object),tu.isEmpty())return;const t=tu.min,i=tu.max,n=this.geometry.attributes.position,s=n.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=t.x,s[4]=i.y,s[5]=i.z,s[6]=t.x,s[7]=t.y,s[8]=i.z,s[9]=i.x,s[10]=t.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=t.z,s[15]=t.x,s[16]=i.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=i.x,s[22]=t.y,s[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class FI extends ps{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ht;s.setIndex(new xt(i,1)),s.setAttribute("position",new Ie(n,3)),super(s,new Zi({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class BI extends Cr{constructor(e,t=1,i=16776960){const n=i,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],r=new ht;r.setAttribute("position",new Ie(s,3)),r.computeBoundingSphere(),super(r,new Zi({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new ht;l.setAttribute("position",new Ie(a,3)),l.computeBoundingSphere(),this.add(new qt(l,new Ur({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const k_=new R;let iu,sm;class OI extends Rt{constructor(e=new R(0,0,1),t=new R(0,0,0),i=1,n=16776960,s=i*.2,r=s*.2){super(),this.type="ArrowHelper",iu===void 0&&(iu=new ht,iu.setAttribute("position",new Ie([0,0,0,0,1,0],3)),sm=new al(0,.5,1,5,1),sm.translate(0,-.5,0)),this.position.copy(t),this.line=new Cr(iu,new Zi({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new qt(sm,new Ur({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,r)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{k_.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(k_,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class zI extends ps{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new ht;n.setAttribute("position",new Ie(t,3)),n.setAttribute("color",new Ie(i,3));const s=new Zi({vertexColors:!0,toneMapped:!1});super(n,s),this.type="AxesHelper"}setColors(e,t,i){const n=new Ae,s=this.geometry.attributes.color.array;return n.set(e),n.toArray(s,0),n.toArray(s,3),n.set(t),n.toArray(s,6),n.toArray(s,9),n.set(i),n.toArray(s,12),n.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class iT{constructor(){this.type="ShapePath",this.color=new Ae,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new bc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,s,r){return this.currentPath.bezierCurveTo(e,t,i,n,s,r),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(y){const x=[];for(let _=0,v=y.length;_<v;_++){const E=y[_],M=new _o;M.curves=E.curves,x.push(M)}return x}function i(y,x){const _=x.length;let v=!1;for(let E=_-1,M=0;M<_;E=M++){let b=x[E],A=x[M],L=A.x-b.x,S=A.y-b.y;if(Math.abs(S)>Number.EPSILON){if(S<0&&(b=x[M],L=-L,A=x[E],S=-S),y.y<b.y||y.y>A.y)continue;if(y.y===b.y){if(y.x===b.x)return!0}else{const T=S*(y.x-b.x)-L*(y.y-b.y);if(T===0)return!0;if(T<0)continue;v=!v}}else{if(y.y!==b.y)continue;if(A.x<=y.x&&y.x<=b.x||b.x<=y.x&&y.x<=A.x)return!0}}return v}const n=as.isClockWise,s=this.subPaths;if(s.length===0)return[];let r,a,l;const c=[];if(s.length===1)return a=s[0],l=new _o,l.curves=a.curves,c.push(l),c;let h=!n(s[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,g;d[p]=void 0,f[p]=[];for(let y=0,x=s.length;y<x;y++)a=s[y],g=a.getPoints(),r=n(g),r=e?!r:r,r?(!h&&d[p]&&p++,d[p]={s:new _o,p:g},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:g[0]});if(!d[0])return t(s);if(d.length>1){let y=!1,x=0;for(let _=0,v=d.length;_<v;_++)u[_]=[];for(let _=0,v=d.length;_<v;_++){const E=f[_];for(let M=0;M<E.length;M++){const b=E[M];let A=!0;for(let L=0;L<d.length;L++)i(b.p,d[L].p)&&(_!==L&&x++,A?(A=!1,u[L].push(b)):y=!0);A&&u[_].push(b)}}x>0&&y===!1&&(f=u)}let m;for(let y=0,x=d.length;y<x;y++){l=d[y].s,c.push(l),m=f[y];for(let _=0,v=m.length;_<v;_++)l.holes.push(m[_].h)}return c}}class $f extends fs{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class kI extends Ln{constructor(e=1,t=1,i=1,n={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...n,count:i}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ff}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ff);const j4=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:xb,AddEquation:Sr,AddOperation:pb,AdditiveAnimationBlendMode:Ly,AdditiveBlending:gg,AgXToneMapping:vb,AlphaFormat:Ey,AlwaysCompare:Bb,AlwaysDepth:ad,AlwaysStencilFunc:Sg,AmbientLight:$M,AnimationAction:JM,AnimationClip:Rc,AnimationLoader:H2,AnimationMixer:xI,AnimationObjectGroup:gI,AnimationUtils:z2,ArcCurve:gM,ArrayCamera:rM,ArrowHelper:OI,AttachedBindMode:_g,Audio:KM,AudioAnalyser:oI,AudioContext:ax,AudioListener:nI,AudioLoader:eI,AxesHelper:zI,BackSide:qi,BasicDepthPacking:Rb,BasicShadowMap:OA,BatchedMesh:fM,Bone:Wy,BooleanKeyframeTrack:Fo,Box2:wI,Box3:mi,Box3Helper:FI,BoxGeometry:Hc,BoxHelper:UI,BufferAttribute:xt,BufferGeometry:ht,BufferGeometryLoader:ZM,ByteType:Ty,Cache:Bs,Camera:wf,CameraHelper:DI,CanvasTexture:c2,CapsuleGeometry:If,CatmullRomCurve3:yM,CineonToneMapping:yb,CircleGeometry:Lf,ClampToEdgeWrapping:Cn,Clock:lx,Color:Ae,ColorKeyframeTrack:nx,ColorManagement:vt,CompressedArrayTexture:a2,CompressedCubeTexture:l2,CompressedTexture:Nf,CompressedTextureLoader:W2,ConeGeometry:Df,ConstantAlphaFactor:ub,ConstantColorFactor:cb,Controls:$f,CubeCamera:jb,CubeReflectionMapping:Xs,CubeRefractionMapping:Er,CubeTexture:$c,CubeTextureLoader:$2,CubeUVReflectionMapping:sl,CubicBezierCurve:qy,CubicBezierCurve3:xM,CubicInterpolant:BM,CullFaceBack:mg,CullFaceFront:qS,CullFaceFrontBack:BA,CullFaceNone:XS,Curve:Zn,CurvePath:vM,CustomBlending:ZS,CustomToneMapping:_b,CylinderGeometry:al,Cylindrical:TI,Data3DTexture:Fy,DataArrayTexture:Mf,DataTexture:os,DataTextureLoader:X2,DataUtils:Z1,DecrementStencilOp:ZA,DecrementWrapStencilOp:jA,DefaultLoadingManager:kM,DepthFormat:yo,DepthStencilFormat:Ao,DepthTexture:ky,DetachedBindMode:bb,DirectionalLight:WM,DirectionalLightHelper:LI,DiscreteInterpolant:OM,DisplayP3ColorSpace:bf,DodecahedronGeometry:Uf,DoubleSide:ts,DstAlphaFactor:sb,DstColorFactor:ob,DynamicCopyUsage:d1,DynamicDrawUsage:o1,DynamicReadUsage:c1,EdgesGeometry:SM,EllipseCurve:Pf,EqualCompare:Lb,EqualDepth:cd,EqualStencilFunc:t1,EquirectangularReflectionMapping:cc,EquirectangularRefractionMapping:hc,Euler:Xn,EventDispatcher:fs,ExtrudeGeometry:Kc,FileLoader:Ys,Float16BufferAttribute:tE,Float32BufferAttribute:Ie,FloatType:en,Fog:Rf,FogExp2:Ef,FramebufferTexture:o2,FrontSide:$s,Frustum:Xc,GLBufferAttribute:bI,GLSL1:p1,GLSL3:bg,GreaterCompare:Db,GreaterDepth:ud,GreaterEqualCompare:Fb,GreaterEqualDepth:hd,GreaterEqualStencilFunc:r1,GreaterStencilFunc:n1,GridHelper:PI,Group:Ia,HalfFloatType:Do,HemisphereLight:GM,HemisphereLightHelper:NI,IcosahedronGeometry:Bf,ImageBitmapLoader:Q2,ImageLoader:Cc,ImageUtils:Vb,IncrementStencilOp:YA,IncrementWrapStencilOp:KA,InstancedBufferAttribute:Rr,InstancedBufferGeometry:ox,InstancedInterleavedBuffer:Hd,InstancedMesh:dM,Int16BufferAttribute:Q1,Int32BufferAttribute:eE,Int8BufferAttribute:K1,IntType:mf,InterleavedBuffer:Yc,InterleavedBufferAttribute:Nn,Interpolant:Jc,InterpolateDiscrete:fc,InterpolateLinear:zd,InterpolateSmooth:Wu,InvertStencilOp:JA,KeepStencilOp:no,KeyframeTrack:Kn,LOD:hM,LatheGeometry:Zc,Layers:Tf,LessCompare:Ib,LessDepth:ld,LessEqualCompare:Dy,LessEqualDepth:To,LessEqualStencilFunc:i1,LessStencilFunc:e1,Light:Br,LightProbe:YM,Line:Cr,Line3:eT,LineBasicMaterial:Zi,LineCurve:Yy,LineCurve3:_M,LineDashedMaterial:DM,LineLoop:pM,LineSegments:ps,LinearDisplayP3ColorSpace:Vc,LinearFilter:ni,LinearInterpolant:ix,LinearMipMapLinearFilter:VA,LinearMipMapNearestFilter:GA,LinearMipmapLinearFilter:ns,LinearMipmapNearestFilter:Yl,LinearSRGBColorSpace:js,LinearToneMapping:mb,LinearTransfer:mc,Loader:ln,LoaderUtils:Pg,LoadingManager:sx,LoopOnce:Mb,LoopPingPong:wb,LoopRepeat:Tb,LuminanceAlphaFormat:Ny,LuminanceFormat:Cy,MOUSE:vn,Material:Oi,MaterialLoader:Wf,MathUtils:vc,Matrix2:ux,Matrix3:lt,Matrix4:$e,MaxEquation:QS,Mesh:qt,MeshBasicMaterial:Ur,MeshDepthMaterial:Gy,MeshDistanceMaterial:Vy,MeshLambertMaterial:IM,MeshMatcapMaterial:LM,MeshNormalMaterial:PM,MeshPhongMaterial:CM,MeshPhysicalMaterial:RM,MeshStandardMaterial:ex,MeshToonMaterial:NM,MinEquation:JS,MirroredRepeatWrapping:dc,MixOperation:fb,MultiplyBlending:xg,MultiplyOperation:kc,NearestFilter:pi,NearestMipMapLinearFilter:kA,NearestMipMapNearestFilter:zA,NearestMipmapLinearFilter:Ca,NearestMipmapNearestFilter:My,NeutralToneMapping:Sb,NeverCompare:Pb,NeverDepth:od,NeverStencilFunc:QA,NoBlending:rs,NoColorSpace:Ls,NoToneMapping:ks,NormalAnimationBlendMode:Sf,NormalBlending:go,NotEqualCompare:Ub,NotEqualDepth:dd,NotEqualStencilFunc:s1,NumberKeyframeTrack:Ac,Object3D:Rt,ObjectLoader:j2,ObjectSpaceNormalMap:Nb,OctahedronGeometry:jc,OneFactor:tb,OneMinusConstantAlphaFactor:db,OneMinusConstantColorFactor:hb,OneMinusDstAlphaFactor:rb,OneMinusDstColorFactor:ab,OneMinusSrcAlphaFactor:rd,OneMinusSrcColorFactor:nb,OrthographicCamera:qc,P3Primaries:yc,PCFShadowMap:by,PCFSoftShadowMap:YS,PMREMGenerator:Tg,Path:bc,PerspectiveCamera:Ai,Plane:Cs,PlaneGeometry:rl,PlaneHelper:BI,PointLight:HM,PointLightHelper:RI,Points:mM,PointsMaterial:$y,PolarGridHelper:II,PolyhedronGeometry:Fr,PositionalAudio:rI,PropertyBinding:yt,PropertyMixer:jM,QuadraticBezierCurve:Zy,QuadraticBezierCurve3:Ky,Quaternion:li,QuaternionKeyframeTrack:Qc,QuaternionLinearInterpolant:zM,RED_GREEN_RGTC2_Format:Bd,RED_RGTC1_Format:Iy,REVISION:ff,RGBADepthPacking:Cb,RGBAFormat:Xi,RGBAIntegerFormat:vf,RGBA_ASTC_10x10_Format:Pd,RGBA_ASTC_10x5_Format:Rd,RGBA_ASTC_10x6_Format:Cd,RGBA_ASTC_10x8_Format:Nd,RGBA_ASTC_12x10_Format:Id,RGBA_ASTC_12x12_Format:Ld,RGBA_ASTC_4x4_Format:vd,RGBA_ASTC_5x4_Format:Sd,RGBA_ASTC_5x5_Format:bd,RGBA_ASTC_6x5_Format:Md,RGBA_ASTC_6x6_Format:Td,RGBA_ASTC_8x5_Format:wd,RGBA_ASTC_8x6_Format:Ad,RGBA_ASTC_8x8_Format:Ed,RGBA_BPTC_Format:Ql,RGBA_ETC2_EAC_Format:_d,RGBA_PVRTC_2BPPV1_Format:gd,RGBA_PVRTC_4BPPV1_Format:md,RGBA_S3TC_DXT1_Format:Kl,RGBA_S3TC_DXT3_Format:jl,RGBA_S3TC_DXT5_Format:Jl,RGBDepthPacking:WA,RGBFormat:Ry,RGBIntegerFormat:HA,RGB_BPTC_SIGNED_Format:Dd,RGB_BPTC_UNSIGNED_Format:Ud,RGB_ETC1_Format:yd,RGB_ETC2_Format:xd,RGB_PVRTC_2BPPV1_Format:pd,RGB_PVRTC_4BPPV1_Format:fd,RGB_S3TC_DXT1_Format:Zl,RGDepthPacking:$A,RGFormat:Py,RGIntegerFormat:_f,RawShaderMaterial:EM,Ray:Uo,Raycaster:MI,Rec709Primaries:gc,RectAreaLight:XM,RedFormat:xf,RedIntegerFormat:Gc,ReinhardToneMapping:gb,RenderTarget:Wb,RepeatWrapping:uc,ReplaceStencilOp:qA,ReverseSubtractEquation:jS,RingGeometry:Of,SIGNED_RED_GREEN_RGTC2_Format:Od,SIGNED_RED_RGTC1_Format:Fd,SRGBColorSpace:En,SRGBTransfer:Dt,Scene:oM,ShaderChunk:rt,ShaderLib:Vi,ShaderMaterial:sn,ShadowMaterial:AM,Shape:_o,ShapeGeometry:zf,ShapePath:iT,ShapeUtils:as,ShortType:wy,Skeleton:Cf,SkeletonHelper:EI,SkinnedMesh:uM,Source:po,Sphere:gi,SphereGeometry:Jy,Spherical:Lg,SphericalHarmonics3:qM,SplineCurve:jy,SpotLight:VM,SpotLightHelper:AI,Sprite:cM,SpriteMaterial:Hy,SrcAlphaFactor:sd,SrcAlphaSaturateFactor:lb,SrcColorFactor:ib,StaticCopyUsage:u1,StaticDrawUsage:xc,StaticReadUsage:l1,StereoCamera:tI,StreamCopyUsage:f1,StreamDrawUsage:a1,StreamReadUsage:h1,StringKeyframeTrack:Bo,SubtractEquation:KS,SubtractiveBlending:yg,TOUCH:ho,TangentSpaceNormalMap:Dr,TetrahedronGeometry:kf,Texture:xi,TextureLoader:q2,TextureUtils:OP,TorusGeometry:Gf,TorusKnotGeometry:Vf,Triangle:br,TriangleFanDrawMode:vg,TriangleStripDrawMode:Eb,TrianglesDrawMode:Ab,TubeGeometry:Hf,UVMapping:pf,Uint16BufferAttribute:By,Uint32BufferAttribute:Oy,Uint8BufferAttribute:j1,Uint8ClampedBufferAttribute:J1,Uniform:_I,UniformsGroup:SI,UniformsLib:ye,UniformsUtils:Wc,UnsignedByteType:cs,UnsignedInt248Type:wo,UnsignedInt5999Type:Ay,UnsignedIntType:qs,UnsignedShort4444Type:gf,UnsignedShort5551Type:yf,UnsignedShortType:Za,VSMShadowMap:Qn,Vector2:Y,Vector3:R,Vector4:dt,VectorKeyframeTrack:Ec,VideoTexture:r2,WebGL3DRenderTarget:z1,WebGLArrayRenderTarget:O1,WebGLCoordinateSystem:ss,WebGLCubeRenderTarget:Jb,WebGLMultipleRenderTargets:kI,WebGLRenderTarget:Ln,WebGLRenderer:YP,WebGLUtils:sM,WebGPUCoordinateSystem:_c,WireframeGeometry:Qy,WrapAroundEnding:pc,ZeroCurvatureEnding:uo,ZeroFactor:eb,ZeroSlopeEnding:fo,ZeroStencilOp:XA,createCanvasElement:Gb},Symbol.toStringTag,{value:"Module"}));class J4 extends Rt{constructor(e=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new Y(.5,.5),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof Element&&t.element.parentNode!==null&&t.element.parentNode.removeChild(t.element)})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this.center=e.center,this}}const aa=new R,G_=new $e,V_=new $e,H_=new R,W_=new R;class Q4{constructor(e={}){const t=this;let i,n,s,r;const a={objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l,this.getSize=function(){return{width:i,height:n}},this.render=function(p,g){p.matrixWorldAutoUpdate===!0&&p.updateMatrixWorld(),g.parent===null&&g.matrixWorldAutoUpdate===!0&&g.updateMatrixWorld(),G_.copy(g.matrixWorldInverse),V_.multiplyMatrices(g.projectionMatrix,G_),h(p,p,g),f(p)},this.setSize=function(p,g){i=p,n=g,s=i/2,r=n/2,l.style.width=p+"px",l.style.height=g+"px"};function c(p){p.isCSS2DObject&&(p.element.style.display="none");for(let g=0,m=p.children.length;g<m;g++)c(p.children[g])}function h(p,g,m){if(p.visible===!1){c(p);return}if(p.isCSS2DObject){aa.setFromMatrixPosition(p.matrixWorld),aa.applyMatrix4(V_);const y=aa.z>=-1&&aa.z<=1&&p.layers.test(m.layers)===!0,x=p.element;x.style.display=y===!0?"":"none",y===!0&&(p.onBeforeRender(t,g,m),x.style.transform="translate("+-100*p.center.x+"%,"+-100*p.center.y+"%)translate("+(aa.x*s+s)+"px,"+(-aa.y*r+r)+"px)",x.parentNode!==l&&l.appendChild(x),p.onAfterRender(t,g,m));const _={distanceToCameraSquared:u(m,p)};a.objects.set(p,_)}for(let y=0,x=p.children.length;y<x;y++)h(p.children[y],g,m)}function u(p,g){return H_.setFromMatrixPosition(p.matrixWorld),W_.setFromMatrixPosition(g.matrixWorld),H_.distanceToSquared(W_)}function d(p){const g=[];return p.traverseVisible(function(m){m.isCSS2DObject&&g.push(m)}),g}function f(p){const g=d(p).sort(function(y,x){if(y.renderOrder!==x.renderOrder)return x.renderOrder-y.renderOrder;const _=a.objects.get(y).distanceToCameraSquared,v=a.objects.get(x).distanceToCameraSquared;return _-v}),m=g.length;for(let y=0,x=g.length;y<x;y++)g[y].element.style.zIndex=m-y}}}function GI(o,e,t=!0){if(!e||!e.isReady)throw new Error("BufferGeometryUtils: Initialized MikkTSpace library required.");if(!o.hasAttribute("position")||!o.hasAttribute("normal")||!o.hasAttribute("uv"))throw new Error('BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.');function i(r){if(r.normalized||r.isInterleavedBufferAttribute){const a=new Float32Array(r.count*r.itemSize);for(let l=0,c=0;l<r.count;l++)a[c++]=r.getX(l),a[c++]=r.getY(l),r.itemSize>2&&(a[c++]=r.getZ(l));return a}return r.array instanceof Float32Array?r.array:new Float32Array(r.array)}const n=o.index?o.toNonIndexed():o,s=e.generateTangents(i(n.attributes.position),i(n.attributes.normal),i(n.attributes.uv));if(t)for(let r=3;r<s.length;r+=4)s[r]*=-1;return n.setAttribute("tangent",new xt(s,4)),o!==n&&o.copy(n),o}function VI(o,e=!1){const t=o[0].index!==null,i=new Set(Object.keys(o[0].attributes)),n=new Set(Object.keys(o[0].morphAttributes)),s={},r={},a=o[0].morphTargetsRelative,l=new ht;let c=0;for(let h=0;h<o.length;++h){const u=o[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;s[f]===void 0&&(s[f]=[]),s[f].push(u.attributes[f]),d++}if(d!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(a!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,h),c+=f}}if(t){let h=0;const u=[];for(let d=0;d<o.length;++d){const f=o[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=o[d].attributes.position.count}l.setIndex(u)}for(const h in s){const u=Dg(s[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,u)}for(const h in r){const u=r[h][0].length;if(u===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let g=0;g<r[h].length;++g)f.push(r[h][g][d]);const p=Dg(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(p)}}return l}function Dg(o){let e,t,i,n=-1,s=0;for(let c=0;c<o.length;++c){const h=o[c];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=h.normalized),i!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(n===-1&&(n=h.gpuType),n!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;s+=h.count*t}const r=new e(s),a=new xt(r,t,i);let l=0;for(let c=0;c<o.length;++c){const h=o[c];if(h.isInterleavedBufferAttribute){const u=l/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const g=h.getComponent(d,p);a.setComponent(d+u,p,g)}}else r.set(h.array,l);l+=h.count*t}return n!==void 0&&(a.gpuType=n),a}function HI(o){return o.isInstancedInterleavedBufferAttribute||o.isInterleavedBufferAttribute?Wd(o):o.isInstancedBufferAttribute?new Rr().copy(o):new xt().copy(o)}function WI(o){let e,t=0,i=0;for(let c=0,h=o.length;c<h;++c){const u=o[c];if(e===void 0&&(e=u.array.constructor),e!==u.array.constructor)return console.error("AttributeBuffers of different types cannot be interleaved"),null;t+=u.array.length,i+=u.itemSize}const n=new Yc(new e(t),i);let s=0;const r=[],a=["getX","getY","getZ","getW"],l=["setX","setY","setZ","setW"];for(let c=0,h=o.length;c<h;c++){const u=o[c],d=u.itemSize,f=u.count,p=new Nn(n,d,s,u.normalized);r.push(p),s+=d;for(let g=0;g<f;g++)for(let m=0;m<d;m++)p[l[m]](g,u[a[m]](g))}return r}function Wd(o){const e=o.data.array.constructor,t=o.count,i=o.itemSize,n=o.normalized,s=new e(t*i);let r;o.isInstancedInterleavedBufferAttribute?r=new Rr(s,i,n,o.meshPerAttribute):r=new xt(s,i,n);for(let a=0;a<t;a++)r.setX(a,o.getX(a)),i>=2&&r.setY(a,o.getY(a)),i>=3&&r.setZ(a,o.getZ(a)),i>=4&&r.setW(a,o.getW(a));return r}function $I(o){const e=o.attributes,t=o.morphTargets,i=new Map;for(const n in e){const s=e[n];s.isInterleavedBufferAttribute&&(i.has(s)||i.set(s,Wd(s)),e[n]=i.get(s))}for(const n in t){const s=t[n];s.isInterleavedBufferAttribute&&(i.has(s)||i.set(s,Wd(s)),t[n]=i.get(s))}}function XI(o){let e=0;for(const i in o.attributes){const n=o.getAttribute(i);e+=n.count*n.itemSize*n.array.BYTES_PER_ELEMENT}const t=o.getIndex();return e+=t?t.count*t.itemSize*t.array.BYTES_PER_ELEMENT:0,e}function qI(o,e=1e-4){e=Math.max(e,Number.EPSILON);const t={},i=o.getIndex(),n=o.getAttribute("position"),s=i?i.count:n.count;let r=0;const a=Object.keys(o.attributes),l={},c={},h=[],u=["getX","getY","getZ","getW"],d=["setX","setY","setZ","setW"];for(let x=0,_=a.length;x<_;x++){const v=a[x],E=o.attributes[v];l[v]=new E.constructor(new E.array.constructor(E.count*E.itemSize),E.itemSize,E.normalized);const M=o.morphAttributes[v];M&&(c[v]||(c[v]=[]),M.forEach((b,A)=>{const L=new b.array.constructor(b.count*b.itemSize);c[v][A]=new b.constructor(L,b.itemSize,b.normalized)}))}const f=e*.5,p=Math.log10(1/e),g=Math.pow(10,p),m=f*g;for(let x=0;x<s;x++){const _=i?i.getX(x):x;let v="";for(let E=0,M=a.length;E<M;E++){const b=a[E],A=o.getAttribute(b),L=A.itemSize;for(let S=0;S<L;S++)v+=`${~~(A[u[S]](_)*g+m)},`}if(v in t)h.push(t[v]);else{for(let E=0,M=a.length;E<M;E++){const b=a[E],A=o.getAttribute(b),L=o.morphAttributes[b],S=A.itemSize,T=l[b],B=c[b];for(let F=0;F<S;F++){const G=u[F],j=d[F];if(T[j](r,A[G](_)),L)for(let k=0,ae=L.length;k<ae;k++)B[k][j](r,L[k][G](_))}}t[v]=r,h.push(r),r++}}const y=o.clone();for(const x in o.attributes){const _=l[x];if(y.setAttribute(x,new _.constructor(_.array.slice(0,r*_.itemSize),_.itemSize,_.normalized)),x in c)for(let v=0;v<c[x].length;v++){const E=c[x][v];y.morphAttributes[x][v]=new E.constructor(E.array.slice(0,r*E.itemSize),E.itemSize,E.normalized)}}return y.setIndex(h),y}function YI(o,e){if(e===Ab)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),o;if(e===vg||e===Eb){let t=o.getIndex();if(t===null){const r=[],a=o.getAttribute("position");if(a!==void 0){for(let l=0;l<a.count;l++)r.push(l);o.setIndex(r),t=o.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),o}const i=t.count-2,n=[];if(e===vg)for(let r=1;r<=i;r++)n.push(t.getX(0)),n.push(t.getX(r)),n.push(t.getX(r+1));else for(let r=0;r<i;r++)r%2===0?(n.push(t.getX(r)),n.push(t.getX(r+1)),n.push(t.getX(r+2))):(n.push(t.getX(r+2)),n.push(t.getX(r+1)),n.push(t.getX(r)));n.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=o.clone();return s.setIndex(n),s.clearGroups(),s}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),o}function ZI(o){const e=new R,t=new R,i=new R,n=new R,s=new R,r=new R,a=new R,l=new R,c=new R;function h(ce,ue,pe,Ze,Qe,J,le,Te){e.fromBufferAttribute(ue,Qe),t.fromBufferAttribute(ue,J),i.fromBufferAttribute(ue,le);const _e=ce.morphTargetInfluences;if(pe&&_e){a.set(0,0,0),l.set(0,0,0),c.set(0,0,0);for(let Ve=0,Xe=pe.length;Ve<Xe;Ve++){const We=_e[Ve],et=pe[Ve];We!==0&&(n.fromBufferAttribute(et,Qe),s.fromBufferAttribute(et,J),r.fromBufferAttribute(et,le),Ze?(a.addScaledVector(n,We),l.addScaledVector(s,We),c.addScaledVector(r,We)):(a.addScaledVector(n.sub(e),We),l.addScaledVector(s.sub(t),We),c.addScaledVector(r.sub(i),We)))}e.add(a),t.add(l),i.add(c)}ce.isSkinnedMesh&&(ce.applyBoneTransform(Qe,e),ce.applyBoneTransform(J,t),ce.applyBoneTransform(le,i)),Te[Qe*3+0]=e.x,Te[Qe*3+1]=e.y,Te[Qe*3+2]=e.z,Te[J*3+0]=t.x,Te[J*3+1]=t.y,Te[J*3+2]=t.z,Te[le*3+0]=i.x,Te[le*3+1]=i.y,Te[le*3+2]=i.z}const u=o.geometry,d=o.material;let f,p,g;const m=u.index,y=u.attributes.position,x=u.morphAttributes.position,_=u.morphTargetsRelative,v=u.attributes.normal,E=u.morphAttributes.position,M=u.groups,b=u.drawRange;let A,L,S,T,B,F,G;const j=new Float32Array(y.count*y.itemSize),k=new Float32Array(v.count*v.itemSize);if(m!==null)if(Array.isArray(d))for(A=0,S=M.length;A<S;A++)for(B=M[A],F=Math.max(B.start,b.start),G=Math.min(B.start+B.count,b.start+b.count),L=F,T=G;L<T;L+=3)f=m.getX(L),p=m.getX(L+1),g=m.getX(L+2),h(o,y,x,_,f,p,g,j),h(o,v,E,_,f,p,g,k);else for(F=Math.max(0,b.start),G=Math.min(m.count,b.start+b.count),A=F,S=G;A<S;A+=3)f=m.getX(A),p=m.getX(A+1),g=m.getX(A+2),h(o,y,x,_,f,p,g,j),h(o,v,E,_,f,p,g,k);else if(Array.isArray(d))for(A=0,S=M.length;A<S;A++)for(B=M[A],F=Math.max(B.start,b.start),G=Math.min(B.start+B.count,b.start+b.count),L=F,T=G;L<T;L+=3)f=L,p=L+1,g=L+2,h(o,y,x,_,f,p,g,j),h(o,v,E,_,f,p,g,k);else for(F=Math.max(0,b.start),G=Math.min(y.count,b.start+b.count),A=F,S=G;A<S;A+=3)f=A,p=A+1,g=A+2,h(o,y,x,_,f,p,g,j),h(o,v,E,_,f,p,g,k);const ae=new Ie(j,3),X=new Ie(k,3);return{positionAttribute:y,normalAttribute:v,morphedPositionAttribute:ae,morphedNormalAttribute:X}}function KI(o){if(o.groups.length===0)return console.warn("THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."),o;let e=o.groups;if(e=e.sort((r,a)=>r.materialIndex!==a.materialIndex?r.materialIndex-a.materialIndex:r.start-a.start),o.getIndex()===null){const r=o.getAttribute("position"),a=[];for(let l=0;l<r.count;l+=3)a.push(l,l+1,l+2);o.setIndex(a)}const t=o.getIndex(),i=[];for(let r=0;r<e.length;r++){const a=e[r],l=a.start,c=l+a.count;for(let h=l;h<c;h++)i.push(t.getX(h))}o.dispose(),o.setIndex(i);let n=0;for(let r=0;r<e.length;r++){const a=e[r];a.start=n,n+=a.count}let s=e[0];o.groups=[s];for(let r=1;r<e.length;r++){const a=e[r];s.materialIndex===a.materialIndex?s.count+=a.count:(s=a,o.groups.push(s))}return o}function jI(o,e=Math.PI/3){const t=Math.cos(e),i=(1+1e-10)*100,n=[new R,new R,new R],s=new R,r=new R,a=new R,l=new R;function c(g){const m=~~(g.x*i),y=~~(g.y*i),x=~~(g.z*i);return`${m},${y},${x}`}const h=o.index?o.toNonIndexed():o,u=h.attributes.position,d={};for(let g=0,m=u.count/3;g<m;g++){const y=3*g,x=n[0].fromBufferAttribute(u,y+0),_=n[1].fromBufferAttribute(u,y+1),v=n[2].fromBufferAttribute(u,y+2);s.subVectors(v,_),r.subVectors(x,_);const E=new R().crossVectors(s,r).normalize();for(let M=0;M<3;M++){const b=n[M],A=c(b);A in d||(d[A]=[]),d[A].push(E)}}const f=new Float32Array(u.count*3),p=new xt(f,3,!1);for(let g=0,m=u.count/3;g<m;g++){const y=3*g,x=n[0].fromBufferAttribute(u,y+0),_=n[1].fromBufferAttribute(u,y+1),v=n[2].fromBufferAttribute(u,y+2);s.subVectors(v,_),r.subVectors(x,_),a.crossVectors(s,r).normalize();for(let E=0;E<3;E++){const M=n[E],b=c(M),A=d[b];l.set(0,0,0);for(let L=0,S=A.length;L<S;L++){const T=A[L];a.dot(T)>t&&l.add(T)}l.normalize(),p.setXYZ(y+E,l.x,l.y,l.z)}}return h.setAttribute("normal",p),h}const eH=Object.freeze(Object.defineProperty({__proto__:null,computeMikkTSpaceTangents:GI,computeMorphedAttributes:ZI,deepCloneAttribute:HI,deinterleaveAttribute:Wd,deinterleaveGeometry:$I,estimateBytesUsed:XI,interleaveAttributes:WI,mergeAttributes:Dg,mergeGeometries:VI,mergeGroups:KI,mergeVertices:qI,toCreasedNormals:jI,toTrianglesDrawMode:YI},Symbol.toStringTag,{value:"Module"})),$_=new mi,nu=new R;class nT extends ox{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new Ie(e,3)),this.setAttribute("uv",new Ie(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Hd(t,6,1);return this.setAttribute("instanceStart",new Nn(i,3,0)),this.setAttribute("instanceEnd",new Nn(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Hd(t,6,1);return this.setAttribute("instanceColorStart",new Nn(i,3,0)),this.setAttribute("instanceColorEnd",new Nn(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new Qy(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mi);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),$_.setFromBufferAttribute(t),this.boundingBox.union($_))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gi),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let s=0,r=e.count;s<r;s++)nu.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(nu)),nu.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared(nu));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}ye.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Y(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};Vi.line={uniforms:Wc.merge([ye.common,ye.fog,ye.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class sT extends sn{constructor(e){super({type:"LineMaterial",uniforms:Wc.clone(Vi.line.uniforms),vertexShader:Vi.line.vertexShader,fragmentShader:Vi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const rm=new dt,X_=new R,q_=new R,vi=new dt,Si=new dt,jn=new dt,om=new R,am=new $e,Ti=new eT,Y_=new R,su=new mi,ru=new gi,Jn=new dt;let is,vo;function Z_(o,e,t){return Jn.set(0,0,-e,1).applyMatrix4(o.projectionMatrix),Jn.multiplyScalar(1/Jn.w),Jn.x=vo/t.width,Jn.y=vo/t.height,Jn.applyMatrix4(o.projectionMatrixInverse),Jn.multiplyScalar(1/Jn.w),Math.abs(Math.max(Jn.x,Jn.y))}function JI(o,e){const t=o.matrixWorld,i=o.geometry,n=i.attributes.instanceStart,s=i.attributes.instanceEnd,r=Math.min(i.instanceCount,n.count);for(let a=0,l=r;a<l;a++){Ti.start.fromBufferAttribute(n,a),Ti.end.fromBufferAttribute(s,a),Ti.applyMatrix4(t);const c=new R,h=new R;is.distanceSqToSegment(Ti.start,Ti.end,h,c),h.distanceTo(c)<vo*.5&&e.push({point:h,pointOnLine:c,distance:is.origin.distanceTo(h),object:o,face:null,faceIndex:a,uv:null,uv1:null})}}function QI(o,e,t){const i=e.projectionMatrix,s=o.material.resolution,r=o.matrixWorld,a=o.geometry,l=a.attributes.instanceStart,c=a.attributes.instanceEnd,h=Math.min(a.instanceCount,l.count),u=-e.near;is.at(1,jn),jn.w=1,jn.applyMatrix4(e.matrixWorldInverse),jn.applyMatrix4(i),jn.multiplyScalar(1/jn.w),jn.x*=s.x/2,jn.y*=s.y/2,jn.z=0,om.copy(jn),am.multiplyMatrices(e.matrixWorldInverse,r);for(let d=0,f=h;d<f;d++){if(vi.fromBufferAttribute(l,d),Si.fromBufferAttribute(c,d),vi.w=1,Si.w=1,vi.applyMatrix4(am),Si.applyMatrix4(am),vi.z>u&&Si.z>u)continue;if(vi.z>u){const _=vi.z-Si.z,v=(vi.z-u)/_;vi.lerp(Si,v)}else if(Si.z>u){const _=Si.z-vi.z,v=(Si.z-u)/_;Si.lerp(vi,v)}vi.applyMatrix4(i),Si.applyMatrix4(i),vi.multiplyScalar(1/vi.w),Si.multiplyScalar(1/Si.w),vi.x*=s.x/2,vi.y*=s.y/2,Si.x*=s.x/2,Si.y*=s.y/2,Ti.start.copy(vi),Ti.start.z=0,Ti.end.copy(Si),Ti.end.z=0;const g=Ti.closestPointToPointParameter(om,!0);Ti.at(g,Y_);const m=vc.lerp(vi.z,Si.z,g),y=m>=-1&&m<=1,x=om.distanceTo(Y_)<vo*.5;if(y&&x){Ti.start.fromBufferAttribute(l,d),Ti.end.fromBufferAttribute(c,d),Ti.start.applyMatrix4(r),Ti.end.applyMatrix4(r);const _=new R,v=new R;is.distanceSqToSegment(Ti.start,Ti.end,v,_),t.push({point:v,pointOnLine:_,distance:is.origin.distanceTo(v),object:o,face:null,faceIndex:d,uv:null,uv1:null})}}}class eL extends qt{constructor(e=new nT,t=new sT({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let r=0,a=0,l=t.count;r<l;r++,a+=2)X_.fromBufferAttribute(t,r),q_.fromBufferAttribute(i,r),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+X_.distanceTo(q_);const s=new Hd(n,2,1);return e.setAttribute("instanceDistanceStart",new Nn(s,1,0)),e.setAttribute("instanceDistanceEnd",new Nn(s,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=e.params.Line2!==void 0&&e.params.Line2.threshold||0;is=e.ray;const r=this.matrixWorld,a=this.geometry,l=this.material;vo=l.linewidth+s,a.boundingSphere===null&&a.computeBoundingSphere(),ru.copy(a.boundingSphere).applyMatrix4(r);let c;if(i)c=vo*.5;else{const u=Math.max(n.near,ru.distanceToPoint(is.origin));c=Z_(n,u,l.resolution)}if(ru.radius+=c,is.intersectsSphere(ru)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),su.copy(a.boundingBox).applyMatrix4(r);let h;if(i)h=vo*.5;else{const u=Math.max(n.near,su.distanceToPoint(is.origin));h=Z_(n,u,l.resolution)}su.expandByScalar(h),is.intersectsBox(su)!==!1&&(i?JI(this,t):QI(this,n,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(rm),this.material.uniforms.resolution.value.set(rm.z,rm.w))}}class tL extends nT{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class tH extends eL{constructor(e=new tL,t=new sT({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}class iH extends Kc{constructor(e,t={}){const i=t.font;if(i===void 0)super();else{const n=i.generateShapes(e,t.size);t.depth===void 0&&t.height!==void 0&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),t.depth=t.depth!==void 0?t.depth:t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(n,t)}this.type="TextGeometry"}}class nH{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],n=iL(e,t,this.data);for(let s=0,r=n.length;s<r;s++)i.push(...n[s].toShapes());return i}}function iL(o,e,t){const i=Array.from(o),n=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*n,r=[];let a=0,l=0;for(let c=0;c<i.length;c++){const h=i[c];if(h===`
`)a=0,l-=s;else{const u=nL(h,n,a,l,t);a+=u.offsetX,r.push(u.path)}}return r}function nL(o,e,t,i,n){const s=n.glyphs[o]||n.glyphs["?"];if(!s){console.error('THREE.Font: character "'+o+'" does not exists in font family '+n.familyName+".");return}const r=new iT;let a,l,c,h,u,d,f,p;if(s.o){const g=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,y=g.length;m<y;)switch(g[m++]){case"m":a=g[m++]*e+t,l=g[m++]*e+i,r.moveTo(a,l);break;case"l":a=g[m++]*e+t,l=g[m++]*e+i,r.lineTo(a,l);break;case"q":c=g[m++]*e+t,h=g[m++]*e+i,u=g[m++]*e+t,d=g[m++]*e+i,r.quadraticCurveTo(u,d,c,h);break;case"b":c=g[m++]*e+t,h=g[m++]*e+i,u=g[m++]*e+t,d=g[m++]*e+i,f=g[m++]*e+t,p=g[m++]*e+i,r.bezierCurveTo(u,d,f,p,c,h);break}}return{offsetX:s.ha*e,path:r}}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Xf="169",sL=0,rL=1,oL=2,aL=1,ou=3,Nc=0,Js=1,$d=2,Ja=0,Ar=1,Xd=2,qd=3,Yd=4,rT=5,Mr=100,oT=101,aT=102,lL=103,cL=104,lT=200,cT=201,hT=202,uT=203,Zd=204,Kd=205,dT=206,fT=207,pT=208,mT=209,gT=210,yT=0,xT=1,_T=2,jd=3,vT=4,ST=5,bT=6,MT=7,qf=0,hL=1,uL=2,Va=0,dL=1,fL=2,pL=3,mL=4,gL=6,yL=7,TT=300,Ro=301,Qa=302,eh=303,th=304,Ug=306,Jd=1e3,Da=1001,Qd=1002,Ri=1003,Fg=1004,Ha=1005,rn=1006,Bg=1007,Gs=1008,Os=1009,nc=1010,sc=1011,Ua=1012,Hi=1013,wi=1014,_n=1015,Vs=1016,xL=1017,_L=1018,ih=1020,wT=35902,vL=1021,dx=1022,ll=1023,SL=1024,bL=1025,So=1026,el=1027,fx=1028,px=1029,Pc=1030,mx=1031,ML=1032,gx=1033,lm=33776,Zu=33777,Ku=33778,ju=33779,K_=35840,j_=35841,J_=35842,Q_=35843,ev=36196,Og=37492,zg=37496,kg=37808,Gg=37809,Vg=37810,Hg=37811,Wg=37812,$g=37813,Xg=37814,qg=37815,Yg=37816,Zg=37817,Kg=37818,jg=37819,Jg=37820,Qg=37821,cm=36492,TL=36283,tv=36284,iv=36285,nv=36286,Nr=0,wL=1,Co="",He="srgb",Pn="srgb-linear",AL="display-p3",AT="display-p3-linear",ey="linear",sv="srgb",rv="rec709",ov="p3",EL=0,ro=7680,RL=7681,CL=7682,NL=7683,PL=34055,IL=34056,LL=5386,DL=512,UL=513,FL=514,BL=515,OL=516,zL=517,kL=518,ty=519,ET=512,yx=513,RT=514,CT=515,NT=516,PT=517,IT=518,LT=519,ef=35044,Fa=35048,Wn=2e3,No=2001;class cl{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const n=this._listeners[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,r=n.length;s<r;s++)n[s].call(this,e);e.target=null}}}const Ii=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let av=1234567;const rc=Math.PI/180,Ic=180/Math.PI;function Hs(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Ii[o&255]+Ii[o>>8&255]+Ii[o>>16&255]+Ii[o>>24&255]+"-"+Ii[e&255]+Ii[e>>8&255]+"-"+Ii[e>>16&15|64]+Ii[e>>24&255]+"-"+Ii[t&63|128]+Ii[t>>8&255]+"-"+Ii[t>>16&255]+Ii[t>>24&255]+Ii[i&255]+Ii[i>>8&255]+Ii[i>>16&255]+Ii[i>>24&255]).toLowerCase()}function Ei(o,e,t){return Math.max(e,Math.min(t,o))}function xx(o,e){return(o%e+e)%e}function GL(o,e,t,i,n){return i+(o-e)*(n-i)/(t-e)}function VL(o,e,t){return o!==e?(t-o)/(e-o):0}function oc(o,e,t){return(1-t)*o+t*e}function HL(o,e,t,i){return oc(o,e,1-Math.exp(-t*i))}function WL(o,e=1){return e-Math.abs(xx(o,e*2)-e)}function $L(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*(3-2*o))}function XL(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*o*(o*(o*6-15)+10))}function qL(o,e){return o+Math.floor(Math.random()*(e-o+1))}function YL(o,e){return o+Math.random()*(e-o)}function ZL(o){return o*(.5-Math.random())}function KL(o){o!==void 0&&(av=o);let e=av+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function jL(o){return o*rc}function JL(o){return o*Ic}function QL(o){return(o&o-1)===0&&o!==0}function eD(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function tD(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}function iD(o,e,t,i,n){const s=Math.cos,r=Math.sin,a=s(t/2),l=r(t/2),c=s((e+i)/2),h=r((e+i)/2),u=s((e-i)/2),d=r((e-i)/2),f=s((i-e)/2),p=r((i-e)/2);switch(n){case"XYX":o.set(a*h,l*u,l*d,a*c);break;case"YZY":o.set(l*d,a*h,l*u,a*c);break;case"ZXZ":o.set(l*u,l*d,a*h,a*c);break;case"XZX":o.set(a*h,l*p,l*f,a*c);break;case"YXY":o.set(l*f,a*h,l*p,a*c);break;case"ZYZ":o.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function $i(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return o/4294967295;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int32Array:return Math.max(o/2147483647,-1);case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}function nt(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return Math.round(o*4294967295);case Uint16Array:return Math.round(o*65535);case Uint8Array:return Math.round(o*255);case Int32Array:return Math.round(o*2147483647);case Int16Array:return Math.round(o*32767);case Int8Array:return Math.round(o*127);default:throw new Error("Invalid component type.")}}const nD={DEG2RAD:rc,RAD2DEG:Ic,generateUUID:Hs,clamp:Ei,euclideanModulo:xx,mapLinear:GL,inverseLerp:VL,lerp:oc,damp:HL,pingpong:WL,smoothstep:$L,smootherstep:XL,randInt:qL,randFloat:YL,randFloatSpread:ZL,seededRandom:KL,degToRad:jL,radToDeg:JL,isPowerOfTwo:QL,ceilPowerOfTwo:eD,floorPowerOfTwo:tD,setQuaternionFromProperEuler:iD,normalize:nt,denormalize:$i};class mt{constructor(e=0,t=0){mt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ei(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*i-r*n+e.x,this.y=s*n+r*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Mn{constructor(e,t,i,n,s,r,a,l,c){Mn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c)}set(e,t,i,n,s,r,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],g=n[0],m=n[3],y=n[6],x=n[1],_=n[4],v=n[7],E=n[2],M=n[5],b=n[8];return s[0]=r*g+a*x+l*E,s[3]=r*m+a*_+l*M,s[6]=r*y+a*v+l*b,s[1]=c*g+h*x+u*E,s[4]=c*m+h*_+u*M,s[7]=c*y+h*v+u*b,s[2]=d*g+f*x+p*E,s[5]=d*m+f*_+p*M,s[8]=d*y+f*v+p*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*r*h-t*a*c-i*s*h+i*a*l+n*s*c-n*r*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*r-a*c,d=a*l-h*s,f=c*s-r*l,p=t*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=u*g,e[1]=(n*c-h*i)*g,e[2]=(a*i-n*r)*g,e[3]=d*g,e[4]=(h*t-n*l)*g,e[5]=(n*s-a*t)*g,e[6]=f*g,e[7]=(i*l-c*t)*g,e[8]=(r*t-i*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,r,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*r+c*a)+r+e,-n*c,n*l,-n*(-c*r+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(hm.makeScale(e,t)),this}rotate(e){return this.premultiply(hm.makeRotation(-e)),this}translate(e,t){return this.premultiply(hm.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const hm=new Mn;function sD(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}function iy(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function rD(){const o=iy("canvas");return o.style.display="block",o}const lv={};function oD(o){o in lv||(lv[o]=!0,console.warn(o))}const cv=new Mn().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),hv=new Mn().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Rl={[Pn]:{transfer:ey,primaries:rv,luminanceCoefficients:[.2126,.7152,.0722],toReference:o=>o,fromReference:o=>o},[He]:{transfer:sv,primaries:rv,luminanceCoefficients:[.2126,.7152,.0722],toReference:o=>o.convertSRGBToLinear(),fromReference:o=>o.convertLinearToSRGB()},[AT]:{transfer:ey,primaries:ov,luminanceCoefficients:[.2289,.6917,.0793],toReference:o=>o.applyMatrix3(hv),fromReference:o=>o.applyMatrix3(cv)},[AL]:{transfer:sv,primaries:ov,luminanceCoefficients:[.2289,.6917,.0793],toReference:o=>o.convertSRGBToLinear().applyMatrix3(hv),fromReference:o=>o.applyMatrix3(cv).convertLinearToSRGB()}},aD=new Set([Pn,AT]),yn={enabled:!0,_workingColorSpace:Pn,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(o){if(!aD.has(o))throw new Error(`Unsupported working color space, "${o}".`);this._workingColorSpace=o},convert:function(o,e,t){if(this.enabled===!1||e===t||!e||!t)return o;const i=Rl[e].toReference,n=Rl[t].fromReference;return n(i(o))},fromWorkingColorSpace:function(o,e){return this.convert(o,this._workingColorSpace,e)},toWorkingColorSpace:function(o,e){return this.convert(o,e,this._workingColorSpace)},getPrimaries:function(o){return Rl[o].primaries},getTransfer:function(o){return o===Co?ey:Rl[o].transfer},getLuminanceCoefficients:function(o,e=this._workingColorSpace){return o.fromArray(Rl[e].luminanceCoefficients)}};function Wa(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function um(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}let la;class lD{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{la===void 0&&(la=iy("canvas")),la.width=e.width,la.height=e.height;const i=la.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=la}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=iy("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let r=0;r<s.length;r++)s[r]=Wa(s[r]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Wa(t[i]/255)*255):t[i]=Wa(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let cD=0;class DT{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:cD++}),this.uuid=Hs(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let r=0,a=n.length;r<a;r++)n[r].isDataTexture?s.push(dm(n[r].image)):s.push(dm(n[r]))}else s=dm(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function dm(o){return typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap?lD.getDataURL(o):o.data?{data:Array.from(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let hD=0;class Yi extends cl{constructor(e=Yi.DEFAULT_IMAGE,t=Yi.DEFAULT_MAPPING,i=Da,n=Da,s=rn,r=Gs,a=ll,l=Os,c=Yi.DEFAULT_ANISOTROPY,h=Co){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:hD++}),this.uuid=Hs(),this.name="",this.source=new DT(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=r,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new mt(0,0),this.repeat=new mt(1,1),this.center=new mt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Mn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==TT)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Jd:e.x=e.x-Math.floor(e.x);break;case Da:e.x=e.x<0?0:1;break;case Qd:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Jd:e.y=e.y-Math.floor(e.y);break;case Da:e.y=e.y<0?0:1;break;case Qd:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Yi.DEFAULT_IMAGE=null;Yi.DEFAULT_MAPPING=TT;Yi.DEFAULT_ANISOTROPY=1;class At{constructor(e=0,t=0,i=0,n=1){At.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n+r[12]*s,this.y=r[1]*t+r[5]*i+r[9]*n+r[13]*s,this.z=r[2]*t+r[6]*i+r[10]*n+r[14]*s,this.w=r[3]*t+r[7]*i+r[11]*n+r[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],g=l[2],m=l[6],y=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,v=(f+1)/2,E=(y+1)/2,M=(h+d)/4,b=(u+g)/4,A=(p+m)/4;return _>v&&_>E?_<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(_),n=M/i,s=b/i):v>E?v<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(v),i=M/n,s=A/n):E<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(E),i=b/s,n=A/s),this.set(i,n,s,t),this}let x=Math.sqrt((m-p)*(m-p)+(u-g)*(u-g)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(u-g)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+y-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class hl extends cl{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new At(0,0,e,t),this.scissorTest=!1,this.viewport=new At(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:rn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new Yi(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const r=i.count;for(let a=0;a<r;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,n=e.textures.length;i<n;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new DT(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class uD extends hl{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class dD extends Yi{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Ri,this.minFilter=Ri,this.wrapR=Da,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class nh{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,r,a){let l=i[n+0],c=i[n+1],h=i[n+2],u=i[n+3];const d=s[r+0],f=s[r+1],p=s[r+2],g=s[r+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=g;return}if(u!==g||l!==d||c!==f||h!==p){let m=1-a;const y=l*d+c*f+h*p+u*g,x=y>=0?1:-1,_=1-y*y;if(_>Number.EPSILON){const E=Math.sqrt(_),M=Math.atan2(E,y*x);m=Math.sin(m*M)/E,a=Math.sin(a*M)/E}const v=a*x;if(l=l*m+d*v,c=c*m+f*v,h=h*m+p*v,u=u*m+g*v,m===1-a){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,s,r){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],u=s[r],d=s[r+1],f=s[r+2],p=s[r+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,r=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),u=a(s/2),d=l(i/2),f=l(n/2),p=l(s/2);switch(r){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],r=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(r-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(n+r)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-c)/f,this._x=(n+r)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(r-n)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ei(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,r=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+r*a+n*c-s*l,this._y=n*h+r*l+s*a-i*c,this._z=s*h+r*c+i*l-n*a,this._w=r*h-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,r=this._w;let a=r*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=r*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class V{constructor(e=0,t=0,i=0){V.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(uv.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(uv.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,r=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*r,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*r,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*r,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,r=e.y,a=e.z,l=e.w,c=2*(r*n-a*i),h=2*(a*t-s*n),u=2*(s*i-r*t);return this.x=t+l*c+r*u-a*h,this.y=i+l*h+a*c-s*u,this.z=n+l*u+s*h-r*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,r=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*r-i*l,this.z=i*a-n*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return fm.copy(this).projectOnVector(e),this.sub(fm)}reflect(e){return this.sub(fm.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ei(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const fm=new V,uv=new nh;class sh{constructor(e=new V(1/0,1/0,1/0),t=new V(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(On.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(On.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=On.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,a=s.count;r<a;r++)e.isMesh===!0?e.getVertexPosition(r,On):On.fromBufferAttribute(s,r),On.applyMatrix4(e.matrixWorld),this.expandByPoint(On);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),au.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),au.copy(i.boundingBox)),au.applyMatrix4(e.matrixWorld),this.union(au)}const n=e.children;for(let s=0,r=n.length;s<r;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,On),On.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Cl),lu.subVectors(this.max,Cl),ca.subVectors(e.a,Cl),ha.subVectors(e.b,Cl),ua.subVectors(e.c,Cl),ur.subVectors(ha,ca),dr.subVectors(ua,ha),Jr.subVectors(ca,ua);let t=[0,-ur.z,ur.y,0,-dr.z,dr.y,0,-Jr.z,Jr.y,ur.z,0,-ur.x,dr.z,0,-dr.x,Jr.z,0,-Jr.x,-ur.y,ur.x,0,-dr.y,dr.x,0,-Jr.y,Jr.x,0];return!pm(t,ca,ha,ua,lu)||(t=[1,0,0,0,1,0,0,0,1],!pm(t,ca,ha,ua,lu))?!1:(cu.crossVectors(ur,dr),t=[cu.x,cu.y,cu.z],pm(t,ca,ha,ua,lu))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,On).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(On).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ms[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ms[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ms[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ms[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ms[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ms[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ms[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ms[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ms),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ms=[new V,new V,new V,new V,new V,new V,new V,new V],On=new V,au=new sh,ca=new V,ha=new V,ua=new V,ur=new V,dr=new V,Jr=new V,Cl=new V,lu=new V,cu=new V,Qr=new V;function pm(o,e,t,i,n){for(let s=0,r=o.length-3;s<=r;s+=3){Qr.fromArray(o,s);const a=n.x*Math.abs(Qr.x)+n.y*Math.abs(Qr.y)+n.z*Math.abs(Qr.z),l=e.dot(Qr),c=t.dot(Qr),h=i.dot(Qr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const fD=new sh,Nl=new V,mm=new V;class _x{constructor(e=new V,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):fD.setFromPoints(e).getCenter(i);let n=0;for(let s=0,r=e.length;s<r;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Nl.subVectors(e,this.center);const t=Nl.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(Nl,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(mm.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Nl.copy(e.center).add(mm)),this.expandByPoint(Nl.copy(e.center).sub(mm))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ts=new V,gm=new V,hu=new V,fr=new V,ym=new V,uu=new V,xm=new V;class pD{constructor(e=new V,t=new V(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ts)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ts.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ts.copy(this.origin).addScaledVector(this.direction,t),Ts.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){gm.copy(e).add(t).multiplyScalar(.5),hu.copy(t).sub(e).normalize(),fr.copy(this.origin).sub(gm);const s=e.distanceTo(t)*.5,r=-this.direction.dot(hu),a=fr.dot(this.direction),l=-fr.dot(hu),c=fr.lengthSq(),h=Math.abs(1-r*r);let u,d,f,p;if(h>0)if(u=r*l-a,d=r*a-l,p=s*h,u>=0)if(d>=-p)if(d<=p){const g=1/h;u*=g,d*=g,f=u*(u+r*d+2*a)+d*(r*u+d+2*l)+c}else d=s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-r*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(r*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=r>0?-s:s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(gm).addScaledVector(hu,d),f}intersectSphere(e,t){Ts.subVectors(e.center,this.origin);const i=Ts.dot(this.direction),n=Ts.dot(Ts)-i*i,s=e.radius*e.radius;if(n>s)return null;const r=Math.sqrt(s-n),a=i-r,l=i+r;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,r,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),h>=0?(s=(e.min.y-d.y)*h,r=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,r=(e.min.y-d.y)*h),i>r||s>n||((s>i||isNaN(i))&&(i=s),(r<n||isNaN(n))&&(n=r),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Ts)!==null}intersectTriangle(e,t,i,n,s){ym.subVectors(t,e),uu.subVectors(i,e),xm.crossVectors(ym,uu);let r=this.direction.dot(xm),a;if(r>0){if(n)return null;a=1}else if(r<0)a=-1,r=-r;else return null;fr.subVectors(this.origin,e);const l=a*this.direction.dot(uu.crossVectors(fr,uu));if(l<0)return null;const c=a*this.direction.dot(ym.cross(fr));if(c<0||l+c>r)return null;const h=-a*fr.dot(xm);return h<0?null:this.at(h/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Vt{constructor(e,t,i,n,s,r,a,l,c,h,u,d,f,p,g,m){Vt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,g,m)}set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,g,m){const y=this.elements;return y[0]=e,y[4]=t,y[8]=i,y[12]=n,y[1]=s,y[5]=r,y[9]=a,y[13]=l,y[2]=c,y[6]=h,y[10]=u,y[14]=d,y[3]=f,y[7]=p,y[11]=g,y[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Vt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/da.setFromMatrixColumn(e,0).length(),s=1/da.setFromMatrixColumn(e,1).length(),r=1/da.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*r,t[9]=i[9]*r,t[10]=i[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,r=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const d=r*h,f=r*u,p=a*h,g=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-g*c,t[9]=-a*l,t[2]=g-d*c,t[6]=p+f*c,t[10]=r*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,g=c*u;t[0]=d+g*a,t[4]=p*a-f,t[8]=r*c,t[1]=r*u,t[5]=r*h,t[9]=-a,t[2]=f*a-p,t[6]=g+d*a,t[10]=r*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,g=c*u;t[0]=d-g*a,t[4]=-r*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=r*h,t[9]=g-d*a,t[2]=-r*c,t[6]=a,t[10]=r*l}else if(e.order==="ZYX"){const d=r*h,f=r*u,p=a*h,g=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+g,t[1]=l*u,t[5]=g*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=r*l}else if(e.order==="YZX"){const d=r*l,f=r*c,p=a*l,g=a*c;t[0]=l*h,t[4]=g-d*u,t[8]=p*u+f,t[1]=u,t[5]=r*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-g*u}else if(e.order==="XZY"){const d=r*l,f=r*c,p=a*l,g=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+g,t[5]=r*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=g*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(mD,e,gD)}lookAt(e,t,i){const n=this.elements;return fn.subVectors(e,t),fn.lengthSq()===0&&(fn.z=1),fn.normalize(),pr.crossVectors(i,fn),pr.lengthSq()===0&&(Math.abs(i.z)===1?fn.x+=1e-4:fn.z+=1e-4,fn.normalize(),pr.crossVectors(i,fn)),pr.normalize(),du.crossVectors(fn,pr),n[0]=pr.x,n[4]=du.x,n[8]=fn.x,n[1]=pr.y,n[5]=du.y,n[9]=fn.y,n[2]=pr.z,n[6]=du.z,n[10]=fn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],g=i[6],m=i[10],y=i[14],x=i[3],_=i[7],v=i[11],E=i[15],M=n[0],b=n[4],A=n[8],L=n[12],S=n[1],T=n[5],B=n[9],F=n[13],G=n[2],j=n[6],k=n[10],ae=n[14],X=n[3],ce=n[7],ue=n[11],pe=n[15];return s[0]=r*M+a*S+l*G+c*X,s[4]=r*b+a*T+l*j+c*ce,s[8]=r*A+a*B+l*k+c*ue,s[12]=r*L+a*F+l*ae+c*pe,s[1]=h*M+u*S+d*G+f*X,s[5]=h*b+u*T+d*j+f*ce,s[9]=h*A+u*B+d*k+f*ue,s[13]=h*L+u*F+d*ae+f*pe,s[2]=p*M+g*S+m*G+y*X,s[6]=p*b+g*T+m*j+y*ce,s[10]=p*A+g*B+m*k+y*ue,s[14]=p*L+g*F+m*ae+y*pe,s[3]=x*M+_*S+v*G+E*X,s[7]=x*b+_*T+v*j+E*ce,s[11]=x*A+_*B+v*k+E*ue,s[15]=x*L+_*F+v*ae+E*pe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],r=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],g=e[7],m=e[11],y=e[15];return p*(+s*l*u-n*c*u-s*a*d+i*c*d+n*a*f-i*l*f)+g*(+t*l*f-t*c*d+s*r*d-n*r*f+n*c*h-s*l*h)+m*(+t*c*u-t*a*f-s*r*u+i*r*f+s*a*h-i*c*h)+y*(-n*a*h-t*l*u+t*a*d+n*r*u-i*r*d+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],g=e[13],m=e[14],y=e[15],x=u*m*c-g*d*c+g*l*f-a*m*f-u*l*y+a*d*y,_=p*d*c-h*m*c-p*l*f+r*m*f+h*l*y-r*d*y,v=h*g*c-p*u*c+p*a*f-r*g*f-h*a*y+r*u*y,E=p*u*l-h*g*l-p*a*d+r*g*d+h*a*m-r*u*m,M=t*x+i*_+n*v+s*E;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;return e[0]=x*b,e[1]=(g*d*s-u*m*s-g*n*f+i*m*f+u*n*y-i*d*y)*b,e[2]=(a*m*s-g*l*s+g*n*c-i*m*c-a*n*y+i*l*y)*b,e[3]=(u*l*s-a*d*s-u*n*c+i*d*c+a*n*f-i*l*f)*b,e[4]=_*b,e[5]=(h*m*s-p*d*s+p*n*f-t*m*f-h*n*y+t*d*y)*b,e[6]=(p*l*s-r*m*s-p*n*c+t*m*c+r*n*y-t*l*y)*b,e[7]=(r*d*s-h*l*s+h*n*c-t*d*c-r*n*f+t*l*f)*b,e[8]=v*b,e[9]=(p*u*s-h*g*s-p*i*f+t*g*f+h*i*y-t*u*y)*b,e[10]=(r*g*s-p*a*s+p*i*c-t*g*c-r*i*y+t*a*y)*b,e[11]=(h*a*s-r*u*s-h*i*c+t*u*c+r*i*f-t*a*f)*b,e[12]=E*b,e[13]=(h*g*n-p*u*n+p*i*d-t*g*d-h*i*m+t*u*m)*b,e[14]=(p*a*n-r*g*n-p*i*l+t*g*l+r*i*m-t*a*m)*b,e[15]=(r*u*n-h*a*n+h*i*l-t*u*l-r*i*d+t*a*d)*b,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,r=e.x,a=e.y,l=e.z,c=s*r,h=s*a;return this.set(c*r+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*r,0,c*l-n*a,h*l+n*r,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,r){return this.set(1,i,s,0,e,1,r,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,r=t._y,a=t._z,l=t._w,c=s+s,h=r+r,u=a+a,d=s*c,f=s*h,p=s*u,g=r*h,m=r*u,y=a*u,x=l*c,_=l*h,v=l*u,E=i.x,M=i.y,b=i.z;return n[0]=(1-(g+y))*E,n[1]=(f+v)*E,n[2]=(p-_)*E,n[3]=0,n[4]=(f-v)*M,n[5]=(1-(d+y))*M,n[6]=(m+x)*M,n[7]=0,n[8]=(p+_)*b,n[9]=(m-x)*b,n[10]=(1-(d+g))*b,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=da.set(n[0],n[1],n[2]).length();const r=da.set(n[4],n[5],n[6]).length(),a=da.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],zn.copy(this);const c=1/s,h=1/r,u=1/a;return zn.elements[0]*=c,zn.elements[1]*=c,zn.elements[2]*=c,zn.elements[4]*=h,zn.elements[5]*=h,zn.elements[6]*=h,zn.elements[8]*=u,zn.elements[9]*=u,zn.elements[10]*=u,t.setFromRotationMatrix(zn),i.x=s,i.y=r,i.z=a,this}makePerspective(e,t,i,n,s,r,a=Wn){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n);let f,p;if(a===Wn)f=-(r+s)/(r-s),p=-2*r*s/(r-s);else if(a===No)f=-r/(r-s),p=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,r,a=Wn){const l=this.elements,c=1/(t-e),h=1/(i-n),u=1/(r-s),d=(t+e)*c,f=(i+n)*h;let p,g;if(a===Wn)p=(r+s)*u,g=-2*u;else if(a===No)p=s*u,g=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=g,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const da=new V,zn=new Vt,mD=new V(0,0,0),gD=new V(1,1,1),pr=new V,du=new V,fn=new V,dv=new Vt,fv=new nh;class hs{constructor(e=0,t=0,i=0,n=hs.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],r=n[4],a=n[8],l=n[1],c=n[5],h=n[9],u=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(Ei(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ei(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ei(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-r,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Ei(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-r,c));break;case"YZX":this._z=Math.asin(Ei(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Ei(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return dv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(dv,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return fv.setFromEuler(this),this.setFromQuaternion(fv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}hs.DEFAULT_ORDER="XYZ";class yD{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let xD=0;const pv=new V,fa=new nh,ws=new Vt,fu=new V,Pl=new V,_D=new V,vD=new nh,mv=new V(1,0,0),gv=new V(0,1,0),yv=new V(0,0,1),xv={type:"added"},SD={type:"removed"},pa={type:"childadded",child:null},_m={type:"childremoved",child:null};class yi extends cl{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:xD++}),this.uuid=Hs(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=yi.DEFAULT_UP.clone();const e=new V,t=new hs,i=new nh,n=new V(1,1,1);function s(){i.setFromEuler(t,!1)}function r(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Vt},normalMatrix:{value:new Mn}}),this.matrix=new Vt,this.matrixWorld=new Vt,this.matrixAutoUpdate=yi.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=yi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new yD,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return fa.setFromAxisAngle(e,t),this.quaternion.multiply(fa),this}rotateOnWorldAxis(e,t){return fa.setFromAxisAngle(e,t),this.quaternion.premultiply(fa),this}rotateX(e){return this.rotateOnAxis(mv,e)}rotateY(e){return this.rotateOnAxis(gv,e)}rotateZ(e){return this.rotateOnAxis(yv,e)}translateOnAxis(e,t){return pv.copy(e).applyQuaternion(this.quaternion),this.position.add(pv.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(mv,e)}translateY(e){return this.translateOnAxis(gv,e)}translateZ(e){return this.translateOnAxis(yv,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ws.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?fu.copy(e):fu.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Pl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ws.lookAt(Pl,fu,this.up):ws.lookAt(fu,Pl,this.up),this.quaternion.setFromRotationMatrix(ws),n&&(ws.extractRotation(n.matrixWorld),fa.setFromRotationMatrix(ws),this.quaternion.premultiply(fa.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(xv),pa.child=e,this.dispatchEvent(pa),pa.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(SD),_m.child=e,this.dispatchEvent(_m),_m.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ws.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ws.multiply(e.parent.matrixWorld)),e.applyMatrix4(ws),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(xv),pa.child=e,this.dispatchEvent(pa),pa.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const r=this.children[i].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Pl,e,_D),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Pl,vD,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=r(e.geometries),l=r(e.materials),c=r(e.textures),h=r(e.images),u=r(e.shapes),d=r(e.skeletons),f=r(e.animations),p=r(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}yi.DEFAULT_UP=new V(0,1,0);yi.DEFAULT_MATRIX_AUTO_UPDATE=!0;yi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const kn=new V,As=new V,vm=new V,Es=new V,ma=new V,ga=new V,_v=new V,Sm=new V,bm=new V,Mm=new V,Tm=new At,wm=new At,Am=new At;class Hn{constructor(e=new V,t=new V,i=new V){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),kn.subVectors(e,t),n.cross(kn);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){kn.subVectors(n,t),As.subVectors(i,t),vm.subVectors(e,t);const r=kn.dot(kn),a=kn.dot(As),l=kn.dot(vm),c=As.dot(As),h=As.dot(vm),u=r*c-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(r*h-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,Es)===null?!1:Es.x>=0&&Es.y>=0&&Es.x+Es.y<=1}static getInterpolation(e,t,i,n,s,r,a,l){return this.getBarycoord(e,t,i,n,Es)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Es.x),l.addScaledVector(r,Es.y),l.addScaledVector(a,Es.z),l)}static getInterpolatedAttribute(e,t,i,n,s,r){return Tm.setScalar(0),wm.setScalar(0),Am.setScalar(0),Tm.fromBufferAttribute(e,t),wm.fromBufferAttribute(e,i),Am.fromBufferAttribute(e,n),r.setScalar(0),r.addScaledVector(Tm,s.x),r.addScaledVector(wm,s.y),r.addScaledVector(Am,s.z),r}static isFrontFacing(e,t,i,n){return kn.subVectors(i,t),As.subVectors(e,t),kn.cross(As).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return kn.subVectors(this.c,this.b),As.subVectors(this.a,this.b),kn.cross(As).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Hn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Hn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return Hn.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return Hn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Hn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let r,a;ma.subVectors(n,i),ga.subVectors(s,i),Sm.subVectors(e,i);const l=ma.dot(Sm),c=ga.dot(Sm);if(l<=0&&c<=0)return t.copy(i);bm.subVectors(e,n);const h=ma.dot(bm),u=ga.dot(bm);if(h>=0&&u<=h)return t.copy(n);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(i).addScaledVector(ma,r);Mm.subVectors(e,s);const f=ma.dot(Mm),p=ga.dot(Mm);if(p>=0&&f<=p)return t.copy(s);const g=f*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(ga,a);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return _v.subVectors(s,n),a=(u-h)/(u-h+(f-p)),t.copy(n).addScaledVector(_v,a);const y=1/(m+g+d);return r=g*y,a=d*y,t.copy(i).addScaledVector(ma,r).addScaledVector(ga,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const UT={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},mr={h:0,s:0,l:0},pu={h:0,s:0,l:0};function Em(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+(e-o)*6*t:t<1/2?e:t<2/3?o+(e-o)*6*(2/3-t):o}class Et{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=He){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,yn.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=yn.workingColorSpace){return this.r=e,this.g=t,this.b=i,yn.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=yn.workingColorSpace){if(e=xx(e,1),t=Ei(t,0,1),i=Ei(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,r=2*i-s;this.r=Em(r,s,e+1/3),this.g=Em(r,s,e),this.b=Em(r,s,e-1/3)}return yn.toWorkingColorSpace(this,n),this}setStyle(e,t=He){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=He){const i=UT[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Wa(e.r),this.g=Wa(e.g),this.b=Wa(e.b),this}copyLinearToSRGB(e){return this.r=um(e.r),this.g=um(e.g),this.b=um(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=He){return yn.fromWorkingColorSpace(Li.copy(this),e),Math.round(Ei(Li.r*255,0,255))*65536+Math.round(Ei(Li.g*255,0,255))*256+Math.round(Ei(Li.b*255,0,255))}getHexString(e=He){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=yn.workingColorSpace){yn.fromWorkingColorSpace(Li.copy(this),t);const i=Li.r,n=Li.g,s=Li.b,r=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const h=(a+r)/2;if(a===r)l=0,c=0;else{const u=r-a;switch(c=h<=.5?u/(r+a):u/(2-r-a),r){case i:l=(n-s)/u+(n<s?6:0);break;case n:l=(s-i)/u+2;break;case s:l=(i-n)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=yn.workingColorSpace){return yn.fromWorkingColorSpace(Li.copy(this),t),e.r=Li.r,e.g=Li.g,e.b=Li.b,e}getStyle(e=He){yn.fromWorkingColorSpace(Li.copy(this),e);const t=Li.r,i=Li.g,n=Li.b;return e!==He?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(mr),this.setHSL(mr.h+e,mr.s+t,mr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(mr),e.getHSL(pu);const i=oc(mr.h,pu.h,t),n=oc(mr.s,pu.s,t),s=oc(mr.l,pu.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Li=new Et;Et.NAMES=UT;let bD=0;class on extends cl{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:bD++}),this.uuid=Hs(),this.name="",this.type="Material",this.blending=Ar,this.side=Nc,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Zd,this.blendDst=Kd,this.blendEquation=Mr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Et(0,0,0),this.blendAlpha=0,this.depthFunc=jd,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ty,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ro,this.stencilZFail=ro,this.stencilZPass=ro,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ar&&(i.blending=this.blending),this.side!==Nc&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==Zd&&(i.blendSrc=this.blendSrc),this.blendDst!==Kd&&(i.blendDst=this.blendDst),this.blendEquation!==Mr&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==jd&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ty&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ro&&(i.stencilFail=this.stencilFail),this.stencilZFail!==ro&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==ro&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const r=[];for(const a in s){const l=s[a];delete l.metadata,r.push(l)}return r}if(t){const s=n(e.textures),r=n(e.images);s.length>0&&(i.textures=s),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Yf extends on{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Et(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new hs,this.combine=qf,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Us=MD();function MD(){const o=new ArrayBuffer(4),e=new Float32Array(o),t=new Uint32Array(o),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)r[l]=l<<23;r[31]=1199570944,r[32]=2147483648;for(let l=33;l<63;++l)r[l]=2147483648+(l-32<<23);r[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:r,offsetTable:a}}function pn(o){Math.abs(o)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),o=Ei(o,-65504,65504),Us.floatView[0]=o;const e=Us.uint32View[0],t=e>>23&511;return Us.baseTable[t]+((e&8388607)>>Us.shiftTable[t])}function mu(o){const e=o>>10;return Us.uint32View[0]=Us.mantissaTable[Us.offsetTable[e]+(o&1023)]+Us.exponentTable[e],Us.floatView[0]}const Qt=new V,gu=new mt;class In{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=ef,this.updateRanges=[],this.gpuType=_n,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)gu.fromBufferAttribute(this,t),gu.applyMatrix3(e),this.setXY(t,gu.x,gu.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix3(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix4(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.applyNormalMatrix(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.transformDirection(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=$i(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=nt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=$i(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=$i(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=$i(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=$i(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array),s=nt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ef&&(e.usage=this.usage),e}}class FT extends In{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class BT extends In{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class OT extends In{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=mu(this.array[e*this.itemSize]);return this.normalized&&(t=$i(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=pn(t),this}getY(e){let t=mu(this.array[e*this.itemSize+1]);return this.normalized&&(t=$i(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=pn(t),this}getZ(e){let t=mu(this.array[e*this.itemSize+2]);return this.normalized&&(t=$i(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=pn(t),this}getW(e){let t=mu(this.array[e*this.itemSize+3]);return this.normalized&&(t=$i(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=pn(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array)),this.array[e+0]=pn(t),this.array[e+1]=pn(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array)),this.array[e+0]=pn(t),this.array[e+1]=pn(i),this.array[e+2]=pn(n),this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array),s=nt(s,this.array)),this.array[e+0]=pn(t),this.array[e+1]=pn(i),this.array[e+2]=pn(n),this.array[e+3]=pn(s),this}}class Ws extends In{constructor(e,t,i){super(new Float32Array(e),t,i)}}let TD=0;const An=new Vt,Rm=new yi,ya=new V,mn=new sh,Il=new sh,di=new V;class Oo extends cl{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:TD++}),this.uuid=Hs(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(sD(e)?BT:FT)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Mn().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return An.makeRotationFromQuaternion(e),this.applyMatrix4(An),this}rotateX(e){return An.makeRotationX(e),this.applyMatrix4(An),this}rotateY(e){return An.makeRotationY(e),this.applyMatrix4(An),this}rotateZ(e){return An.makeRotationZ(e),this.applyMatrix4(An),this}translate(e,t,i){return An.makeTranslation(e,t,i),this.applyMatrix4(An),this}scale(e,t,i){return An.makeScale(e,t,i),this.applyMatrix4(An),this}lookAt(e){return Rm.lookAt(e),Rm.updateMatrix(),this.applyMatrix4(Rm.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ya).negate(),this.translate(ya.x,ya.y,ya.z),this}setFromPoints(e){const t=[];for(let i=0,n=e.length;i<n;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ws(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new sh);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new V(-1/0,-1/0,-1/0),new V(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];mn.setFromBufferAttribute(s),this.morphTargetsRelative?(di.addVectors(this.boundingBox.min,mn.min),this.boundingBox.expandByPoint(di),di.addVectors(this.boundingBox.max,mn.max),this.boundingBox.expandByPoint(di)):(this.boundingBox.expandByPoint(mn.min),this.boundingBox.expandByPoint(mn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new _x);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new V,1/0);return}if(e){const i=this.boundingSphere.center;if(mn.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const a=t[s];Il.setFromBufferAttribute(a),this.morphTargetsRelative?(di.addVectors(mn.min,Il.min),mn.expandByPoint(di),di.addVectors(mn.max,Il.max),mn.expandByPoint(di)):(mn.expandByPoint(Il.min),mn.expandByPoint(Il.max))}mn.getCenter(i);let n=0;for(let s=0,r=e.count;s<r;s++)di.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(di));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)di.fromBufferAttribute(a,c),l&&(ya.fromBufferAttribute(e,c),di.add(ya)),n=Math.max(n,i.distanceToSquared(di))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new In(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),a=[],l=[];for(let A=0;A<i.count;A++)a[A]=new V,l[A]=new V;const c=new V,h=new V,u=new V,d=new mt,f=new mt,p=new mt,g=new V,m=new V;function y(A,L,S){c.fromBufferAttribute(i,A),h.fromBufferAttribute(i,L),u.fromBufferAttribute(i,S),d.fromBufferAttribute(s,A),f.fromBufferAttribute(s,L),p.fromBufferAttribute(s,S),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const T=1/(f.x*p.y-p.x*f.y);isFinite(T)&&(g.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(T),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(T),a[A].add(g),a[L].add(g),a[S].add(g),l[A].add(m),l[L].add(m),l[S].add(m))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let A=0,L=x.length;A<L;++A){const S=x[A],T=S.start,B=S.count;for(let F=T,G=T+B;F<G;F+=3)y(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const _=new V,v=new V,E=new V,M=new V;function b(A){E.fromBufferAttribute(n,A),M.copy(E);const L=a[A];_.copy(L),_.sub(E.multiplyScalar(E.dot(L))).normalize(),v.crossVectors(M,L);const T=v.dot(l[A])<0?-1:1;r.setXYZW(A,_.x,_.y,_.z,T)}for(let A=0,L=x.length;A<L;++A){const S=x[A],T=S.start,B=S.count;for(let F=T,G=T+B;F<G;F+=3)b(e.getX(F+0)),b(e.getX(F+1)),b(e.getX(F+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new In(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new V,s=new V,r=new V,a=new V,l=new V,c=new V,h=new V,u=new V;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),g=e.getX(d+1),m=e.getX(d+2);n.fromBufferAttribute(t,p),s.fromBufferAttribute(t,g),r.fromBufferAttribute(t,m),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,g),c.fromBufferAttribute(i,m),a.add(h),l.add(h),c.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(g,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),i.setXYZ(d+0,h.x,h.y,h.z),i.setXYZ(d+1,h.x,h.y,h.z),i.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)di.fromBufferAttribute(e,t),di.normalize(),e.setXYZ(t,di.x,di.y,di.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*h;for(let y=0;y<h;y++)d[p++]=c[f++]}return new In(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Oo,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,l=r.length;a<l;a++){const c=r[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],u=s[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let c=0,h=r.length;c<h;c++){const u=r[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const vv=new Vt,eo=new pD,yu=new _x,Sv=new V,xu=new V,_u=new V,vu=new V,Cm=new V,Su=new V,bv=new V,bu=new V;class Po extends yi{constructor(e=new Oo,t=new Yf){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,r=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){Su.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],u=s[l];h!==0&&(Cm.fromBufferAttribute(u,e),r?Su.addScaledVector(Cm,h):Su.addScaledVector(Cm.sub(t),h))}t.add(Su)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),yu.copy(i.boundingSphere),yu.applyMatrix4(s),eo.copy(e.ray).recast(e.near),!(yu.containsPoint(eo.origin)===!1&&(eo.intersectSphere(yu,Sv)===null||eo.origin.distanceToSquared(Sv)>(e.far-e.near)**2))&&(vv.copy(s).invert(),eo.copy(e.ray).applyMatrix4(vv),!(i.boundingBox!==null&&eo.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,eo)))}_computeIntersections(e,t,i){let n;const s=this.geometry,r=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,g=d.length;p<g;p++){const m=d[p],y=r[m.materialIndex],x=Math.max(m.start,f.start),_=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let v=x,E=_;v<E;v+=3){const M=a.getX(v),b=a.getX(v+1),A=a.getX(v+2);n=Mu(this,y,e,i,c,h,u,M,b,A),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),g=Math.min(a.count,f.start+f.count);for(let m=p,y=g;m<y;m+=3){const x=a.getX(m),_=a.getX(m+1),v=a.getX(m+2);n=Mu(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(r))for(let p=0,g=d.length;p<g;p++){const m=d[p],y=r[m.materialIndex],x=Math.max(m.start,f.start),_=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let v=x,E=_;v<E;v+=3){const M=v,b=v+1,A=v+2;n=Mu(this,y,e,i,c,h,u,M,b,A),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),g=Math.min(l.count,f.start+f.count);for(let m=p,y=g;m<y;m+=3){const x=m,_=m+1,v=m+2;n=Mu(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}}}function wD(o,e,t,i,n,s,r,a){let l;if(e.side===Js?l=i.intersectTriangle(r,s,n,!0,a):l=i.intersectTriangle(n,s,r,e.side===Nc,a),l===null)return null;bu.copy(a),bu.applyMatrix4(o.matrixWorld);const c=t.ray.origin.distanceTo(bu);return c<t.near||c>t.far?null:{distance:c,point:bu.clone(),object:o}}function Mu(o,e,t,i,n,s,r,a,l,c){o.getVertexPosition(a,xu),o.getVertexPosition(l,_u),o.getVertexPosition(c,vu);const h=wD(o,e,t,i,xu,_u,vu,bv);if(h){const u=new V;Hn.getBarycoord(bv,xu,_u,vu,u),n&&(h.uv=Hn.getInterpolatedAttribute(n,a,l,c,u,new mt)),s&&(h.uv1=Hn.getInterpolatedAttribute(s,a,l,c,u,new mt)),r&&(h.normal=Hn.getInterpolatedAttribute(r,a,l,c,u,new V),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new V,materialIndex:0};Hn.getNormal(xu,_u,vu,d.normal),h.face=d,h.barycoord=u}return h}class rh extends Oo{constructor(e=1,t=1,i=1,n=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:r};const a=this;n=Math.floor(n),s=Math.floor(s),r=Math.floor(r);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,r,s,0),p("z","y","x",1,-1,i,t,-e,r,s,1),p("x","z","y",1,1,e,i,t,n,r,2),p("x","z","y",1,-1,e,i,-t,n,r,3),p("x","y","z",1,-1,e,t,i,n,s,4),p("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new Ws(c,3)),this.setAttribute("normal",new Ws(h,3)),this.setAttribute("uv",new Ws(u,2));function p(g,m,y,x,_,v,E,M,b,A,L){const S=v/b,T=E/A,B=v/2,F=E/2,G=M/2,j=b+1,k=A+1;let ae=0,X=0;const ce=new V;for(let ue=0;ue<k;ue++){const pe=ue*T-F;for(let Ze=0;Ze<j;Ze++){const Qe=Ze*S-B;ce[g]=Qe*x,ce[m]=pe*_,ce[y]=G,c.push(ce.x,ce.y,ce.z),ce[g]=0,ce[m]=0,ce[y]=M>0?1:-1,h.push(ce.x,ce.y,ce.z),u.push(Ze/b),u.push(1-ue/A),ae+=1}}for(let ue=0;ue<A;ue++)for(let pe=0;pe<b;pe++){const Ze=d+pe+j*ue,Qe=d+pe+j*(ue+1),J=d+(pe+1)+j*(ue+1),le=d+(pe+1)+j*ue;l.push(Ze,Qe,le),l.push(Qe,J,le),X+=6}a.addGroup(f,X,L),f+=X,d+=ae}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rh(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function zT(o){const e={};for(const t in o){e[t]={};for(const i in o[t]){const n=o[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function AD(o){const e=[];for(let t=0;t<o.length;t++)e.push(o[t].clone());return e}var ED=`
void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
`,RD=`
void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}
`;class CD extends on{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ED,this.fragmentShader=RD,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=zT(e.uniforms),this.uniformsGroups=AD(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class kT extends yi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Vt,this.projectionMatrix=new Vt,this.projectionMatrixInverse=new Vt,this.coordinateSystem=Wn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const gr=new V,Mv=new mt,Tv=new mt;class Ns extends kT{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ic*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(rc*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ic*2*Math.atan(Math.tan(rc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){gr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(gr.x,gr.y).multiplyScalar(-e/gr.z),gr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(gr.x,gr.y).multiplyScalar(-e/gr.z)}getViewSize(e,t){return this.getViewBounds(e,Mv,Tv),t.subVectors(Tv,Mv)}setViewOffset(e,t,i,n,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(rc*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const r=this.view;if(this.view!==null&&this.view.enabled){const l=r.fullWidth,c=r.fullHeight;s+=r.offsetX*n/l,t-=r.offsetY*i/c,n*=r.width/l,i*=r.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const xa=-90,_a=1;class GT extends yi{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Ns(xa,_a,e,t);n.layers=this.layers,this.add(n);const s=new Ns(xa,_a,e,t);s.layers=this.layers,this.add(s);const r=new Ns(xa,_a,e,t);r.layers=this.layers,this.add(r);const a=new Ns(xa,_a,e,t);a.layers=this.layers,this.add(a);const l=new Ns(xa,_a,e,t);l.layers=this.layers,this.add(l);const c=new Ns(xa,_a,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,r,a,l]=t;for(const c of t)this.remove(c);if(e===Wn)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===No)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const g=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,r),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=g,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class vx extends Yi{constructor(e,t,i,n,s,r,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:Ro,super(e,t,i,n,s,r,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class ND extends uD{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new vx(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:rn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new rh(5,5,5),s=new CD({name:"CubemapFromEquirect",uniforms:zT(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Js,blending:Ja});s.uniforms.tEquirect.value=t;const r=new Po(n,s),a=t.minFilter;return t.minFilter===Gs&&(t.minFilter=rn),new GT(1,10,this).update(e,r),t.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,i,n);e.setRenderTarget(s)}}class VT extends yi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new hs,this.environmentIntensity=1,this.environmentRotation=new hs,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class HT{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ef,this.updateRanges=[],this.version=0,this.uuid=Hs()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Hs()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Hs()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ki=new V;class Sx{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)ki.fromBufferAttribute(this,t),ki.applyMatrix4(e),this.setXYZ(t,ki.x,ki.y,ki.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)ki.fromBufferAttribute(this,t),ki.applyNormalMatrix(e),this.setXYZ(t,ki.x,ki.y,ki.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)ki.fromBufferAttribute(this,t),ki.transformDirection(e),this.setXYZ(t,ki.x,ki.y,ki.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=$i(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=nt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=$i(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=$i(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=$i(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=$i(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array),s=nt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new In(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Sx(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class WT extends on{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Et(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class PD extends Yi{constructor(e=null,t=1,i=1,n,s,r,a,l,c=Ri,h=Ri,u,d){super(null,r,a,l,c,h,n,s,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ID extends In{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Nm=new V,LD=new V,DD=new Mn;class _r{constructor(e=new V(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Nm.subVectors(i,t).cross(LD.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Nm),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||DD.getNormalMatrix(e),n=this.coplanarPoint(Nm).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const to=new _x,Tu=new V;class $T{constructor(e=new _r,t=new _r,i=new _r,n=new _r,s=new _r,r=new _r){this.planes=[e,t,i,n,s,r]}set(e,t,i,n,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Wn){const i=this.planes,n=e.elements,s=n[0],r=n[1],a=n[2],l=n[3],c=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],g=n[10],m=n[11],y=n[12],x=n[13],_=n[14],v=n[15];if(i[0].setComponents(l-s,d-c,m-f,v-y).normalize(),i[1].setComponents(l+s,d+c,m+f,v+y).normalize(),i[2].setComponents(l+r,d+h,m+p,v+x).normalize(),i[3].setComponents(l-r,d-h,m-p,v-x).normalize(),i[4].setComponents(l-a,d-u,m-g,v-_).normalize(),t===Wn)i[5].setComponents(l+a,d+u,m+g,v+_).normalize();else if(t===No)i[5].setComponents(a,u,g,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),to.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),to.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(to)}intersectsSprite(e){return to.center.set(0,0,0),to.radius=.7071067811865476,to.applyMatrix4(e.matrixWorld),this.intersectsSphere(to)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(Tu.x=n.normal.x>0?e.max.x:e.min.x,Tu.y=n.normal.y>0?e.max.y:e.min.y,Tu.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(Tu)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class bx extends on{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Et(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}class XT extends on{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Et(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class UD extends Yi{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Ri,this.minFilter=Ri,this.generateMipmaps=!1,this.needsUpdate=!0}}class oh extends Yi{constructor(e,t,i,n,s,r,a,l,c,h=So){if(h!==So&&h!==el)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===So&&(i=wi),i===void 0&&h===el&&(i=ih),super(null,n,s,r,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Ri,this.minFilter=l!==void 0?l:Ri,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Mx extends Oo{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(r+a,Math.PI);let c=0;const h=[],u=new V,d=new V,f=[],p=[],g=[],m=[];for(let y=0;y<=i;y++){const x=[],_=y/i;let v=0;y===0&&r===0?v=.5/t:y===i&&l===Math.PI&&(v=-.5/t);for(let E=0;E<=t;E++){const M=E/t;u.x=-e*Math.cos(n+M*s)*Math.sin(r+_*a),u.y=e*Math.cos(r+_*a),u.z=e*Math.sin(n+M*s)*Math.sin(r+_*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),g.push(d.x,d.y,d.z),m.push(M+v,1-_),x.push(c++)}h.push(x)}for(let y=0;y<i;y++)for(let x=0;x<t;x++){const _=h[y][x+1],v=h[y][x],E=h[y+1][x],M=h[y+1][x+1];(y!==0||r>0)&&f.push(_,v,M),(y!==i-1||l<Math.PI)&&f.push(v,E,M)}this.setIndex(f),this.setAttribute("position",new Ws(p,3)),this.setAttribute("normal",new Ws(g,3)),this.setAttribute("uv",new Ws(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mx(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class qT extends on{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Et(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Tx extends on{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Et(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new hs,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class YT extends Tx{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new mt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ei(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Et(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Et(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Et(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class ZT extends on{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Et(16777215),this.specular=new Et(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new hs,this.combine=qf,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class KT extends on{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Et(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class jT extends on{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class JT extends on{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Et(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Et(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new hs,this.combine=qf,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class QT extends on{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Et(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ew extends bx{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}class zo extends yi{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Et(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class FD extends zo{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(yi.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Et(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Pm=new Vt,wv=new V,Av=new V;class wx{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new mt(512,512),this.map=null,this.mapPass=null,this.matrix=new Vt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new $T,this._frameExtents=new mt(1,1),this._viewportCount=1,this._viewports=[new At(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;wv.setFromMatrixPosition(e.matrixWorld),t.position.copy(wv),Av.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Av),t.updateMatrixWorld(),Pm.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Pm),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Pm)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class BD extends wx{constructor(){super(new Ns(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=Ic*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class tw extends zo{constructor(e,t,i=0,n=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(yi.DEFAULT_UP),this.updateMatrix(),this.target=new yi,this.distance=i,this.angle=n,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new BD}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Ev=new Vt,Ll=new V,Im=new V;class OD extends wx{constructor(){super(new Ns(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new mt(4,2),this._viewportCount=6,this._viewports=[new At(2,1,1,1),new At(0,1,1,1),new At(3,1,1,1),new At(1,1,1,1),new At(3,0,1,1),new At(1,0,1,1)],this._cubeDirections=[new V(1,0,0),new V(-1,0,0),new V(0,0,1),new V(0,0,-1),new V(0,1,0),new V(0,-1,0)],this._cubeUps=[new V(0,1,0),new V(0,1,0),new V(0,1,0),new V(0,1,0),new V(0,0,1),new V(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Ll.setFromMatrixPosition(e.matrixWorld),i.position.copy(Ll),Im.copy(i.position),Im.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Im),i.updateMatrixWorld(),n.makeTranslation(-Ll.x,-Ll.y,-Ll.z),Ev.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ev)}}class zD extends zo{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new OD}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ax extends kT{constructor(e=-1,t=1,i=1,n=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,r=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,r=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class kD extends wx{constructor(){super(new Ax(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class GD extends zo{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(yi.DEFAULT_UP),this.updateMatrix(),this.target=new yi,this.shadow=new kD}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class VD extends zo{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class HD extends zo{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class WD{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new V)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*n),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*i),t.addScaledVector(r[4],1.092548*(i*n)),t.addScaledVector(r[5],1.092548*(n*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(i*s)),t.addScaledVector(r[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*n),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*i),t.addScaledVector(r[4],2*.429043*i*n),t.addScaledVector(r[5],2*.429043*n*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*i*s),t.addScaledVector(r[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,s=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-n*n)}}class $D extends zo{constructor(e=new WD,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class XD extends HT{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const qD=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class YD{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=qD,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);return t===void 0&&(t={material:this.getMaterialData(e.material),worldMatrix:e.object.matrixWorld.clone()},e.object.center&&(t.center=e.object.center.clone()),e.object.morphTargetInfluences&&(t.morphTargetInfluences=e.object.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),this.renderObjects.set(e,t)),t}containsNode(e){const t=e.material;for(const i in t)if(t[i]&&t[i].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const i of this.refreshUniforms){const n=e[i];n!=null&&(typeof n=="object"&&n.clone!==void 0?n.isTexture===!0?t[i]={id:n.id,version:n.version}:t[i]=n.clone():t[i]=n)}return t}equals(e){const{object:t,material:i}=e,n=this.getRenderObjectData(e);if(n.worldMatrix.equals(t.matrixWorld)!==!0)return n.worldMatrix.copy(t.matrixWorld),!1;const s=n.material;for(const r in s){const a=s[r],l=i[r];if(a.equals!==void 0){if(a.equals(l)===!1)return a.copy(l),!1}else if(l.isTexture===!0){if(a.id!==l.id||a.version!==l.version)return a.id=l.id,a.version=l.version,!1}else if(a!==l)return s[r]=l,!1}if(n.morphTargetInfluences){let r=!1;for(let a=0;a<n.morphTargetInfluences.length;a++)n.morphTargetInfluences[a]!==t.morphTargetInfluences[a]&&(r=!0);if(r)return!0}return n.center&&n.center.equals(t.center)===!1?(n.center.copy(t.center),!0):(e.bundle!==null&&(n.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:i}=t;if(this.renderId!==i)return this.renderId=i,!0;const n=e.object.static===!0,s=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return n||s?!1:this.equals(e)!==!0}}function Lc(o,e=0){let t=3735928559^e,i=1103547991^e;if(o instanceof Array)for(let n=0,s;n<o.length;n++)s=o[n],t=Math.imul(t^s,2654435761),i=Math.imul(i^s,1597334677);else for(let n=0,s;n<o.length;n++)s=o.charCodeAt(n),t=Math.imul(t^s,2654435761),i=Math.imul(i^s,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&i)+(t>>>0)}const ZD=o=>Lc(o),iw=o=>Lc(o),tf=(...o)=>Lc(o);function nw(o,e=!1){const t=[];o.isNode===!0&&(t.push(o.id),o=o.getSelf());for(const{property:i,childNode:n}of nf(o))t.push(t,Lc(i.slice(0,-4)),n.getCacheKey(e));return Lc(t)}function*nf(o,e=!1){for(const t in o){if(t.startsWith("_")===!0)continue;const i=o[t];if(Array.isArray(i)===!0)for(let n=0;n<i.length;n++){const s=i[n];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:n,childNode:s})}else if(i&&i.isNode===!0)yield{property:t,childNode:i};else if(typeof i=="object")for(const n in i){const s=i[n];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:n,childNode:s})}}}function sf(o){if(o==null)return null;const e=typeof o;return o.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":o.isVector2===!0?"vec2":o.isVector3===!0?"vec3":o.isVector4===!0?"vec4":o.isMatrix3===!0?"mat3":o.isMatrix4===!0?"mat4":o.isColor===!0?"color":o instanceof ArrayBuffer?"ArrayBuffer":null}function sw(o,...e){const t=o?o.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),o==="color"?new Et(...e):t==="vec2"?new mt(...e):t==="vec3"?new V(...e):t==="vec4"?new At(...e):t==="mat3"?new Mn(...e):t==="mat4"?new Vt(...e):o==="bool"?e[0]||!1:o==="float"||o==="int"||o==="uint"?e[0]||0:o==="string"?e[0]||"":o==="ArrayBuffer"?jD(e[0]):null}function KD(o){let e="";const t=new Uint8Array(o);for(let i=0;i<t.length;i++)e+=String.fromCharCode(t[i]);return btoa(e)}function jD(o){return Uint8Array.from(atob(o),e=>e.charCodeAt(0)).buffer}const Rv={VERTEX:"vertex",FRAGMENT:"fragment"},ct={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},JD=["fragment","vertex"],Cv=["setup","analyze","generate"],Nv=[...JD,"compute"],ul=["x","y","z","w"];let QD=0;class st extends cl{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=ct.NONE,this.updateBeforeType=ct.NONE,this.updateAfterType=ct.NONE,this.uuid=nD.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:QD++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,ct.FRAME)}onRenderUpdate(e){return this.onUpdate(e,ct.RENDER)}onObjectUpdate(e){return this.onUpdate(e,ct.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of nf(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=nw(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let i=0;for(const n of this.getChildren())t["node"+i++]=n;return null}analyze(e){if(e.increaseUsage(this)===1){const i=e.getNodeProperties(this);for(const n of Object.values(i))n&&n.isNode===!0&&n.build(e)}}generate(e,t){const{outputNode:i}=e.getNodeProperties(this);if(i&&i.isNode===!0)return i.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const i=this.getShared(e);if(this!==i)return i.build(e,t);e.addNode(this),e.addChain(this);let n=null;const s=e.getBuildStage();if(s==="setup"){this.updateReference(e);const r=e.getNodeProperties(this);if(r.initialized!==!0){const a=e.stack.nodes.length;r.initialized=!0,r.outputNode=this.setup(e),r.outputNode!==null&&e.stack.nodes.length;for(const l of Object.values(r))l&&l.isNode===!0&&l.build(e)}}else if(s==="analyze")this.analyze(e);else if(s==="generate")if(this.generate.length===1){const a=this.getNodeType(e),l=e.getDataFromNode(this);n=l.snippet,n===void 0?(n=this.generate(e)||"",l.snippet=n):l.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),n=e.format(n,a,t)}else n=this.generate(e,t)||"";return e.removeChain(this),n}getSerializeChildren(){return nf(this)}serialize(e){const t=this.getSerializeChildren(),i={};for(const{property:n,index:s,childNode:r}of t)s!==void 0?(i[n]===void 0&&(i[n]=Number.isInteger(s)?[]:{}),i[n][s]=r.toJSON(e.meta).uuid):i[n]=r.toJSON(e.meta).uuid;Object.keys(i).length>0&&(e.inputNodes=i)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const i in e.inputNodes)if(Array.isArray(e.inputNodes[i])){const n=[];for(const s of e.inputNodes[i])n.push(t[s]);this[i]=n}else if(typeof e.inputNodes[i]=="object"){const n={};for(const s in e.inputNodes[i]){const r=e.inputNodes[i][s];n[s]=t[r]}this[i]=n}else{const n=e.inputNodes[i];this[i]=t[n]}}}toJSON(e){const{uuid:t,type:i}=this,n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];s===void 0&&(s={uuid:t,type:i,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},n!==!0&&(e.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}if(n){const a=r(e.textures),l=r(e.images),c=r(e.nodes);a.length>0&&(s.textures=a),l.length>0&&(s.images=l),c.length>0&&(s.nodes=c)}return s}}class ah extends st{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.node.build(e),i=this.indexNode.build(e,"uint");return`${t}[ ${i} ]`}}class rw extends st{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let i=null;for(const n of this.convertTo.split("|"))(i===null||e.getTypeLength(t)===e.getTypeLength(n))&&(i=n);return i}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const i=this.node,n=this.getNodeType(e),s=i.build(e,n);return e.format(s,n,t)}}class ri extends st{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const n=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(s.propertyName!==void 0)return e.format(s.propertyName,n,t);if(n!=="void"&&t!=="void"&&this.hasDependencies(e)){const r=super.build(e,n),a=e.getVarFromNode(this,null,n),l=e.getPropertyName(a);return e.addLineFlowCode(`${l} = ${r}`,this),s.snippet=r,s.propertyName=l,e.format(s.propertyName,n,t)}}return super.build(e,t)}}class eU extends ri{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,i)=>t+e.getTypeLength(i.getNodeType(e)),0))}generate(e,t){const i=this.getNodeType(e),n=this.nodes,s=e.getComponentType(i),r=[];for(const l of n){let c=l.build(e);const h=e.getComponentType(l.getNodeType(e));h!==s&&(c=e.format(c,h,s)),r.push(c)}const a=`${e.getType(i)}( ${r.join(", ")} )`;return e.format(a,i,t)}}const tU=ul.join("");class Pv extends st{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(ul.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const i=this.node,n=e.getTypeLength(i.getNodeType(e));let s=null;if(n>1){let r=null;this.getVectorLength()>=n&&(r=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const l=i.build(e,r);this.components.length===n&&this.components===tU.slice(0,this.components.length)?s=e.format(l,r,t):s=e.format(`${l}.${this.components}`,this.getNodeType(e),t)}else s=i.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class iU extends ri{static get type(){return"SetNode"}constructor(e,t,i){super(),this.sourceNode=e,this.components=t,this.targetNode=i}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:i,targetNode:n}=this,s=this.getNodeType(e),r=e.getTypeFromLength(i.length,n.getNodeType(e)),a=n.build(e,r),l=t.build(e,s),c=e.getTypeLength(s),h=[];for(let u=0;u<c;u++){const d=ul[u];d===i[0]?(h.push(a),u+=i.length-1):h.push(l+"."+d)}return`${e.getType(s)}( ${h.join(", ")} )`}}class nU extends ri{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:i}=this,n=this.getNodeType(e),s=i.build(e),r=e.getVarFromNode(this),a=e.getPropertyName(r);e.addLineFlowCode(a+" = "+s,this);const l=e.getTypeLength(n),c=[];let h=0;for(let u=0;u<l;u++){const d=ul[u];d===t[h]?(c.push("1.0 - "+(a+"."+d)),h++):c.push(a+"."+d)}return`${e.getType(n)}( ${c.join(", ")} )`}}class Ex extends st{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?sf(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=sf(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=KD(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?sw(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class Qs extends Ex{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const i=this.getNodeType(e);return e.format(this.generateConst(e),i,t)}}let tl=null;const Ba=new Map;function K(o,e){if(Ba.has(o)){console.warn(`Redefinition of method chaining ${o}`);return}if(typeof e!="function")throw new Error(`Node element ${o} is not a function`);Ba.set(o,e)}const ow=o=>o.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Iv=o=>ow(o).split("").sort().join(""),aw={setup(o,e){const t=e.shift();return o(jf(t),...e)},get(o,e,t){if(typeof e=="string"&&o[e]===void 0){if(o.isStackNode!==!0&&e==="assign")return(...i)=>(tl.assign(t,...i),t);if(Ba.has(e)){const i=Ba.get(e);return o.isStackNode?(...n)=>t.add(i(...n)):(...n)=>i(t,...n)}else{if(e==="self")return o;if(e.endsWith("Assign")&&Ba.has(e.slice(0,e.length-6))){const i=Ba.get(e.slice(0,e.length-6));return o.isStackNode?(...n)=>t.assign(n[0],i(...n)):(...n)=>t.assign(i(t,...n))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=ow(e),fe(new Pv(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Iv(e.slice(3).toLowerCase()),i=>fe(new iU(o,e,i));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Iv(e.slice(4).toLowerCase()),()=>fe(new nU(fe(o),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),fe(new Pv(o,e));if(/^\d+$/.test(e)===!0)return fe(new ah(t,new Qs(Number(e),"uint")))}}}return Reflect.get(o,e,t)},set(o,e,t,i){return typeof e=="string"&&o[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(i[e].assign(t),!0):Reflect.set(o,e,t,i)}},Lm=new WeakMap,Lv=new WeakMap,sU=function(o,e=null){const t=sf(o);if(t==="node"){let i=Lm.get(o);return i===void 0&&(i=new Proxy(o,aw),Lm.set(o,i),Lm.set(i,i)),i}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return fe(ny(o,e));if(t==="shader")return Me(o)}return o},rU=function(o,e=null){for(const t in o)o[t]=fe(o[t],e);return o},oU=function(o,e=null){const t=o.length;for(let i=0;i<t;i++)o[i]=fe(o[i],e);return o},aU=function(o,e=null,t=null,i=null){const n=s=>fe(i!==null?Object.assign(s,i):s);return e===null?(...s)=>n(new o(...$a(s))):t!==null?(t=fe(t),(...s)=>n(new o(e,...$a(s),t))):(...s)=>n(new o(e,...$a(s)))},lU=function(o,...e){return fe(new o(...$a(e)))};class cU extends st{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:i}=this,n=e.getNodeProperties(t);if(n.onceOutput)return n.onceOutput;let s=null;if(t.layout){let r=Lv.get(e.constructor);r===void 0&&(r=new WeakMap,Lv.set(e.constructor,r));let a=r.get(t);a===void 0&&(a=fe(e.buildFunctionNode(t)),r.set(t,a)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(a),s=fe(a.call(i))}else{const r=t.jsFunc,a=i!==null?r(i,e):r(e);s=fe(a)}return t.once&&(n.onceOutput=s),s}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class hU extends st{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return jf(e),fe(new cU(this,e))}setup(){return this.call()}}const uU=[!1,!0],dU=[0,1,2,3],fU=[-1,-2],lw=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],Rx=new Map;for(const o of uU)Rx.set(o,new Qs(o));const Cx=new Map;for(const o of dU)Cx.set(o,new Qs(o,"uint"));const Nx=new Map([...Cx].map(o=>new Qs(o.value,"int")));for(const o of fU)Nx.set(o,new Qs(o,"int"));const Zf=new Map([...Nx].map(o=>new Qs(o.value)));for(const o of lw)Zf.set(o,new Qs(o));for(const o of lw)Zf.set(-o,new Qs(-o));const Kf={bool:Rx,uint:Cx,ints:Nx,float:Zf},Dv=new Map([...Rx,...Zf]),ny=(o,e)=>Dv.has(o)?Dv.get(o):o.isNode===!0?o:new Qs(o,e),pU=o=>{try{return o.getNodeType()}catch{return}},oi=function(o,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(o)&&t.every(n=>typeof n!="object"))&&(t=[sw(o,...t)]),t.length===1&&e!==null&&e.has(t[0]))return fe(e.get(t[0]));if(t.length===1){const n=ny(t[0],o);return pU(n)===o?fe(n):fe(new rw(n,o))}const i=t.map(n=>ny(n));return fe(new eU(i,o))}},Uv=o=>typeof o=="object"&&o!==null?o.value:o,mU=o=>o!=null?o.nodeType||o.convertTo||(typeof o=="string"?o:null):null;function Ju(o,e){return new Proxy(new hU(o,e),aw)}const fe=(o,e=null)=>sU(o,e),jf=(o,e=null)=>new rU(o,e),$a=(o,e=null)=>new oU(o,e),te=(...o)=>new aU(...o),ge=(...o)=>new lU(...o),Me=(o,e)=>{const t=new Ju(o,e),i=(...n)=>{let s;return jf(n),n[0]&&n[0].isNode?s=[...n]:s=n[0],t.call(s)};return i.shaderNode=t,i.setLayout=n=>(t.setLayout(n),i),i.once=()=>(t.once=!0,i),i};K("toGlobal",o=>(o.global=!0,o));const rf=o=>{tl=o},cw=()=>tl,Fi=(...o)=>tl.If(...o);function gU(o){return tl&&tl.add(o),o}K("append",gU);const yU=new oi("color"),ee=new oi("float",Kf.float),Xt=new oi("int",Kf.ints),xU=new oi("uint",Kf.uint),_U=new oi("bool",Kf.bool),we=new oi("vec2"),Ps=new oi("ivec2"),vU=new oi("uvec2"),SU=new oi("bvec2"),Q=new oi("vec3"),bU=new oi("ivec3"),MU=new oi("uvec3"),TU=new oi("bvec3"),ot=new oi("vec4"),wU=new oi("ivec4"),AU=new oi("uvec4"),EU=new oi("bvec4"),Px=new oi("mat2"),an=new oi("mat3"),Xa=new oi("mat4");K("toColor",yU);K("toFloat",ee);K("toInt",Xt);K("toUint",xU);K("toBool",_U);K("toVec2",we);K("toIVec2",Ps);K("toUVec2",vU);K("toBVec2",SU);K("toVec3",Q);K("toIVec3",bU);K("toUVec3",MU);K("toBVec3",TU);K("toVec4",ot);K("toIVec4",wU);K("toUVec4",AU);K("toBVec4",EU);K("toMat2",Px);K("toMat3",an);K("toMat4",Xa);const RU=te(ah),CU=(o,e)=>fe(new rw(fe(o),e));K("element",RU);K("convert",CU);class hw extends st{static get type(){return"UniformGroupNode"}constructor(e,t=!1,i=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=i,this.isUniformGroup=!0}set needsUpdate(e){e===!0&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const NU=o=>new hw(o),uw=(o,e=0)=>new hw(o,!0,e),PU=uw("frame"),ut=uw("render"),dw=NU("object");class dl extends Ex{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=dw}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const i=this.getSelf();return e=e.bind(i),super.onUpdate(n=>{const s=e(n,i);s!==void 0&&(this.value=s)},t)}generate(e,t){const i=this.getNodeType(e),n=this.getUniformHash(e);let s=e.getNodeFromHash(n);s===void 0&&(e.setHashNode(this,n),s=this);const r=s.getInputType(e),a=e.getUniformFromNode(s,r,e.shaderStage,this.name||e.context.label),l=e.getPropertyName(a);return e.context.label!==void 0&&delete e.context.label,e.format(l,i,t)}}const at=(o,e)=>{const t=mU(e||o),i=o&&o.isNode===!0?o.node&&o.node.value||o.value:o;return fe(new dl(i,t))};class Ct extends st{static get type(){return"PropertyNode"}constructor(e,t=null,i=!1){super(e),this.name=t,this.varying=i,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Ra=(o,e)=>fe(new Ct(o,e)),of=(o,e)=>fe(new Ct(o,e,!0)),wt=ge(Ct,"vec4","DiffuseColor"),Fv=ge(Ct,"vec3","EmissiveColor"),Fs=ge(Ct,"float","Roughness"),af=ge(Ct,"float","Metalness"),sy=ge(Ct,"float","Clearcoat"),lf=ge(Ct,"float","ClearcoatRoughness"),Oa=ge(Ct,"vec3","Sheen"),Ix=ge(Ct,"float","SheenRoughness"),Lx=ge(Ct,"float","Iridescence"),fw=ge(Ct,"float","IridescenceIOR"),pw=ge(Ct,"float","IridescenceThickness"),ry=ge(Ct,"float","AlphaT"),oo=ge(Ct,"float","Anisotropy"),Qu=ge(Ct,"vec3","AnisotropyT"),qa=ge(Ct,"vec3","AnisotropyB"),xn=ge(Ct,"color","SpecularColor"),cf=ge(Ct,"float","SpecularF90"),oy=ge(Ct,"float","Shininess"),IU=ge(Ct,"vec4","Output"),Dm=ge(Ct,"float","dashSize"),Bv=ge(Ct,"float","gapSize"),ed=ge(Ct,"float","IOR"),ay=ge(Ct,"float","Transmission"),mw=ge(Ct,"float","Thickness"),gw=ge(Ct,"float","AttenuationDistance"),yw=ge(Ct,"color","AttenuationColor"),xw=ge(Ct,"float","Dispersion");class LU extends ri{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const i=e.getTypeLength(t.node.getNodeType(e));return ul.join("").slice(0,i)!==t.components}return!1}generate(e,t){const{targetNode:i,sourceNode:n}=this,s=this.needsSplitAssign(e),r=i.getNodeType(e),a=i.context({assign:!0}).build(e),l=n.build(e,r),c=n.getNodeType(e),h=e.getDataFromNode(this);let u;if(h.initialized===!0)t!=="void"&&(u=a);else if(s){const d=e.getVarFromNode(this,null,r),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${l}`,this);const p=i.node.context({assign:!0}).build(e);for(let g=0;g<i.components.length;g++){const m=i.components[g];e.addLineFlowCode(`${p}.${m} = ${f}[ ${g} ]`,this)}t!=="void"&&(u=a)}else u=`${a} = ${l}`,(t==="void"||c==="void")&&(e.addLineFlowCode(u,this),t!=="void"&&(u=a));return h.initialized=!0,e.format(u,r,t)}}const DU=te(LU);K("assign",DU);class UU extends ri{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],i=this.functionNode,n=i.getInputs(e),s=this.parameters;if(Array.isArray(s))for(let a=0;a<s.length;a++){const l=n[a],c=s[a];t.push(c.build(e,l.type))}else for(const a of n){const l=s[a.name];if(l!==void 0)t.push(l.build(e,a.type));else throw new Error(`FunctionCallNode: Input '${a.name}' not found in FunctionNode.`)}return`${i.build(e,"property")}( ${t.join(", ")} )`}}const FU=(o,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?$a(e):jf(e[0]),fe(new UU(fe(o),e)));K("call",FU);class Ot extends ri{static get type(){return"OperatorNode"}constructor(e,t,i,...n){if(super(),n.length>0){let s=new Ot(e,t,i);for(let r=0;r<n.length-1;r++)s=new Ot(e,s,n[r]);t=s,i=n[n.length-1]}this.op=e,this.aNode=t,this.bNode=i}getNodeType(e,t){const i=this.op,n=this.aNode,s=this.bNode,r=n.getNodeType(e),a=typeof s<"u"?s.getNodeType(e):null;if(r==="void"||a==="void")return"void";if(i==="%")return r;if(i==="~"||i==="&"||i==="|"||i==="^"||i===">>"||i==="<<")return e.getIntegerType(r);if(i==="!"||i==="=="||i==="&&"||i==="||"||i==="^^")return"bool";if(i==="<"||i===">"||i==="<="||i===">="){const l=t?e.getTypeLength(t):Math.max(e.getTypeLength(r),e.getTypeLength(a));return l>1?`bvec${l}`:"bool"}else return r==="float"&&e.isMatrix(a)?a:e.isMatrix(r)&&e.isVector(a)?e.getVectorFromMatrix(r):e.isVector(r)&&e.isMatrix(a)?e.getVectorFromMatrix(a):e.getTypeLength(a)>e.getTypeLength(r)?a:r}generate(e,t){const i=this.op,n=this.aNode,s=this.bNode,r=this.getNodeType(e,t);let a=null,l=null;r!=="void"?(a=n.getNodeType(e),l=typeof s<"u"?s.getNodeType(e):null,i==="<"||i===">"||i==="<="||i===">="||i==="=="?e.isVector(a)?l=a:a!==l&&(a=l="float"):i===">>"||i==="<<"?(a=r,l=e.changeComponentType(l,"uint")):e.isMatrix(a)&&e.isVector(l)?l=e.getVectorFromMatrix(a):e.isVector(a)&&e.isMatrix(l)?a=e.getVectorFromMatrix(l):a=l=r):a=l=r;const c=n.build(e,a),h=typeof s<"u"?s.build(e,l):null,u=e.getTypeLength(t),d=e.getFunctionOperator(i);if(t!=="void")return i==="<"&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} < ${h} )`,r,t):i==="<="&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} <= ${h} )`,r,t):i===">"&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} > ${h} )`,r,t):i===">="&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} >= ${h} )`,r,t):i==="!"||i==="~"?e.format(`(${i}${c})`,a,t):d?e.format(`${d}( ${c}, ${h} )`,r,t):e.format(`( ${c} ${i} ${h} )`,r,t);if(a!=="void")return d?e.format(`${d}( ${c}, ${h} )`,r,t):e.format(`${c} ${i} ${h}`,r,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const bn=te(Ot,"+"),bo=te(Ot,"-"),Pt=te(Ot,"*"),Pr=te(Ot,"/"),_w=te(Ot,"%"),BU=te(Ot,"=="),OU=te(Ot,"!="),zU=te(Ot,"<"),kU=te(Ot,">"),GU=te(Ot,"<="),VU=te(Ot,">="),HU=te(Ot,"&&"),WU=te(Ot,"||"),$U=te(Ot,"!"),XU=te(Ot,"^^"),qU=te(Ot,"&"),YU=te(Ot,"~"),ZU=te(Ot,"|"),KU=te(Ot,"^"),jU=te(Ot,"<<"),JU=te(Ot,">>");K("add",bn);K("sub",bo);K("mul",Pt);K("div",Pr);K("modInt",_w);K("equal",BU);K("notEqual",OU);K("lessThan",zU);K("greaterThan",kU);K("lessThanEqual",GU);K("greaterThanEqual",VU);K("and",HU);K("or",WU);K("not",$U);K("xor",XU);K("bitAnd",qU);K("bitNot",YU);K("bitOr",ZU);K("bitXor",KU);K("shiftLeft",jU);K("shiftRight",JU);const QU=(...o)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),_w(...o));K("remainder",QU);class U extends ri{static get type(){return"MathNode"}constructor(e,t,i=null,n=null){super(),this.method=e,this.aNode=t,this.bNode=i,this.cNode=n}getInputType(e){const t=this.aNode.getNodeType(e),i=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(i)?0:e.getTypeLength(i),a=e.isMatrix(n)?0:e.getTypeLength(n);return s>r&&s>a?t:r>a?i:a>s?n:t}getNodeType(e){const t=this.method;return t===U.LENGTH||t===U.DISTANCE||t===U.DOT?"float":t===U.CROSS?"vec3":t===U.ALL?"bool":t===U.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===U.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const i=this.method,n=this.getNodeType(e),s=this.getInputType(e),r=this.aNode,a=this.bNode,l=this.cNode,c=e.renderer.isWebGLRenderer===!0;if(i===U.TRANSFORM_DIRECTION){let h=r,u=a;e.isMatrix(h.getNodeType(e))?u=ot(Q(u),0):h=ot(Q(h),0);const d=Pt(h,u).xyz;return Dc(d).build(e,t)}else{if(i===U.NEGATE)return e.format("( - "+r.build(e,s)+" )",n,t);if(i===U.ONE_MINUS)return bo(1,r).build(e,t);if(i===U.RECIPROCAL)return Pr(1,r).build(e,t);if(i===U.DIFFERENCE)return es(bo(r,a)).build(e,t);{const h=[];return i===U.CROSS||i===U.MOD?h.push(r.build(e,n),a.build(e,n)):c&&i===U.STEP?h.push(r.build(e,e.getTypeLength(r.getNodeType(e))===1?"float":s),a.build(e,s)):c&&(i===U.MIN||i===U.MAX)||i===U.MOD?h.push(r.build(e,s),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":s)):i===U.REFRACT?h.push(r.build(e,s),a.build(e,s),l.build(e,"float")):i===U.MIX?h.push(r.build(e,s),a.build(e,s),l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":s)):(h.push(r.build(e,s)),a!==null&&h.push(a.build(e,s)),l!==null&&h.push(l.build(e,s))),e.format(`${e.getMethod(i,n)}( ${h.join(", ")} )`,n,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}U.ALL="all";U.ANY="any";U.EQUALS="equals";U.RADIANS="radians";U.DEGREES="degrees";U.EXP="exp";U.EXP2="exp2";U.LOG="log";U.LOG2="log2";U.SQRT="sqrt";U.INVERSE_SQRT="inversesqrt";U.FLOOR="floor";U.CEIL="ceil";U.NORMALIZE="normalize";U.FRACT="fract";U.SIN="sin";U.COS="cos";U.TAN="tan";U.ASIN="asin";U.ACOS="acos";U.ATAN="atan";U.ABS="abs";U.SIGN="sign";U.LENGTH="length";U.NEGATE="negate";U.ONE_MINUS="oneMinus";U.DFDX="dFdx";U.DFDY="dFdy";U.ROUND="round";U.RECIPROCAL="reciprocal";U.TRUNC="trunc";U.FWIDTH="fwidth";U.BITCAST="bitcast";U.TRANSPOSE="transpose";U.ATAN2="atan2";U.MIN="min";U.MAX="max";U.MOD="mod";U.STEP="step";U.REFLECT="reflect";U.DISTANCE="distance";U.DIFFERENCE="difference";U.DOT="dot";U.CROSS="cross";U.POW="pow";U.TRANSFORM_DIRECTION="transformDirection";U.MIX="mix";U.CLAMP="clamp";U.REFRACT="refract";U.SMOOTHSTEP="smoothstep";U.FACEFORWARD="faceforward";const eF=ee(1e-6),tF=ee(Math.PI),vw=te(U,U.ALL),iF=te(U,U.ANY),nF=te(U,U.EQUALS),sF=te(U,U.RADIANS),rF=te(U,U.DEGREES),Sw=te(U,U.EXP),ly=te(U,U.EXP2),bw=te(U,U.LOG),Jf=te(U,U.LOG2),Dx=te(U,U.SQRT),oF=te(U,U.INVERSE_SQRT),Qf=te(U,U.FLOOR),Mw=te(U,U.CEIL),Dc=te(U,U.NORMALIZE),fl=te(U,U.FRACT),Is=te(U,U.SIN),vr=te(U,U.COS),aF=te(U,U.TAN),lF=te(U,U.ASIN),cF=te(U,U.ACOS),hF=te(U,U.ATAN),es=te(U,U.ABS),Tw=te(U,U.SIGN),Ya=te(U,U.LENGTH),uF=te(U,U.NEGATE),dF=te(U,U.ONE_MINUS),fF=te(U,U.DFDX),pF=te(U,U.DFDY),mF=te(U,U.ROUND),gF=te(U,U.RECIPROCAL),yF=te(U,U.TRUNC),xF=te(U,U.FWIDTH);U.BITCAST;const _F=te(U,U.TRANSPOSE),vF=te(U,U.ATAN2),hf=te(U,U.MIN),qn=te(U,U.MAX),ww=te(U,U.MOD),Aw=te(U,U.STEP),SF=te(U,U.REFLECT),bF=te(U,U.DISTANCE),MF=te(U,U.DIFFERENCE),Ux=te(U,U.DOT),Ew=te(U,U.CROSS),ep=te(U,U.POW),Rw=te(U,U.POW,2),TF=te(U,U.POW,3),wF=te(U,U.POW,4),AF=te(U,U.TRANSFORM_DIRECTION),EF=o=>Pt(Tw(o),ep(es(o),1/3)),RF=o=>Ux(o,o),Ft=te(U,U.MIX),Ir=(o,e=0,t=1)=>fe(new U(U.CLAMP,fe(o),fe(e),fe(t))),CF=o=>Ir(o),Cw=te(U,U.REFRACT),Io=te(U,U.SMOOTHSTEP),NF=te(U,U.FACEFORWARD),PF=Me(([o])=>{const i=43758.5453,n=Ux(o.xy,we(12.9898,78.233)),s=ww(n,tF);return fl(Is(s).mul(i))}),IF=(o,e,t)=>Ft(e,t,o),LF=(o,e,t)=>Io(e,t,o);K("all",vw);K("any",iF);K("equals",nF);K("radians",sF);K("degrees",rF);K("exp",Sw);K("exp2",ly);K("log",bw);K("log2",Jf);K("sqrt",Dx);K("inverseSqrt",oF);K("floor",Qf);K("ceil",Mw);K("normalize",Dc);K("fract",fl);K("sin",Is);K("cos",vr);K("tan",aF);K("asin",lF);K("acos",cF);K("atan",hF);K("abs",es);K("sign",Tw);K("length",Ya);K("lengthSq",RF);K("negate",uF);K("oneMinus",dF);K("dFdx",fF);K("dFdy",pF);K("round",mF);K("reciprocal",gF);K("trunc",yF);K("fwidth",xF);K("atan2",vF);K("min",hf);K("max",qn);K("mod",ww);K("step",Aw);K("reflect",SF);K("distance",bF);K("dot",Ux);K("cross",Ew);K("pow",ep);K("pow2",Rw);K("pow3",TF);K("pow4",wF);K("transformDirection",AF);K("mix",IF);K("clamp",Ir);K("refract",Cw);K("smoothstep",LF);K("faceForward",NF);K("difference",MF);K("saturate",CF);K("cbrt",EF);K("transpose",_F);K("rand",PF);class DF extends st{static get type(){return"ConditionalNode"}constructor(e,t,i=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=i}getNodeType(e){const t=this.ifNode.getNodeType(e);if(this.elseNode!==null){const i=this.elseNode.getNodeType(e);if(e.getTypeLength(i)>e.getTypeLength(t))return i}return t}setup(e){const t=this.condNode.cache(),i=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,s=e.context.nodeBlock;e.getDataFromNode(i).parentNodeBlock=s,n!==null&&(e.getDataFromNode(n).parentNodeBlock=s);const r=e.getNodeProperties(this);r.condNode=t,r.ifNode=i.context({nodeBlock:i}),r.elseNode=n?n.context({nodeBlock:n}):null}generate(e,t){const i=this.getNodeType(e),n=e.getDataFromNode(this);if(n.nodeProperty!==void 0)return n.nodeProperty;const{condNode:s,ifNode:r,elseNode:a}=e.getNodeProperties(this),l=t!=="void",c=l?Ra(i).build(e):"";n.nodeProperty=c;const h=s.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${h} ) {

`).addFlowTab();let u=r.build(e,i);if(u&&(l?u=c+" = "+u+";":u="return "+u+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+u+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let d=a.build(e,i);d&&(l?d=c+" = "+d+";":d="return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(c,i,t)}}const tn=te(DF);K("select",tn);const UF=(...o)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),tn(...o));K("cond",UF);class Nw extends st{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const i=this.node.build(e);return e.setContext(t),i}generate(e,t){const i=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(i),n}}const Fx=te(Nw),FF=(o,e)=>Fx(o,{label:e});K("context",Fx);K("label",FF);class BF extends st{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:i}=this,n=e.getVarFromNode(this,i,e.getVectorType(this.getNodeType(e))),s=e.getPropertyName(n),r=t.build(e,n.type);return e.addLineFlowCode(`${s} = ${r}`,this),s}}const Pw=te(BF);K("temp",Pw);K("toVar",(...o)=>Pw(...o).append());class OF extends st{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let i=t.varying;if(i===void 0){const n=this.name,s=this.getNodeType(e);t.varying=i=e.getVaryingFromNode(this,n,s),t.node=this.node}return i.needsInterpolation||(i.needsInterpolation=e.shaderStage==="fragment"),i}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),i=this.setupVarying(e);if(t.propertyName===void 0){const n=this.getNodeType(e),s=e.getPropertyName(i,Rv.VERTEX);e.flowNodeFromShaderStage(Rv.VERTEX,this.node,n,s),t.propertyName=s}return e.getPropertyName(i)}}const er=te(OF);K("varying",er);const lh="WorkingColorSpace",Bx="OutputColorSpace";function Ov(o){let e=null;return o===Pn?e="Linear":o===He&&(e="sRGB"),e}function cy(o,e){return Ov(o)+"To"+Ov(e)}class tp extends ri{static get type(){return"ColorSpaceNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.source=t,this.target=i}getColorSpace(e,t){return t===lh?yn.workingColorSpace:t===Bx?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{renderer:t}=e,{colorNode:i}=this,n=this.getColorSpace(e,this.source),s=this.getColorSpace(e,this.target);if(n===s)return i;const r=cy(n,s);let a=null;const l=t.nodes.library.getColorSpaceFunction(r);return l!==null?a=ot(l(i.rgb),i.a):(console.error("ColorSpaceNode: Unsupported Color Space configuration.",r),a=i),a}}const zF=o=>fe(new tp(fe(o),lh,Bx)),kF=o=>fe(new tp(fe(o),Bx,lh)),GF=(o,e)=>fe(new tp(fe(o),lh,e)),Iw=(o,e)=>fe(new tp(fe(o),e,lh));K("toOutputColorSpace",zF);K("toWorkingColorSpace",kF);K("workingToColorSpace",GF);K("colorSpaceToWorking",Iw);let VF=class extends ah{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}};class Lw extends st{static get type(){return"ReferenceBaseNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.updateType=ct.OBJECT}setGroup(e){return this.group=e,this}element(e){return fe(new VF(this,fe(e)))}setNodeType(e){const t=at(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const HF=(o,e,t)=>fe(new Lw(o,e,t));class WF extends Lw{static get type(){return"RendererReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.renderer=i,this.setGroup(ut)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const $F=(o,e,t)=>fe(new WF(o,e,t));class XF extends ri{static get type(){return"ToneMappingNode"}constructor(e,t=YF,i=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=i}getCacheKey(){return tf(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,i=this.toneMapping;if(i===Va)return t;let n=null;const s=e.renderer.nodes.library.getToneMappingFunction(i);return s!==null?n=ot(s(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",i),n=t),n}}const qF=(o,e,t)=>fe(new XF(o,fe(e),fe(t))),YF=$F("toneMappingExposure","float");K("toneMapping",(o,e,t)=>qF(e,t,o));class ZF extends Ex{static get type(){return"BufferAttributeNode"}constructor(e,t=null,i=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=i,this.bufferOffset=n,this.usage=ef,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),i=this.value,n=e.getTypeLength(t),s=this.bufferStride||n,r=this.bufferOffset,a=i.isInterleavedBuffer===!0?i:new HT(i,s),l=new Sx(a,n,r);a.setUsage(this.usage),this.attribute=l,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),i=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(i);let s=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=n,s=n):s=er(this).build(e,t),s}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Ox=(o,e,t,i)=>fe(new ZF(o,e,t,i)),KF=(o,e,t,i)=>Ox(o,e,t,i).setUsage(Fa),zv=(o,e,t,i)=>Ox(o,e,t,i).setInstanced(!0),kv=(o,e,t,i)=>KF(o,e,t,i).setInstanced(!0);K("toAttribute",o=>Ox(o.value));class jF extends st{static get type(){return"ComputeNode"}constructor(e,t,i=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=i,this.dispatchCount=0,this.version=1,this.updateBeforeType=ct.OBJECT,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let i=t[0];for(let n=1;n<t.length;n++)i*=t[n];this.dispatchCount=Math.ceil(e/i)}onInit(){}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if(t==="compute"){const i=this.computeNode.build(e,"void");i!==""&&e.addLineFlowCode(i,this)}}}const JF=(o,e,t)=>fe(new jF(fe(o),e,t));K("compute",JF);class QF extends st{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const i=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const s=this.node.build(e,...t);return e.setCache(i),s}}const td=(o,...e)=>fe(new QF(fe(o),...e));K("cache",td);class eB extends st{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const tB=te(eB);K("bypass",tB);class Dw extends st{static get type(){return"RemapNode"}constructor(e,t,i,n=ee(0),s=ee(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=i,this.outLowNode=n,this.outHighNode=s,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:i,outLowNode:n,outHighNode:s,doClamp:r}=this;let a=e.sub(t).div(i.sub(t));return r===!0&&(a=a.clamp()),a.mul(s.sub(n)).add(n)}}const iB=te(Dw,null,null,{doClamp:!1}),nB=te(Dw);K("remap",iB);K("remapClamp",nB);class sB extends st{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const i=this.getNodeType(e),n=this.snippet;if(i==="void")e.addLineFlowCode(n,this);else return e.format(`( ${n} )`,i,t)}}const Uc=te(sB),rB=o=>(o?tn(o,Uc("discard")):Uc("discard")).append();K("discard",rB);class oB extends ri{static get type(){return"RenderOutputNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=i,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const i=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||Va,n=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||Co;return i!==Va&&(t=t.toneMapping(i)),n!==Co&&n!==yn.workingColorSpace&&(t=t.workingToColorSpace(n)),t}}const aB=(o,e=null,t=null)=>fe(new oB(fe(o),e,t));K("renderOutput",aB);class lB extends st{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const i=this.getAttributeName(e);if(e.hasGeometryAttribute(i)){const n=e.geometry.getAttribute(i);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),i=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const s=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(s),a=e.getAttribute(t,r);return e.shaderStage==="vertex"?e.format(a.name,r,i):er(this).build(e,i)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(i)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Zs=(o,e)=>fe(new lB(o,e)),ip=o=>Zs("uv"+(o>0?o:""),"vec2");class cB extends st{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const i=this.textureNode.build(e,"property"),n=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${i}, ${n} )`,this.getNodeType(e),t)}}const ac=te(cB);class hB extends dl{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=ct.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,i=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(i&&i.width!==void 0){const{width:n,height:s}=i;this.value=Math.log2(Math.max(n,s))}}}const uB=te(hB);class ch extends dl{static get type(){return"TextureNode"}constructor(e,t=null,i=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=i,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=ct.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===wi?"uvec4":this.value.type===Hi?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return ip(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=at(this.value.matrix)),this._matrixUniform.mul(Q(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?ct.FRAME:ct.NONE,this}setupUV(e,t){const i=this.value;return e.isFlipY()&&(i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0||i.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(Xt(ac(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let i=this.uvNode;(i===null||e.context.forceUVContext===!0)&&e.context.getUV&&(i=e.context.getUV(this)),i||(i=this.getDefaultUV()),this.updateMatrix===!0&&(i=this.getTransformedUV(i)),i=this.setupUV(e,i);let n=this.levelNode;n===null&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),t.uvNode=i,t.levelNode=n,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,i,n,s,r,a,l){const c=this.value;let h;return n?h=e.generateTextureLevel(c,t,i,n,r):s?h=e.generateTextureBias(c,t,i,s,r):l?h=e.generateTextureGrad(c,t,i,l,r):a?h=e.generateTextureCompare(c,t,i,a,r):this.sampler===!1?h=e.generateTextureLoad(c,t,i,r):h=e.generateTexture(c,t,i,r),h}generate(e,t){const i=e.getNodeProperties(this),n=this.value;if(!n||n.isTexture!==!0)throw new Error("TextureNode: Need a three.js texture.");const s=super.generate(e,"property");if(t==="sampler")return s+"_sampler";if(e.isReference(t))return s;{const r=e.getDataFromNode(this);let a=r.propertyName;if(a===void 0){const{uvNode:h,levelNode:u,biasNode:d,compareNode:f,depthNode:p,gradNode:g}=i,m=this.generateUV(e,h),y=u?u.build(e,"float"):null,x=d?d.build(e,"float"):null,_=p?p.build(e,"int"):null,v=f?f.build(e,"float"):null,E=g?[g[0].build(e,"vec2"),g[1].build(e,"vec2")]:null,M=e.getVarFromNode(this);a=e.getPropertyName(M);const b=this.generateSnippet(e,s,m,y,x,_,v,E);e.addLineFlowCode(`${a} = ${b}`,this),r.snippet=b,r.propertyName=a}let l=a;const c=this.getNodeType(e);return e.needsToWorkingColorSpace(n)&&(l=Iw(Uc(l,c),n.colorSpace).setup(e).build(e,c)),e.format(l,c,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}blur(e){const t=this.clone();return t.biasNode=fe(e).mul(uB(t)),t.referenceNode=this.getSelf(),fe(t)}level(e){const t=this.clone();return t.levelNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}size(e){return ac(this,e)}bias(e){const t=this.clone();return t.biasNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}compare(e){const t=this.clone();return t.compareNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}grad(e,t){const i=this.clone();return i.gradNode=[fe(e),fe(t)],i.referenceNode=this.getSelf(),fe(i)}depth(e){const t=this.clone();return t.depthNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const Yt=te(ch),Vn=(...o)=>Yt(...o).setSampler(!1),Dl=at("float").label("cameraNear").setGroup(ut).onRenderUpdate(({camera:o})=>o.near),Ul=at("float").label("cameraFar").setGroup(ut).onRenderUpdate(({camera:o})=>o.far),dB=at("float").label("cameraLogDepth").setGroup(ut).onRenderUpdate(({camera:o})=>2/(Math.log(o.far+1)/Math.LN2)),zx=at("mat4").label("cameraProjectionMatrix").setGroup(ut).onRenderUpdate(({camera:o})=>o.projectionMatrix),tr=at("mat4").label("cameraViewMatrix").setGroup(ut).onRenderUpdate(({camera:o})=>o.matrixWorldInverse),fB=at(new V).label("cameraPosition").setGroup(ut).onRenderUpdate(({camera:o},e)=>e.value.setFromMatrixPosition(o.matrixWorld));class _t extends st{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=ct.OBJECT,this._uniformNode=new dl(null)}getNodeType(){const e=this.scope;if(e===_t.WORLD_MATRIX)return"mat4";if(e===_t.POSITION||e===_t.VIEW_POSITION||e===_t.DIRECTION||e===_t.SCALE)return"vec3"}update(e){const t=this.object3d,i=this._uniformNode,n=this.scope;if(n===_t.WORLD_MATRIX)i.value=t.matrixWorld;else if(n===_t.POSITION)i.value=i.value||new V,i.value.setFromMatrixPosition(t.matrixWorld);else if(n===_t.SCALE)i.value=i.value||new V,i.value.setFromMatrixScale(t.matrixWorld);else if(n===_t.DIRECTION)i.value=i.value||new V,t.getWorldDirection(i.value);else if(n===_t.VIEW_POSITION){const s=e.camera;i.value=i.value||new V,i.value.setFromMatrixPosition(t.matrixWorld),i.value.applyMatrix4(s.matrixWorldInverse)}}generate(e){const t=this.scope;return t===_t.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===_t.POSITION||t===_t.VIEW_POSITION||t===_t.DIRECTION||t===_t.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}_t.WORLD_MATRIX="worldMatrix";_t.POSITION="position";_t.SCALE="scale";_t.VIEW_POSITION="viewPosition";_t.DIRECTION="direction";_t.DIRECTION;_t.WORLD_MATRIX;_t.POSITION;_t.SCALE;_t.VIEW_POSITION;class us extends _t{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}us.DIRECTION;const Lo=ge(us,us.WORLD_MATRIX);us.POSITION;us.SCALE;us.VIEW_POSITION;const pB=at(new Mn).onObjectUpdate(({object:o},e)=>e.value.getNormalMatrix(o.matrixWorld)),np=tr.mul(Lo).toVar("modelViewMatrix"),Uw=Zs("position","vec3"),Bi=Uw.varying("positionLocal"),Gv=Uw.varying("positionPrevious"),hy=Lo.mul(Bi).xyz.varying("v_positionWorld"),Fw=Bi.transformDirection(Lo).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),Ui=np.mul(Bi).xyz.varying("v_positionView"),zt=Ui.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class mB extends st{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:i}=e;return t.coordinateSystem===Wn&&i.side===Js?"false":e.getFrontFacing()}}const gB=ge(mB),sp=ee(gB).mul(2).sub(1),Bw=Zs("normal","vec3"),ds=Me(o=>o.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),Q(0,1,0)):Bw,"vec3").once()().toVar("normalLocal"),yB=Ui.dFdx().cross(Ui.dFdy()).normalize().toVar("normalFlat"),Yn=Me(o=>{let e;return o.material.flatShading===!0?e=yB:e=er(zw(ds),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),rp=er(Yn.transformDirection(tr),"v_normalWorld").normalize().toVar("normalWorld"),ii=Me(o=>o.context.setupNormal(),"vec3").once()().mul(sp).toVar("transformedNormalView"),Ow=ii.transformDirection(tr).toVar("transformedNormalWorld"),$l=Me(o=>o.context.setupClearcoatNormal(),"vec3").once()().mul(sp).toVar("transformedClearcoatNormalView"),xB=Me(([o,e=Lo])=>{const t=an(e),i=o.div(Q(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(i).xyz}),zw=Me(([o],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(o);const i=pB.mul(o);return tr.transformDirection(i)}),_B=at(0).onReference(({material:o})=>o).onRenderUpdate(({material:o})=>o.refractionRatio),vB=zt.negate().reflect(ii),SB=zt.negate().refract(ii,_B),bB=vB.transformDirection(tr).toVar("reflectVector"),MB=SB.transformDirection(tr).toVar("reflectVector");class TB extends ch{static get type(){return"CubeTextureNode"}constructor(e,t=null,i=null,n=null){super(e,t,i,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Ro?bB:e.mapping===Qa?MB:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Q(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const i=this.value;return e.renderer.coordinateSystem===No||!i.isRenderTargetTexture?Q(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}}const Fc=te(TB);class kw extends dl{static get type(){return"BufferNode"}constructor(e,t,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=i}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const kx=(o,e,t)=>fe(new kw(o,e,t));class wB extends ah{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),i=this.getNodeType();return e.format(t,"vec4",i)}}class AB extends kw{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=ct.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,i=this.getElementLength(),n=this.getElementType();if(i===1)for(let s=0;s<e.length;s++){const r=s*4;t[r]=e[s]}else if(n==="color")for(let s=0;s<e.length;s++){const r=s*4,a=e[s];t[r]=a.r,t[r+1]=a.g,t[r+2]=a.b||0}else for(let s=0;s<e.length;s++){const r=s*4,a=e[s];t[r]=a.x,t[r+1]=a.y,t[r+2]=a.z||0,t[r+3]=a.w||0}}setup(e){const t=this.array.length;this._elementType=this.elementType===null?sf(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let i=Float32Array;return this._elementType.charAt(0)==="i"?i=Int32Array:this._elementType.charAt(0)==="u"&&(i=Uint32Array),this.value=new i(t*4),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return fe(new wB(this,fe(e)))}}const Bc=(o,e)=>fe(new AB(o,e));class EB extends ah{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}}class Gx extends st{static get type(){return"ReferenceNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.name=null,this.updateType=ct.OBJECT}element(e){return fe(new EB(this,fe(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=kx(null,e,this.count):Array.isArray(this.getValueFromReference())?t=Bc(null,e):e==="texture"?t=Yt(null):e==="cubeTexture"?t=Fc(null):t=at(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const kt=(o,e,t)=>fe(new Gx(o,e,t)),Vv=(o,e,t,i)=>fe(new Gx(o,e,i,t));class RB extends Gx{static get type(){return"MaterialReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.material=i,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const Tr=(o,e,t)=>fe(new RB(o,e,t)),Gw=Me(o=>(o.geometry.hasAttribute("tangent")===!1&&o.geometry.computeTangents(),Zs("tangent","vec4")))(),Vx=Gw.xyz.toVar("tangentLocal"),Vw=np.mul(ot(Vx,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),CB=o=>o.mul(Gw.w).xyz,NB=er(CB(Yn.cross(Vw)),"v_bitangentView").normalize().toVar("bitangentView"),Xl=an(Vw,NB,Yn),PB=(()=>{let o=qa.cross(zt);return o=o.cross(qa).normalize(),o=Ft(o,ii,oo.mul(Fs.oneMinus()).oneMinus().pow2().pow2()).normalize(),o})(),IB=Me(o=>{const{eye_pos:e,surf_norm:t,mapN:i,uv:n}=o,s=e.dFdx(),r=e.dFdy(),a=n.dFdx(),l=n.dFdy(),c=t,h=r.cross(c),u=c.cross(s),d=h.mul(a.x).add(u.mul(l.x)),f=h.mul(a.y).add(u.mul(l.y)),p=d.dot(d).max(f.dot(f)),g=sp.mul(p.inverseSqrt());return bn(d.mul(i.x,g),f.mul(i.y,g),c.mul(i.z)).normalize()});class LB extends ri{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Nr}setup(e){const{normalMapType:t,scaleNode:i}=this;let n=this.node.mul(2).sub(1);i!==null&&(n=Q(n.xy.mul(i),n.z));let s=null;return t===wL?s=zw(n):t===Nr&&(e.hasGeometryAttribute("tangent")===!0?s=Xl.mul(n).normalize():s=IB({eye_pos:Ui,surf_norm:Yn,mapN:n,uv:ip()})),s}}const Hv=te(LB),DB=Me(({textureNode:o,bumpScale:e})=>{const t=n=>o.cache().context({getUV:s=>n(s.uvNode||ip()),forceUVContext:!0}),i=ee(t(n=>n));return we(ee(t(n=>n.add(n.dFdx()))).sub(i),ee(t(n=>n.add(n.dFdy()))).sub(i)).mul(e)}),UB=Me(o=>{const{surf_pos:e,surf_norm:t,dHdxy:i}=o,n=e.dFdx().normalize(),s=e.dFdy().normalize(),r=t,a=s.cross(r),l=r.cross(n),c=n.dot(a).mul(sp),h=c.sign().mul(i.x.mul(a).add(i.y.mul(l)));return c.abs().mul(t).sub(h).normalize()});class FB extends ri{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=DB({textureNode:this.textureNode,bumpScale:e});return UB({surf_pos:Ui,surf_norm:Yn,dHdxy:t})}}const BB=te(FB),Wv=new Map;class q extends st{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let i=Wv.get(e);return i===void 0&&(i=Tr(e,t),Wv.set(e,i)),i}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,i=this.scope;let n=null;if(i===q.COLOR){const s=t.color!==void 0?this.getColor(i):Q();t.map&&t.map.isTexture===!0?n=s.mul(this.getTexture("map")):n=s}else if(i===q.OPACITY){const s=this.getFloat(i);t.alphaMap&&t.alphaMap.isTexture===!0?n=s.mul(this.getTexture("alpha")):n=s}else if(i===q.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?n=this.getTexture("specular").r:n=ee(1);else if(i===q.SPECULAR_INTENSITY){const s=this.getFloat(i);t.specularMap?n=s.mul(this.getTexture(i).a):n=s}else if(i===q.SPECULAR_COLOR){const s=this.getColor(i);t.specularColorMap&&t.specularColorMap.isTexture===!0?n=s.mul(this.getTexture(i).rgb):n=s}else if(i===q.ROUGHNESS){const s=this.getFloat(i);t.roughnessMap&&t.roughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).g):n=s}else if(i===q.METALNESS){const s=this.getFloat(i);t.metalnessMap&&t.metalnessMap.isTexture===!0?n=s.mul(this.getTexture(i).b):n=s}else if(i===q.EMISSIVE){const s=this.getFloat("emissiveIntensity"),r=this.getColor(i).mul(s);t.emissiveMap&&t.emissiveMap.isTexture===!0?n=r.mul(this.getTexture(i)):n=r}else if(i===q.NORMAL)t.normalMap?(n=Hv(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=t.normalMapType):t.bumpMap?n=BB(this.getTexture("bump").r,this.getFloat("bumpScale")):n=Yn;else if(i===q.CLEARCOAT){const s=this.getFloat(i);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?n=s.mul(this.getTexture(i).r):n=s}else if(i===q.CLEARCOAT_ROUGHNESS){const s=this.getFloat(i);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).r):n=s}else if(i===q.CLEARCOAT_NORMAL)t.clearcoatNormalMap?n=Hv(this.getTexture(i),this.getCache(i+"Scale","vec2")):n=Yn;else if(i===q.SHEEN){const s=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?n=s.mul(this.getTexture("sheenColor").rgb):n=s}else if(i===q.SHEEN_ROUGHNESS){const s=this.getFloat(i);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).a):n=s,n=n.clamp(.07,1)}else if(i===q.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const s=this.getTexture(i);n=Px(Fl.x,Fl.y,Fl.y.negate(),Fl.x).mul(s.rg.mul(2).sub(we(1)).normalize().mul(s.b))}else n=Fl;else if(i===q.IRIDESCENCE_THICKNESS){const s=kt("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const r=kt("0","float",t.iridescenceThicknessRange);n=s.sub(r).mul(this.getTexture(i).g).add(r)}else n=s}else if(i===q.TRANSMISSION){const s=this.getFloat(i);t.transmissionMap?n=s.mul(this.getTexture(i).r):n=s}else if(i===q.THICKNESS){const s=this.getFloat(i);t.thicknessMap?n=s.mul(this.getTexture(i).g):n=s}else if(i===q.IOR)n=this.getFloat(i);else if(i===q.LIGHT_MAP)n=this.getTexture(i).rgb.mul(this.getFloat("lightMapIntensity"));else if(i===q.AO_MAP)n=this.getTexture(i).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const s=this.getNodeType(e);n=this.getCache(i,s)}return n}}q.ALPHA_TEST="alphaTest";q.COLOR="color";q.OPACITY="opacity";q.SHININESS="shininess";q.SPECULAR="specular";q.SPECULAR_STRENGTH="specularStrength";q.SPECULAR_INTENSITY="specularIntensity";q.SPECULAR_COLOR="specularColor";q.REFLECTIVITY="reflectivity";q.ROUGHNESS="roughness";q.METALNESS="metalness";q.NORMAL="normal";q.CLEARCOAT="clearcoat";q.CLEARCOAT_ROUGHNESS="clearcoatRoughness";q.CLEARCOAT_NORMAL="clearcoatNormal";q.EMISSIVE="emissive";q.ROTATION="rotation";q.SHEEN="sheen";q.SHEEN_ROUGHNESS="sheenRoughness";q.ANISOTROPY="anisotropy";q.IRIDESCENCE="iridescence";q.IRIDESCENCE_IOR="iridescenceIOR";q.IRIDESCENCE_THICKNESS="iridescenceThickness";q.IOR="ior";q.TRANSMISSION="transmission";q.THICKNESS="thickness";q.ATTENUATION_DISTANCE="attenuationDistance";q.ATTENUATION_COLOR="attenuationColor";q.LINE_SCALE="scale";q.LINE_DASH_SIZE="dashSize";q.LINE_GAP_SIZE="gapSize";q.LINE_WIDTH="linewidth";q.LINE_DASH_OFFSET="dashOffset";q.POINT_WIDTH="pointWidth";q.DISPERSION="dispersion";q.LIGHT_MAP="light";q.AO_MAP="ao";const OB=ge(q,q.ALPHA_TEST),zB=ge(q,q.COLOR),kB=ge(q,q.SHININESS),GB=ge(q,q.EMISSIVE),Hw=ge(q,q.OPACITY),VB=ge(q,q.SPECULAR),$v=ge(q,q.SPECULAR_INTENSITY),HB=ge(q,q.SPECULAR_COLOR),id=ge(q,q.SPECULAR_STRENGTH),Um=ge(q,q.REFLECTIVITY),WB=ge(q,q.ROUGHNESS),$B=ge(q,q.METALNESS),XB=ge(q,q.NORMAL).context({getUV:null}),qB=ge(q,q.CLEARCOAT),YB=ge(q,q.CLEARCOAT_ROUGHNESS),ZB=ge(q,q.CLEARCOAT_NORMAL).context({getUV:null}),KB=ge(q,q.ROTATION),jB=ge(q,q.SHEEN),JB=ge(q,q.SHEEN_ROUGHNESS),QB=ge(q,q.ANISOTROPY),e3=ge(q,q.IRIDESCENCE),t3=ge(q,q.IRIDESCENCE_IOR),i3=ge(q,q.IRIDESCENCE_THICKNESS),n3=ge(q,q.TRANSMISSION),s3=ge(q,q.THICKNESS),r3=ge(q,q.IOR),o3=ge(q,q.ATTENUATION_DISTANCE),a3=ge(q,q.ATTENUATION_COLOR),l3=ge(q,q.LINE_SCALE),c3=ge(q,q.LINE_DASH_SIZE),h3=ge(q,q.LINE_GAP_SIZE);q.LINE_WIDTH;q.LINE_DASH_OFFSET;q.POINT_WIDTH;const u3=ge(q,q.DISPERSION),Ww=ge(q,q.LIGHT_MAP),d3=ge(q,q.AO_MAP),Fl=at(new mt).onReference(function(o){return o.material}).onRenderUpdate(function({material:o}){this.value.set(o.anisotropy*Math.cos(o.anisotropyRotation),o.anisotropy*Math.sin(o.anisotropyRotation))});class f3 extends ri{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if(e.shaderStage==="fragment")return er(e.context.mvp);const t=this.positionNode||Bi,i=e.renderer.nodes.modelViewMatrix||np;return zx.mul(i).mul(t)}}const uy=te(f3);class Bt extends st{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),i=this.scope;let n;if(i===Bt.VERTEX)n=e.getVertexIndex();else if(i===Bt.INSTANCE)n=e.getInstanceIndex();else if(i===Bt.DRAW)n=e.getDrawIndex();else if(i===Bt.INVOCATION_LOCAL)n=e.getInvocationLocalIndex();else if(i===Bt.INVOCATION_SUBGROUP)n=e.getInvocationSubgroupIndex();else if(i===Bt.SUBGROUP)n=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+i);let s;return e.shaderStage==="vertex"||e.shaderStage==="compute"?s=n:s=er(this).build(e,t),s}}Bt.VERTEX="vertex";Bt.INSTANCE="instance";Bt.SUBGROUP="subgroup";Bt.INVOCATION_LOCAL="invocationLocal";Bt.INVOCATION_SUBGROUP="invocationSubgroup";Bt.DRAW="draw";const p3=ge(Bt,Bt.VERTEX),Hx=ge(Bt,Bt.INSTANCE);Bt.SUBGROUP;Bt.INVOCATION_SUBGROUP;Bt.INVOCATION_LOCAL;const m3=ge(Bt,Bt.DRAW);class g3 extends st{static get type(){return"InstanceNode"}constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=ct.FRAME,this.buffer=null,this.bufferColor=null}setup(e){let t=this.instanceMatrixNode,i=this.instanceColorNode;const n=this.instanceMesh;if(t===null){const a=n.instanceMatrix;if(n.count<=1e3)t=kx(a.array,"mat4",Math.max(n.count,1)).element(Hx);else{const l=new XD(a.array,16,1);this.buffer=l;const c=a.usage===Fa?kv:zv,h=[c(l,"vec4",16,0),c(l,"vec4",16,4),c(l,"vec4",16,8),c(l,"vec4",16,12)];t=Xa(...h)}this.instanceMatrixNode=t}const s=n.instanceColor;if(s&&i===null){const a=new ID(s.array,3),l=s.usage===Fa?kv:zv;this.bufferColor=a,i=Q(l(a,"vec3",3,0)),this.instanceColorNode=i}const r=t.mul(Bi).xyz;if(Bi.assign(r),e.hasGeometryAttribute("normal")){const a=xB(ds,t);ds.assign(a)}this.instanceColorNode!==null&&of("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==Fa&&this.buffer!=null&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==Fa&&this.bufferColor!=null&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const y3=te(g3);class x3 extends st{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Hx:this.batchingIdNode=m3);const i=Me(([p])=>{const g=ac(Vn(this.batchMesh._indirectTexture),0),m=Xt(p).modInt(Xt(g)),y=Xt(p).div(Xt(g));return Vn(this.batchMesh._indirectTexture,Ps(m,y)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(Xt(this.batchingIdNode)),n=this.batchMesh._matricesTexture,s=ac(Vn(n),0),r=ee(i).mul(4).toInt().toVar(),a=r.modInt(s),l=r.div(Xt(s)),c=Xa(Vn(n,Ps(a,l)),Vn(n,Ps(a.add(1),l)),Vn(n,Ps(a.add(2),l)),Vn(n,Ps(a.add(3),l))),h=this.batchMesh._colorsTexture;if(h!==null){const g=Me(([m])=>{const y=ac(Vn(h),0).x,x=m,_=x.modInt(y),v=x.div(y);return Vn(h,Ps(_,v)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(i);of("vec3","vBatchColor").assign(g)}const u=an(c);Bi.assign(c.mul(Bi));const d=ds.div(Q(u[0].dot(u[0]),u[1].dot(u[1]),u[2].dot(u[2]))),f=u.mul(d).xyz;ds.assign(f),e.hasGeometryAttribute("tangent")&&Vx.mulAssign(u)}}const _3=te(x3),Xv=new WeakMap;class v3 extends st{static get type(){return"SkinningNode"}constructor(e,t=!1){super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=ct.OBJECT,this.skinIndexNode=Zs("skinIndex","uvec4"),this.skinWeightNode=Zs("skinWeight","vec4");let i,n,s;t?(i=kt("bindMatrix","mat4"),n=kt("bindMatrixInverse","mat4"),s=Vv("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(i=at(e.bindMatrix,"mat4"),n=at(e.bindMatrixInverse,"mat4"),s=kx(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=i,this.bindMatrixInverseNode=n,this.boneMatricesNode=s,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=Bi){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=e.element(i.x),l=e.element(i.y),c=e.element(i.z),h=e.element(i.w),u=s.mul(t),d=bn(a.mul(n.x).mul(u),l.mul(n.y).mul(u),c.mul(n.z).mul(u),h.mul(n.w).mul(u));return r.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=ds){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=e.element(i.x),l=e.element(i.y),c=e.element(i.z),h=e.element(i.w);let u=bn(n.x.mul(a),n.y.mul(l),n.z.mul(c),n.w.mul(h));return u=r.mul(u).mul(s),u.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Vv("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Gv)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&Gv.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(Bi.assign(t),e.hasGeometryAttribute("normal")){const i=this.getSkinnedNormal();ds.assign(i),e.hasGeometryAttribute("tangent")&&Vx.assign(i)}}generate(e,t){if(t!=="void")return Bi.build(e,t)}update(e){const i=(this.useReference?e.object:this.skinnedMesh).skeleton;Xv.get(i)!==e.frameId&&(Xv.set(i,e.frameId),this.previousBoneMatricesNode!==null&&i.previousBoneMatrices.set(i.boneMatrices),i.update())}}const S3=o=>fe(new v3(o,!0));class b3 extends st{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const i={};for(let s=0,r=this.params.length-1;s<r;s++){const a=this.params[s],l=a.isNode!==!0&&a.name||this.getVarName(s),c=a.isNode!==!0&&a.type||"int";i[l]=Uc(l,c)}const n=e.addStack();return t.returnsNode=this.params[this.params.length-1](i,n,e),t.stackNode=n,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),i=this.params,n=t.stackNode;for(let a=0,l=i.length-1;a<l;a++){const c=i[a];let h=null,u=null,d=null,f=null,p=null,g=null;c.isNode?(f="int",d=this.getVarName(a),h="0",u=c.build(e,f),p="<"):(f=c.type||"int",d=c.name||this.getVarName(a),h=c.start,u=c.end,p=c.condition,g=c.update,typeof h=="number"?h=h.toString():h&&h.isNode&&(h=h.build(e,f)),typeof u=="number"?u=u.toString():u&&u.isNode&&(u=u.build(e,f)),h!==void 0&&u===void 0?(h=h+" - 1",u="0",p=">="):u!==void 0&&h===void 0&&(h="0",p="<"),p===void 0&&(Number(h)>Number(u)?p=">=":p="<"));const m={start:h,end:u,condition:p},y=m.start,x=m.end;let _="",v="",E="";g||(f==="int"||f==="uint"?p.includes("<")?g="++":g="--":p.includes("<")?g="+= 1.":g="-= 1."),_+=e.getVar(f,d)+" = "+y,v+=d+" "+p+" "+x,E+=d+" "+g;const M=`for ( ${_}; ${v}; ${E} )`;e.addFlowCode((a===0?`
`:"")+e.tab+M+` {

`).addFlowTab()}const s=n.build(e,"void"),r=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+s);for(let a=0,l=this.params.length-1;a<l;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),r}}const zs=(...o)=>fe(new b3($a(o,"int"))).append(),M3=()=>Uc("break").append(),Fm=new WeakMap,gn=new At,qv=Me(({bufferMap:o,influence:e,stride:t,width:i,depth:n,offset:s})=>{const r=Xt(p3).mul(t).add(s),a=r.div(i),l=r.sub(a.mul(i));return Vn(o,Ps(l,a)).depth(n).mul(e)});function T3(o){const e=o.morphAttributes.position!==void 0,t=o.morphAttributes.normal!==void 0,i=o.morphAttributes.color!==void 0,n=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,s=n!==void 0?n.length:0;let r=Fm.get(o);if(r===void 0||r.count!==s){let y=function(){g.dispose(),Fm.delete(o),o.removeEventListener("dispose",y)};r!==void 0&&r.texture.dispose();const a=o.morphAttributes.position||[],l=o.morphAttributes.normal||[],c=o.morphAttributes.color||[];let h=0;e===!0&&(h=1),t===!0&&(h=2),i===!0&&(h=3);let u=o.attributes.position.count*h,d=1;const f=4096;u>f&&(d=Math.ceil(u/f),u=f);const p=new Float32Array(u*d*4*s),g=new dD(p,u,d,s);g.type=_n,g.needsUpdate=!0;const m=h*4;for(let x=0;x<s;x++){const _=a[x],v=l[x],E=c[x],M=u*d*4*x;for(let b=0;b<_.count;b++){const A=b*m;e===!0&&(gn.fromBufferAttribute(_,b),p[M+A+0]=gn.x,p[M+A+1]=gn.y,p[M+A+2]=gn.z,p[M+A+3]=0),t===!0&&(gn.fromBufferAttribute(v,b),p[M+A+4]=gn.x,p[M+A+5]=gn.y,p[M+A+6]=gn.z,p[M+A+7]=0),i===!0&&(gn.fromBufferAttribute(E,b),p[M+A+8]=gn.x,p[M+A+9]=gn.y,p[M+A+10]=gn.z,p[M+A+11]=E.itemSize===4?gn.w:1)}}r={count:s,texture:g,stride:h,size:new mt(u,d)},Fm.set(o,r),o.addEventListener("dispose",y)}return r}class w3 extends st{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=at(1),this.updateType=ct.OBJECT}setup(e){const{geometry:t}=e,i=t.morphAttributes.position!==void 0,n=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,r=s!==void 0?s.length:0,{texture:a,stride:l,size:c}=T3(t);i===!0&&Bi.mulAssign(this.morphBaseInfluence),n===!0&&ds.mulAssign(this.morphBaseInfluence);const h=Xt(c.width);zs(r,({i:u})=>{const d=ee(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(Vn(this.mesh.morphTexture,Ps(Xt(u).add(1),Xt(Hx))).r):d.assign(kt("morphTargetInfluences","float").element(u).toVar()),i===!0&&Bi.addAssign(qv({bufferMap:a,influence:d,stride:l,width:h,depth:u,offset:Xt(0)})),n===!0&&ds.addAssign(qv({bufferMap:a,influence:d,stride:l,width:h,depth:u,offset:Xt(1)}))})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,i)=>t+i,0)}}const A3=te(w3),E3=o=>o.sort((e,t)=>e.id-t.id),R3=(o,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===o)return t;return null},Bm=new WeakMap;class $w extends st{static get type(){return"LightsNode"}constructor(e=[]){super("vec3"),this.totalDiffuseNode=Q().toVar("totalDiffuse"),this.totalSpecularNode=Q().toVar("totalSpecular"),this.outgoingLightNode=Q().toVar("outgoingLight"),this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const i of this._lightNodes)t.push(i.getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const i of t.nodes)i.build(e)}setupLightsNode(e){const t=[],i=this._lightNodes,n=E3(this._lights),s=e.renderer.nodes.library;for(const r of n)if(r.isNode)t.push(fe(r));else{let a=null;if(i!==null&&(a=R3(r.id,i)),a===null){const l=s.getLightNodeClass(r.constructor);if(l===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${r.constructor.name}`);continue}let c=null;Bm.has(r)?c=Bm.get(r):(c=new l(r),Bm.set(r,c)),t.push(c)}}this._lightNodes=t}setup(e){this._lightNodes===null&&this.setupLightsNode(e);const t=e.context,i=t.lightingModel;let n=this.outgoingLightNode;if(i){const{_lightNodes:s,totalDiffuseNode:r,totalSpecularNode:a}=this;t.outgoingLight=n;const l=e.addStack(),c=e.getDataFromNode(this);c.nodes=l.nodes,i.start(t,l,e);for(const y of s)y.build(e);i.indirect(t,l,e);const{backdrop:h,backdropAlpha:u}=t,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:g}=t.reflectedLight;let m=d.add(p);h!==null&&(u!==null?m=Q(u.mix(m,h)):m=Q(h),t.material.transparent=!0),r.assign(m),a.assign(f.add(g)),n.assign(r.add(a)),i.finish(t,l,e),n=n.bypass(e.removeStack())}return n}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}}const C3=te($w);class pl extends st{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class N3 extends pl{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class P3 extends Nw{static get type(){return"LightingContextNode"}constructor(e,t=null,i=null,n=null){super(e),this.lightingModel=t,this.backdropNode=i,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,i=Q().toVar("directDiffuse"),n=Q().toVar("directSpecular"),s=Q().toVar("indirectDiffuse"),r=Q().toVar("indirectSpecular"),a={directDiffuse:i,directSpecular:n,indirectDiffuse:s,indirectSpecular:r};return{radiance:Q().toVar("radiance"),irradiance:Q().toVar("irradiance"),iblIrradiance:Q().toVar("iblIrradiance"),ambientOcclusion:ee(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const I3=te(P3);class L3 extends pl{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Bl,Ol;class ti extends st{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===ti.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=ct.NONE;return(this.scope===ti.SIZE||this.scope===ti.VIEWPORT)&&(e=ct.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===ti.VIEWPORT?t!==null?Ol.copy(t.viewport):(e.getViewport(Ol),Ol.multiplyScalar(e.getPixelRatio())):t!==null?(Bl.width=t.width,Bl.height=t.height):e.getDrawingBufferSize(Bl)}setup(){const e=this.scope;let t=null;return e===ti.SIZE?t=at(Bl||(Bl=new mt)):e===ti.VIEWPORT?t=at(Ol||(Ol=new At)):t=we(op.div(dy)),t}generate(e){if(this.scope===ti.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const i=e.getNodeProperties(dy).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${i}.y - ${t}.y )`}return t}return super.generate(e)}}ti.COORDINATE="coordinate";ti.VIEWPORT="viewport";ti.SIZE="size";ti.UV="uv";const Oc=ge(ti,ti.UV),dy=ge(ti,ti.SIZE),op=ge(ti,ti.COORDINATE),Xw=ge(ti,ti.VIEWPORT);Xw.zw;Xw.xy;const zl=new mt;class qw extends ch{static get type(){return"ViewportTextureNode"}constructor(e=Oc,t=null,i=null){i===null&&(i=new UD,i.minFilter=Gs),super(i,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=ct.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(zl);const i=this.value;(i.image.width!==zl.width||i.image.height!==zl.height)&&(i.image.width=zl.width,i.image.height=zl.height,i.needsUpdate=!0);const n=i.generateMipmaps;i.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(i),i.generateMipmaps=n}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const D3=te(qw,null,null,{generateMipmaps:!0});let Om=null;class U3 extends qw{static get type(){return"ViewportDepthTextureNode"}constructor(e=Oc,t=null){Om===null&&(Om=new oh),super(e,t,Om)}}const F3=te(U3);class nn extends st{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===nn.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,i=this.valueNode;let n=null;if(t===nn.DEPTH_BASE)i!==null&&(n=Zw().assign(i));else if(t===nn.DEPTH)e.isPerspectiveCamera?n=B3(Ui.z,Dl,Ul):n=nd(Ui.z,Dl,Ul);else if(t===nn.LINEAR_DEPTH)if(i!==null)if(e.isPerspectiveCamera){const s=Yw(i,Dl,Ul);n=nd(s,Dl,Ul)}else n=i;else n=nd(Ui.z,Dl,Ul);return n}}nn.DEPTH_BASE="depthBase";nn.DEPTH="depth";nn.LINEAR_DEPTH="linearDepth";const nd=(o,e,t)=>o.add(e).div(e.sub(t)),B3=(o,e,t)=>e.add(o).mul(t).div(t.sub(e).mul(o)),Yw=(o,e,t)=>e.mul(t).div(t.sub(e).mul(o).sub(t)),Zw=te(nn,nn.DEPTH_BASE),Kw=ge(nn,nn.DEPTH),O3=te(nn,nn.LINEAR_DEPTH);F3();Kw.assign=o=>Zw(o);class Lr extends st{static get type(){return"ClippingNode"}constructor(e=Lr.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{localClipIntersection:i,localClippingCount:n,globalClippingCount:s}=t,r=s+n,a=i?r-n:r;return this.scope===Lr.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(t.planes,r,a):this.setupDefault(t.planes,r,a)}setupAlphaToCoverage(e,t,i){return Me(()=>{const n=Bc(e),s=Ra("float","distanceToPlane"),r=Ra("float","distanceToGradient"),a=Ra("float","clipOpacity");a.assign(1);let l;if(zs(i,({i:c})=>{l=n.element(c),s.assign(Ui.dot(l.xyz).negate().add(l.w)),r.assign(s.fwidth().div(2)),a.mulAssign(Io(r.negate(),r,s)),a.equal(0).discard()}),i<t){const c=Ra("float","unionclipOpacity");c.assign(1),zs({start:i,end:t},({i:h})=>{l=n.element(h),s.assign(Ui.dot(l.xyz).negate().add(l.w)),r.assign(s.fwidth().div(2)),c.mulAssign(Io(r.negate(),r,s).oneMinus())}),a.mulAssign(c.oneMinus())}wt.a.mulAssign(a),wt.a.equal(0).discard()})()}setupDefault(e,t,i){return Me(()=>{const n=Bc(e);let s;if(zs(i,({i:r})=>{s=n.element(r),Ui.dot(s.xyz).greaterThan(s.w).discard()}),i<t){const r=Ra("bool","clipped");r.assign(!0),zs({start:i,end:t},({i:a})=>{s=n.element(a),r.assign(Ui.dot(s.xyz).greaterThan(s.w).and(r))}),r.discard()}})()}}Lr.ALPHA_TO_COVERAGE="alphaToCoverage";Lr.DEFAULT="default";const z3=()=>fe(new Lr),k3=()=>fe(new Lr(Lr.ALPHA_TO_COVERAGE));class si extends on{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+nw(this)}build(e){this.setup(e)}setupObserver(e){return new YD(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e),e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),e.addFlow("vertex",e.removeStack()),e.addStack();let t;const i=this.setupClipping(e);if(this.depthWrite===!0&&this.setupDepth(e),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const n=this.setupLighting(e);i!==null&&e.stack.add(i);const s=ot(n,wt.a).max(0);if(t=this.setupOutput(e,s),IU.assign(t),this.outputNode!==null&&(t=this.outputNode),e.renderer.getRenderTarget()!==null){const a=e.renderer.getMRT(),l=this.mrtNode;a!==null?(t=a,l!==null&&(t=a.merge(l))):l!==null&&(t=l)}}else{let n=this.fragmentNode;n.isOutputStructNode!==!0&&(n=ot(n)),t=this.setupOutput(e,n)}e.stack.outputNode=t,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{globalClippingCount:t,localClippingCount:i}=e.clippingContext;let n=null;if(t||i){const s=e.renderer.samples;this.alphaToCoverage&&s>1?n=k3():e.stack.add(z3())}return n}setupDepth(e){const{renderer:t}=e;let i=this.depthNode;if(i===null){const n=t.getMRT();n&&n.has("depth")?i=n.get("depth"):t.logarithmicDepthBuffer===!0&&(i=uy().w.add(1).log2().mul(dB).mul(.5))}i!==null&&Kw.assign(i).append()}setupPosition(e){const{object:t}=e,i=t.geometry;if(e.addStack(),(i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)&&A3(t).append(),t.isSkinnedMesh===!0&&S3(t).append(),this.displacementMap){const s=Tr("displacementMap","texture"),r=Tr("displacementScale","float"),a=Tr("displacementBias","float");Bi.addAssign(ds.normalize().mul(s.x.mul(r).add(a)))}t.isBatchedMesh&&_3(t).append(),t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&y3(t).append(),this.positionNode!==null&&Bi.assign(this.positionNode);const n=uy();return e.context.vertex=e.removeStack(),e.context.mvp=n,n}setupDiffuseColor({object:e,geometry:t}){let i=this.colorNode?ot(this.colorNode):zB;this.vertexColors===!0&&t.hasAttribute("color")&&(i=ot(i.xyz.mul(Zs("color","vec3")),i.a)),e.instanceColor&&(i=of("vec3","vInstanceColor").mul(i)),e.isBatchedMesh&&e._colorsTexture&&(i=of("vec3","vBatchColor").mul(i)),wt.assign(i);const n=this.opacityNode?ee(this.opacityNode):Hw;if(wt.a.assign(wt.a.mul(n)),this.alphaTestNode!==null||this.alphaTest>0){const s=this.alphaTestNode!==null?ee(this.alphaTestNode):OB;wt.a.lessThanEqual(s).discard()}this.transparent===!1&&this.blending===Ar&&this.alphaToCoverage===!1&&wt.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?Q(0):wt.rgb}setupNormal(){return this.normalNode?Q(this.normalNode):XB}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Tr("envMap","cubeTexture"):Tr("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new L3(Ww)),t}setupLights(e){const t=[],i=this.setupEnvironment(e);i&&i.isLightingNode&&t.push(i);const n=this.setupLightMap(e);if(n&&n.isLightingNode&&t.push(n),this.aoNode!==null||e.material.aoMap){const r=this.aoNode!==null?this.aoNode:d3;t.push(new N3(r))}let s=this.lightsNode||e.lightsNode;return t.length>0&&(s=C3([...s.getLights(),...t])),s}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:i,backdropAlphaNode:n,emissiveNode:s}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let l=this.setupOutgoingLight(e);if(a&&a.getScope().getLights().length>0){const c=this.setupLightingModel(e);l=I3(a,c,i,n)}else i!==null&&(l=Q(n!==null?Ft(l,i,n):i));return(s&&s.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(Fv.assign(Q(s||GB)),l=l.add(Fv)),l}setupOutput(e,t){if(this.fog===!0){const i=e.fogNode;i&&(t=ot(i.mix(t.rgb,i.colorNode),t.a))}return t}setDefaultValues(e){for(const i in e){const n=e[i];this[i]===void 0&&(this[i]=n,n&&n.clone&&(this[i]=n.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const i in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,i)===void 0&&t[i].get!==void 0&&Object.defineProperty(this.constructor.prototype,i,t[i])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const i=on.prototype.toJSON.call(this,e),n=nf(this);i.inputNodes={};for(const{property:r,childNode:a}of n)i.inputNodes[r]=a.toJSON(e).uuid;function s(r){const a=[];for(const l in r){const c=r[l];delete c.metadata,a.push(c)}return a}if(t){const r=s(e.textures),a=s(e.images),l=s(e.nodes);r.length>0&&(i.textures=r),a.length>0&&(i.images=a),l.length>0&&(i.nodes=l)}return i}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.depthNode=e.depthNode,this.shadowNode=e.shadowNode,this.shadowPositionNode=e.shadowPositionNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const G3=new bx;class V3 extends si{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(G3),this.setValues(e)}}const H3=new ew;class W3 extends si{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(H3),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?ee(this.dashScaleNode):l3,i=this.dashSizeNode?ee(this.dashSizeNode):c3,n=this.dashSizeNode?ee(this.dashGapNode):h3;Dm.assign(i),Bv.assign(n);const s=er(Zs("lineDistance").mul(t));(e?s.add(e):s).mod(Dm.add(Bv)).greaterThan(Dm).discard()}}const $3=o=>fe(o).mul(.5).add(.5),X3=new jT;class q3 extends si{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(X3),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?ee(this.opacityNode):Hw;wt.assign(ot($3(ii),e))}}class Y3 extends ri{static get type(){return"EquirectUVNode"}constructor(e=Fw){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(Math.PI*2)).add(.5),i=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return we(t,i)}}const jw=te(Y3);class Jw extends ND{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const i=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s=new rh(5,5,5),r=jw(Fw),a=new si;a.colorNode=Yt(t,r,0),a.side=Js,a.blending=Ja;const l=new Po(s,a),c=new VT;c.add(l),t.minFilter===Gs&&(t.minFilter=rn);const h=new GT(1,10,this),u=e.getMRT();return e.setMRT(null),h.update(e,c),e.setMRT(u),t.minFilter=i,t.currentGenerateMipmaps=n,l.geometry.dispose(),l.material.dispose(),this}}const lc=new WeakMap;class Z3 extends ri{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=Fc();const t=new vx;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=ct.RENDER}updateBefore(e){const{renderer:t,material:i}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const s=n.isTextureNode?n.value:i[n.property];if(s&&s.isTexture){const r=s.mapping;if(r===eh||r===th){if(lc.has(s)){const a=lc.get(s);Yv(a,s.mapping),this._cubeTexture=a}else{const a=s.image;if(K3(a)){const l=new Jw(a.height);l.fromEquirectangularTexture(t,s),Yv(l.texture,s.mapping),this._cubeTexture=l.texture,lc.set(s,l.texture),s.addEventListener("dispose",Qw)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function K3(o){return o==null?!1:o.height>0}function Qw(o){const e=o.target;e.removeEventListener("dispose",Qw);const t=lc.get(e);t!==void 0&&(lc.delete(e),t.dispose())}function Yv(o,e){e===eh?o.mapping=Ro:e===th&&(o.mapping=Qa)}const eA=te(Z3);class Wx extends pl{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=eA(this.envNode)}}class j3 extends pl{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=ee(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class ap{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class tA extends ap{constructor(){super()}indirect(e,t,i){const n=e.ambientOcclusion,s=e.reflectedLight,r=i.context.irradianceLightMap;s.indirectDiffuse.assign(ot(0)),r?s.indirectDiffuse.addAssign(r):s.indirectDiffuse.addAssign(ot(1,1,1,0)),s.indirectDiffuse.mulAssign(n),s.indirectDiffuse.mulAssign(wt.rgb)}finish(e,t,i){const n=i.material,s=e.outgoingLight,r=i.context.environment;if(r)switch(n.combine){case qf:s.rgb.assign(Ft(s.rgb,s.rgb.mul(r.rgb),id.mul(Um)));break;case hL:s.rgb.assign(Ft(s.rgb,r.rgb,id.mul(Um)));break;case uL:s.rgb.addAssign(r.rgb.mul(id.mul(Um)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",n.combine);break}}}const J3=new Yf;class Q3 extends si{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(J3),this.setValues(e)}setupNormal(){return Yn}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Wx(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new j3(Ww)),t}setupOutgoingLight(){return wt.rgb}setupLightingModel(){return new tA}}const zc=Me(({f0:o,f90:e,dotVH:t})=>{const i=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return o.mul(i.oneMinus()).add(e.mul(i))}),il=Me(o=>o.diffuseColor.mul(1/Math.PI)),eO=()=>ee(.25),tO=Me(({dotNH:o})=>oy.mul(ee(.5)).add(1).mul(ee(1/Math.PI)).mul(o.pow(oy))),iO=Me(({lightDirection:o})=>{const e=o.add(zt).normalize(),t=ii.dot(e).clamp(),i=zt.dot(e).clamp(),n=zc({f0:xn,f90:1,dotVH:i}),s=eO(),r=tO({dotNH:t});return n.mul(s).mul(r)});class iA extends tA{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:i}){const s=ii.dot(e).clamp().mul(t);i.directDiffuse.addAssign(s.mul(il({diffuseColor:wt.rgb}))),this.specular===!0&&i.directSpecular.addAssign(s.mul(iO({lightDirection:e})).mul(id))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:i}){i.indirectDiffuse.addAssign(t.mul(il({diffuseColor:wt}))),i.indirectDiffuse.mulAssign(e)}}const nO=new JT;class sO extends si{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(nO),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Wx(t):null}setupLightingModel(){return new iA(!1)}}const rO=new ZT;class oO extends si{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(rO),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Wx(t):null}setupLightingModel(){return new iA}setupVariants(){const e=(this.shininessNode?ee(this.shininessNode):kB).max(1e-4);oy.assign(e);const t=this.specularNode||VB;xn.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const aO=Me(()=>{const o=Yn.dFdx().abs().max(Yn.dFdy().abs());return o.x.max(o.y).max(o.z)}),nA=Me(o=>{const{roughness:e}=o,t=aO();let i=e.max(.0525);return i=i.add(t),i=i.min(1),i}),lO=Me(({alpha:o,dotNL:e,dotNV:t})=>{const i=o.pow2(),n=e.mul(i.add(i.oneMinus().mul(t.pow2())).sqrt()),s=t.mul(i.add(i.oneMinus().mul(e.pow2())).sqrt());return Pr(.5,n.add(s).max(eF))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),cO=Me(({alphaT:o,alphaB:e,dotTV:t,dotBV:i,dotTL:n,dotBL:s,dotNV:r,dotNL:a})=>{const l=a.mul(Q(o.mul(t),e.mul(i),r).length()),c=r.mul(Q(o.mul(n),e.mul(s),a).length());return Pr(.5,l.add(c)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),hO=Me(({alpha:o,dotNH:e})=>{const t=o.pow2(),i=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(i.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),uO=ee(1/Math.PI),dO=Me(({alphaT:o,alphaB:e,dotNH:t,dotTH:i,dotBH:n})=>{const s=o.mul(e),r=Q(e.mul(i),o.mul(n),s.mul(t)),a=r.dot(r),l=s.div(a);return uO.mul(s.mul(l.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Zv=Me(o=>{const{lightDirection:e,f0:t,f90:i,roughness:n,f:s,USE_IRIDESCENCE:r,USE_ANISOTROPY:a}=o,l=o.normalView||ii,c=n.pow2(),h=e.add(zt).normalize(),u=l.dot(e).clamp(),d=l.dot(zt).clamp(),f=l.dot(h).clamp(),p=zt.dot(h).clamp();let g=zc({f0:t,f90:i,dotVH:p}),m,y;if(Uv(r)&&(g=Lx.mix(g,s)),Uv(a)){const x=Qu.dot(e),_=Qu.dot(zt),v=Qu.dot(h),E=qa.dot(e),M=qa.dot(zt),b=qa.dot(h);m=cO({alphaT:ry,alphaB:c,dotTV:_,dotBV:M,dotTL:x,dotBL:E,dotNV:d,dotNL:u}),y=dO({alphaT:ry,alphaB:c,dotNH:f,dotTH:v,dotBH:b})}else m=lO({alpha:c,dotNL:u,dotNV:d}),y=hO({alpha:c,dotNH:f});return g.mul(m).mul(y)}),sA=Me(({roughness:o,dotNV:e})=>{const t=ot(-1,-.0275,-.572,.022),i=ot(1,.0425,1.04,-.04),n=o.mul(t).add(i),s=n.x.mul(n.x).min(e.mul(-9.28).exp2()).mul(n.x).add(n.y);return we(-1.04,1.04).mul(s).add(n.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),rA=Me(o=>{const{dotNV:e,specularColor:t,specularF90:i,roughness:n}=o,s=sA({dotNV:e,roughness:n});return t.mul(s.x).add(i.mul(s.y))}),fO=Me(({f:o,f90:e,dotVH:t})=>{const i=t.oneMinus().saturate(),n=i.mul(i),s=i.mul(n,n).clamp(0,.9999);return o.sub(Q(e).mul(s)).div(s.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),pO=Me(({roughness:o,dotNH:e})=>{const t=o.pow2(),i=ee(1).div(t),s=e.pow2().oneMinus().max(.0078125);return ee(2).add(i).mul(s.pow(i.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),mO=Me(({dotNV:o,dotNL:e})=>ee(1).div(ee(4).mul(e.add(o).sub(e.mul(o))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),gO=Me(({lightDirection:o})=>{const e=o.add(zt).normalize(),t=ii.dot(o).clamp(),i=ii.dot(zt).clamp(),n=ii.dot(e).clamp(),s=pO({roughness:Ix,dotNH:n}),r=mO({dotNV:i,dotNL:t});return Oa.mul(s).mul(r)}),yO=Me(({N:o,V:e,roughness:t})=>{const s=.0078125,r=o.dot(e).saturate(),a=we(t,r.oneMinus().sqrt());return a.assign(a.mul(.984375).add(s)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),xO=Me(({f:o})=>{const e=o.length();return qn(e.mul(e).add(o.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),wu=Me(({v1:o,v2:e})=>{const t=o.dot(e),i=t.abs().toVar(),n=i.mul(.0145206).add(.4965155).mul(i).add(.8543985).toVar(),s=i.add(4.1616724).mul(i).add(3.417594).toVar(),r=n.div(s),a=t.greaterThan(0).select(r,qn(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(r));return o.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Kv=Me(({N:o,V:e,P:t,mInv:i,p0:n,p1:s,p2:r,p3:a})=>{const l=s.sub(n).toVar(),c=a.sub(n).toVar(),h=l.cross(c),u=Q().toVar();return Fi(h.dot(t.sub(n)).greaterThanEqual(0),()=>{const d=e.sub(o.mul(e.dot(o))).normalize(),f=o.cross(d).negate(),p=i.mul(an(d,f,o).transpose()).toVar(),g=p.mul(n.sub(t)).normalize().toVar(),m=p.mul(s.sub(t)).normalize().toVar(),y=p.mul(r.sub(t)).normalize().toVar(),x=p.mul(a.sub(t)).normalize().toVar(),_=Q(0).toVar();_.addAssign(wu({v1:g,v2:m})),_.addAssign(wu({v1:m,v2:y})),_.addAssign(wu({v1:y,v2:x})),_.addAssign(wu({v1:x,v2:g})),u.assign(Q(xO({f:_})))}),u}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),lp=1/6,oA=o=>Pt(lp,Pt(o,Pt(o,o.negate().add(3)).sub(3)).add(1)),fy=o=>Pt(lp,Pt(o,Pt(o,Pt(3,o).sub(6))).add(4)),aA=o=>Pt(lp,Pt(o,Pt(o,Pt(-3,o).add(3)).add(3)).add(1)),py=o=>Pt(lp,ep(o,3)),jv=o=>oA(o).add(fy(o)),Jv=o=>aA(o).add(py(o)),Qv=o=>bn(-1,fy(o).div(oA(o).add(fy(o)))),eS=o=>bn(1,py(o).div(aA(o).add(py(o)))),tS=(o,e,t)=>{const i=o.uvNode,n=Pt(i,e.zw).add(.5),s=Qf(n),r=fl(n),a=jv(r.x),l=Jv(r.x),c=Qv(r.x),h=eS(r.x),u=Qv(r.y),d=eS(r.y),f=we(s.x.add(c),s.y.add(u)).sub(.5).mul(e.xy),p=we(s.x.add(h),s.y.add(u)).sub(.5).mul(e.xy),g=we(s.x.add(c),s.y.add(d)).sub(.5).mul(e.xy),m=we(s.x.add(h),s.y.add(d)).sub(.5).mul(e.xy),y=jv(r.y).mul(bn(a.mul(o.uv(f).level(t)),l.mul(o.uv(p).level(t)))),x=Jv(r.y).mul(bn(a.mul(o.uv(g).level(t)),l.mul(o.uv(m).level(t))));return y.add(x)},_O=Me(([o,e=ee(3)])=>{const t=we(o.size(Xt(e))),i=we(o.size(Xt(e.add(1)))),n=Pr(1,t),s=Pr(1,i),r=tS(o,ot(n,t),Qf(e)),a=tS(o,ot(s,i),Mw(e));return fl(e).mix(r,a)}),iS=Me(([o,e,t,i,n])=>{const s=Q(Cw(e.negate(),Dc(o),Pr(1,i))),r=Q(Ya(n[0].xyz),Ya(n[1].xyz),Ya(n[2].xyz));return Dc(s).mul(t.mul(r))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),vO=Me(([o,e])=>o.mul(Ir(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),SO=D3(),nS=Me(([o,e,t])=>{const i=SO.uv(o),n=Jf(ee(dy.x)).mul(vO(e,t));return _O(i,n)}),sS=Me(([o,e,t])=>(Fi(t.notEqual(0),()=>{const i=bw(e).negate().div(t);return Sw(i.negate().mul(o))}),Q(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),bO=Me(([o,e,t,i,n,s,r,a,l,c,h,u,d,f,p])=>{let g,m;if(p){g=ot().toVar(),m=Q().toVar();const E=h.sub(1).mul(p.mul(.025)),M=Q(h.sub(E),h,h.add(E));zs({start:0,end:3},({i:b})=>{const A=M.element(b),L=iS(o,e,u,A,a),S=r.add(L),T=c.mul(l.mul(ot(S,1))),B=we(T.xy.div(T.w)).toVar();B.addAssign(1),B.divAssign(2),B.assign(we(B.x,B.y.oneMinus()));const F=nS(B,t,A);g.element(b).assign(F.element(b)),g.a.addAssign(F.a),m.element(b).assign(i.element(b).mul(sS(Ya(L),d,f).element(b)))}),g.a.divAssign(3)}else{const E=iS(o,e,u,h,a),M=r.add(E),b=c.mul(l.mul(ot(M,1))),A=we(b.xy.div(b.w)).toVar();A.addAssign(1),A.divAssign(2),A.assign(we(A.x,A.y.oneMinus())),g=nS(A,t,h),m=i.mul(sS(Ya(E),d,f))}const y=m.rgb.mul(g.rgb),x=o.dot(e).clamp(),_=Q(rA({dotNV:x,specularColor:n,specularF90:s,roughness:t})),v=m.r.add(m.g,m.b).div(3);return ot(_.oneMinus().mul(y),g.a.oneMinus().mul(v).oneMinus())}),MO=an(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),TO=o=>{const e=o.sqrt();return Q(1).add(e).div(Q(1).sub(e))},rS=(o,e)=>o.sub(e).div(o.add(e)).pow2(),wO=(o,e)=>{const t=o.mul(2*Math.PI*1e-9),i=Q(54856e-17,44201e-17,52481e-17),n=Q(1681e3,1795300,2208400),s=Q(43278e5,93046e5,66121e5),r=ee(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=i.mul(s.mul(2*Math.PI).sqrt()).mul(n.mul(t).add(e).cos()).mul(t.pow2().negate().mul(s).exp());return a=Q(a.x.add(r),a.y,a.z).div(10685e-11),MO.mul(a)},AO=Me(({outsideIOR:o,eta2:e,cosTheta1:t,thinFilmThickness:i,baseF0:n})=>{const s=Ft(o,e,Io(0,.03,i)),r=o.div(s).pow2().mul(ee(1).sub(t.pow2())),l=ee(1).sub(r).sqrt(),c=rS(s,o),h=zc({f0:c,f90:1,dotVH:t}),u=h.oneMinus(),d=s.lessThan(o).select(Math.PI,0),f=ee(Math.PI).sub(d),p=TO(n.clamp(0,.9999)),g=rS(p,s.toVec3()),m=zc({f0:g,f90:1,dotVH:l}),y=Q(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),x=s.mul(i,l,2),_=Q(f).add(y),v=h.mul(m).clamp(1e-5,.9999),E=v.sqrt(),M=u.pow2().mul(m).div(Q(1).sub(v));let A=h.add(M),L=M.sub(u);for(let S=1;S<=2;++S){L=L.mul(E);const T=wO(ee(S).mul(x),ee(S).mul(_)).mul(2);A=A.add(L.mul(T))}return A.max(Q(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),EO=Me(({normal:o,viewDir:e,roughness:t})=>{const i=o.dot(e).saturate(),n=t.pow2(),s=tn(t.lessThan(.25),ee(-339.2).mul(n).add(ee(161.4).mul(t)).sub(25.9),ee(-8.48).mul(n).add(ee(14.3).mul(t)).sub(9.95)),r=tn(t.lessThan(.25),ee(44).mul(n).sub(ee(23.7).mul(t)).add(3.26),ee(1.97).mul(n).sub(ee(3.27).mul(t)).add(.72));return tn(t.lessThan(.25),0,ee(.1).mul(t).sub(.025)).add(s.mul(i).add(r).exp()).mul(1/Math.PI).saturate()}),zm=Q(.04),km=ee(1);class lA extends ap{constructor(e=!1,t=!1,i=!1,n=!1,s=!1,r=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=i,this.anisotropy=n,this.transmission=s,this.dispersion=r,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=Q().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=Q().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Q().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=Q().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=Q().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=ii.dot(zt).clamp();this.iridescenceFresnel=AO({outsideIOR:ee(1),eta2:fw,cosTheta1:t,thinFilmThickness:pw,baseF0:xn}),this.iridescenceF0=fO({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=hy,i=fB.sub(hy).normalize(),n=Ow;e.backdrop=bO(n,i,Fs,wt,xn,cf,t,Lo,tr,zx,ed,mw,yw,gw,this.dispersion?xw:null),e.backdropAlpha=ay,wt.a.mulAssign(Ft(1,e.backdrop.a,ay))}}computeMultiscattering(e,t,i){const n=ii.dot(zt).clamp(),s=sA({roughness:Fs,dotNV:n}),a=(this.iridescenceF0?Lx.mix(xn,this.iridescenceF0):xn).mul(s.x).add(i.mul(s.y)),c=s.x.add(s.y).oneMinus(),h=xn.add(xn.oneMinus().mul(.047619)),u=a.mul(h).div(c.mul(h).oneMinus());e.addAssign(a),t.addAssign(u.mul(c))}direct({lightDirection:e,lightColor:t,reflectedLight:i}){const s=ii.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(s.mul(gO({lightDirection:e}))),this.clearcoat===!0){const a=$l.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(Zv({lightDirection:e,f0:zm,f90:km,roughness:lf,normalView:$l})))}i.directDiffuse.addAssign(s.mul(il({diffuseColor:wt.rgb}))),i.directSpecular.addAssign(s.mul(Zv({lightDirection:e,f0:xn,f90:1,roughness:Fs,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:i,halfHeight:n,reflectedLight:s,ltc_1:r,ltc_2:a}){const l=t.add(i).sub(n),c=t.sub(i).sub(n),h=t.sub(i).add(n),u=t.add(i).add(n),d=ii,f=zt,p=Ui.toVar(),g=yO({N:d,V:f,roughness:Fs}),m=r.uv(g).toVar(),y=a.uv(g).toVar(),x=an(Q(m.x,0,m.y),Q(0,1,0),Q(m.z,0,m.w)).toVar(),_=xn.mul(y.x).add(xn.oneMinus().mul(y.y)).toVar();s.directSpecular.addAssign(e.mul(_).mul(Kv({N:d,V:f,P:p,mInv:x,p0:l,p1:c,p2:h,p3:u}))),s.directDiffuse.addAssign(e.mul(wt).mul(Kv({N:d,V:f,P:p,mInv:an(1,0,0,0,1,0,0,0,1),p0:l,p1:c,p2:h,p3:u})))}indirect(e,t,i){this.indirectDiffuse(e,t,i),this.indirectSpecular(e,t,i),this.ambientOcclusion(e,t,i)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(il({diffuseColor:wt})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:i}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(t.mul(Oa,EO({normal:ii,viewDir:zt,roughness:Ix}))),this.clearcoat===!0){const c=$l.dot(zt).clamp(),h=rA({dotNV:c,specularColor:zm,specularF90:km,roughness:lf});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(h))}const n=Q().toVar("singleScattering"),s=Q().toVar("multiScattering"),r=t.mul(1/Math.PI);this.computeMultiscattering(n,s,cf);const a=n.add(s),l=wt.mul(a.r.max(a.g).max(a.b).oneMinus());i.indirectSpecular.addAssign(e.mul(n)),i.indirectSpecular.addAssign(s.mul(r)),i.indirectDiffuse.addAssign(l.mul(r))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const n=ii.dot(zt).clamp().add(e),s=Fs.mul(-16).oneMinus().negate().exp2(),r=e.sub(n.pow(s).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(e),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(r)}finish(e){const{outgoingLight:t}=e;if(this.clearcoat===!0){const i=$l.dot(zt).clamp(),n=zc({dotVH:i,f0:zm,f90:km}),s=t.mul(sy.mul(n).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(sy));t.assign(s)}if(this.sheen===!0){const i=Oa.r.max(Oa.g).max(Oa.b).mul(.157).oneMinus(),n=t.mul(i).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(n)}}}const oS=ee(1),my=ee(-2),Au=ee(.8),Gm=ee(-1),Eu=ee(.4),Vm=ee(2),Ru=ee(.305),Hm=ee(3),aS=ee(.21),RO=ee(4),lS=ee(4),CO=ee(16),NO=Me(([o])=>{const e=Q(es(o)).toVar(),t=ee(-1).toVar();return Fi(e.x.greaterThan(e.z),()=>{Fi(e.x.greaterThan(e.y),()=>{t.assign(tn(o.x.greaterThan(0),0,3))}).Else(()=>{t.assign(tn(o.y.greaterThan(0),1,4))})}).Else(()=>{Fi(e.z.greaterThan(e.y),()=>{t.assign(tn(o.z.greaterThan(0),2,5))}).Else(()=>{t.assign(tn(o.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),PO=Me(([o,e])=>{const t=we().toVar();return Fi(e.equal(0),()=>{t.assign(we(o.z,o.y).div(es(o.x)))}).ElseIf(e.equal(1),()=>{t.assign(we(o.x.negate(),o.z.negate()).div(es(o.y)))}).ElseIf(e.equal(2),()=>{t.assign(we(o.x.negate(),o.y).div(es(o.z)))}).ElseIf(e.equal(3),()=>{t.assign(we(o.z.negate(),o.y).div(es(o.x)))}).ElseIf(e.equal(4),()=>{t.assign(we(o.x.negate(),o.z).div(es(o.y)))}).Else(()=>{t.assign(we(o.x,o.y).div(es(o.z)))}),Pt(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),IO=Me(([o])=>{const e=ee(0).toVar();return Fi(o.greaterThanEqual(Au),()=>{e.assign(oS.sub(o).mul(Gm.sub(my)).div(oS.sub(Au)).add(my))}).ElseIf(o.greaterThanEqual(Eu),()=>{e.assign(Au.sub(o).mul(Vm.sub(Gm)).div(Au.sub(Eu)).add(Gm))}).ElseIf(o.greaterThanEqual(Ru),()=>{e.assign(Eu.sub(o).mul(Hm.sub(Vm)).div(Eu.sub(Ru)).add(Vm))}).ElseIf(o.greaterThanEqual(aS),()=>{e.assign(Ru.sub(o).mul(RO.sub(Hm)).div(Ru.sub(aS)).add(Hm))}).Else(()=>{e.assign(ee(-2).mul(Jf(Pt(1.16,o))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),LO=Me(([o,e])=>{const t=o.toVar();t.assign(Pt(2,t).sub(1));const i=Q(t,1).toVar();return Fi(e.equal(0),()=>{i.assign(i.zyx)}).ElseIf(e.equal(1),()=>{i.assign(i.xzy),i.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{i.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{i.assign(i.zyx),i.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{i.assign(i.xzy),i.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{i.z.mulAssign(-1)}),i}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),DO=Me(([o,e,t,i,n,s])=>{const r=ee(t),a=Q(e),l=Ir(IO(r),my,s),c=fl(l),h=Qf(l),u=Q(gy(o,a,h,i,n,s)).toVar();return Fi(c.notEqual(0),()=>{const d=Q(gy(o,a,h.add(1),i,n,s)).toVar();u.assign(Ft(u,d,c))}),u}),gy=Me(([o,e,t,i,n,s])=>{const r=ee(t).toVar(),a=Q(e),l=ee(NO(a)).toVar(),c=ee(qn(lS.sub(r),0)).toVar();r.assign(qn(r,lS));const h=ee(ly(r)).toVar(),u=we(PO(a,l).mul(h.sub(2)).add(1)).toVar();return Fi(l.greaterThan(2),()=>{u.y.addAssign(h),l.subAssign(3)}),u.x.addAssign(l.mul(h)),u.x.addAssign(c.mul(Pt(3,CO))),u.y.addAssign(Pt(4,ly(s).sub(h))),u.x.mulAssign(i),u.y.mulAssign(n),o.uv(u).grad(we(),we())}),Wm=Me(({envMap:o,mipInt:e,outputDirection:t,theta:i,axis:n,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:r,CUBEUV_MAX_MIP:a})=>{const l=vr(i),c=t.mul(l).add(n.cross(t).mul(Is(i))).add(n.mul(n.dot(t).mul(l.oneMinus())));return gy(o,c,e,s,r,a)}),UO=Me(({n:o,latitudinal:e,poleAxis:t,outputDirection:i,weights:n,samples:s,dTheta:r,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u})=>{const d=Q(tn(e,t,Ew(t,i))).toVar();Fi(vw(d.equals(Q(0))),()=>{d.assign(Q(i.z,0,i.x.negate()))}),d.assign(Dc(d));const f=Q().toVar();return f.addAssign(n.element(Xt(0)).mul(Wm({theta:0,axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u}))),zs({start:Xt(1),end:o},({i:p})=>{Fi(p.greaterThanEqual(s),()=>{M3()});const g=ee(r.mul(ee(p))).toVar();f.addAssign(n.element(p).mul(Wm({theta:g.mul(-1),axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u}))),f.addAssign(n.element(p).mul(Wm({theta:g,axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u})))}),ot(f,1)});let uf=null;const cS=new WeakMap;function FO(o){const e=Math.log2(o)-2,t=1/o;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function BO(o){let e=cS.get(o);if((e!==void 0?e.pmremVersion:-1)!==o.pmremVersion){const i=o.image;if(o.isCubeTexture)if(zO(i))e=uf.fromCubemap(o,e);else return null;else if(kO(i))e=uf.fromEquirectangular(o,e);else return null;e.pmremVersion=o.pmremVersion,cS.set(o,e)}return e.texture}class OO extends ri{static get type(){return"PMREMNode"}constructor(e,t=null,i=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=i,this._generator=null;const n=new Yi;n.isRenderTargetTexture=!0,this._texture=Yt(n),this._width=at(0),this._height=at(0),this._maxMip=at(0),this.updateBeforeType=ct.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=FO(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,i=this._value;t!==i.pmremVersion&&(i.isPMREMTexture===!0?e=i:e=BO(i),e!==null&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){uf===null&&(uf=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this));const i=this.value;e.renderer.coordinateSystem===Wn&&i.isPMREMTexture!==!0&&i.isRenderTargetTexture===!0&&(t=Q(t.x.negate(),t.yz));let n=this.levelNode;return n===null&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),DO(this._texture,t,n,this._width,this._height,this._maxMip)}}function zO(o){if(o==null)return!1;let e=0;const t=6;for(let i=0;i<t;i++)o[i]!==void 0&&e++;return e===t}function kO(o){return o==null?!1:o.height>0}const cA=te(OO),hS=new WeakMap;class GO extends pl{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const f=i.isTextureNode?i.value:t[i.property];let p=hS.get(f);p===void 0&&(p=cA(f),hS.set(f,p)),i=p}const s=t.envMap?kt("envMapIntensity","float",e.material):kt("environmentIntensity","float",e.scene),a=t.useAnisotropy===!0||t.anisotropy>0?PB:ii,l=i.context(uS(Fs,a)).mul(s),c=i.context(VO(Ow)).mul(Math.PI).mul(s),h=td(l),u=td(c);e.context.radiance.addAssign(h),e.context.iblIrradiance.addAssign(u);const d=e.context.lightingModel.clearcoatRadiance;if(d){const f=i.context(uS(lf,$l)).mul(s),p=td(f);d.addAssign(p)}}}const uS=(o,e)=>{let t=null;return{getUV:()=>(t===null&&(t=zt.negate().reflect(e),t=o.mul(o).mix(t,e).normalize(),t=t.transformDirection(tr)),t),getTextureLevel:()=>o}},VO=o=>({getUV:()=>o,getTextureLevel:()=>ee(1)}),HO=new Tx;class hA extends si{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(HO),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new GO(t):null}setupLightingModel(){return new lA}setupSpecular(){const e=Ft(Q(.04),wt.rgb,af);xn.assign(e),cf.assign(1)}setupVariants(){const e=this.metalnessNode?ee(this.metalnessNode):$B;af.assign(e);let t=this.roughnessNode?ee(this.roughnessNode):WB;t=nA({roughness:t}),Fs.assign(t),this.setupSpecular(),wt.assign(ot(wt.rgb.mul(e.oneMinus()),wt.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const WO=new YT;class $O extends hA{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(WO),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?ee(this.iorNode):r3;ed.assign(e),xn.assign(Ft(hf(Rw(ed.sub(1).div(ed.add(1))).mul(HB),Q(1)).mul($v),wt.rgb,af)),cf.assign(Ft($v,1,af))}setupLightingModel(){return new lA(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?ee(this.clearcoatNode):qB,i=this.clearcoatRoughnessNode?ee(this.clearcoatRoughnessNode):YB;sy.assign(t),lf.assign(nA({roughness:i}))}if(this.useSheen){const t=this.sheenNode?Q(this.sheenNode):jB,i=this.sheenRoughnessNode?ee(this.sheenRoughnessNode):JB;Oa.assign(t),Ix.assign(i)}if(this.useIridescence){const t=this.iridescenceNode?ee(this.iridescenceNode):e3,i=this.iridescenceIORNode?ee(this.iridescenceIORNode):t3,n=this.iridescenceThicknessNode?ee(this.iridescenceThicknessNode):i3;Lx.assign(t),fw.assign(i),pw.assign(n)}if(this.useAnisotropy){const t=(this.anisotropyNode?we(this.anisotropyNode):QB).toVar();oo.assign(t.length()),Fi(oo.equal(0),()=>{t.assign(we(1,0))}).Else(()=>{t.divAssign(we(oo)),oo.assign(oo.saturate())}),ry.assign(oo.pow2().mix(Fs.pow2(),1)),Qu.assign(Xl[0].mul(t.x).add(Xl[1].mul(t.y))),qa.assign(Xl[1].mul(t.x).sub(Xl[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?ee(this.transmissionNode):n3,i=this.thicknessNode?ee(this.thicknessNode):s3,n=this.attenuationDistanceNode?ee(this.attenuationDistanceNode):o3,s=this.attenuationColorNode?Q(this.attenuationColorNode):a3;if(ay.assign(t),mw.assign(i),gw.assign(n),yw.assign(s),this.useDispersion){const r=this.dispersionNode?ee(this.dispersionNode):u3;xw.assign(r)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?Q(this.clearcoatNormalNode):ZB}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const XO=Me(({normal:o,lightDirection:e,builder:t})=>{const i=o.dot(e),n=we(i.mul(.5).add(.5),0);if(t.material.gradientMap){const s=Tr("gradientMap","texture").context({getUV:()=>n});return Q(s.r)}else{const s=n.fwidth().mul(.5);return Ft(Q(.7),Q(1),Io(ee(.7).sub(s.x),ee(.7).add(s.x),n.x))}});class qO extends ap{direct({lightDirection:e,lightColor:t,reflectedLight:i},n,s){const r=XO({normal:Bw,lightDirection:e,builder:s}).mul(t);i.directDiffuse.addAssign(r.mul(il({diffuseColor:wt.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:i}){i.indirectDiffuse.addAssign(t.mul(il({diffuseColor:wt}))),i.indirectDiffuse.mulAssign(e)}}const YO=new KT;class ZO extends si{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(YO),this.setValues(e)}setupLightingModel(){return new qO}}class KO extends ri{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=Q(zt.z,0,zt.x.negate()).normalize(),t=zt.cross(e);return we(e.dot(ii),t.dot(ii)).mul(.495).add(.5)}}const jO=ge(KO),JO=new QT;class QO extends si{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(JO),this.setValues(e)}setupVariants(e){const t=jO;let i;e.material.matcap?i=Tr("matcap","texture").context({getUV:()=>t}):i=Q(Ft(.2,.8,t.y)),wt.rgb.mulAssign(i.rgb)}}const ez=new XT;class tz extends si{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(ez),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class iz extends ri{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:i}=this;if(this.getNodeType(e)==="vec2"){const s=t.cos(),r=t.sin();return Px(s,r,r.negate(),s).mul(i)}else{const s=t,r=Xa(ot(1,0,0,0),ot(0,vr(s.x),Is(s.x).negate(),0),ot(0,Is(s.x),vr(s.x),0),ot(0,0,0,1)),a=Xa(ot(vr(s.y),0,Is(s.y),0),ot(0,1,0,0),ot(Is(s.y).negate(),0,vr(s.y),0),ot(0,0,0,1)),l=Xa(ot(vr(s.z),Is(s.z).negate(),0,0),ot(Is(s.z),vr(s.z),0,0),ot(0,0,1,0),ot(0,0,0,1));return r.mul(a).mul(l).mul(ot(i,1)).xyz}}}const nz=te(iz),sz=new WT;class rz extends si{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(sz),this.setValues(e)}setupPosition({object:e,camera:t,context:i}){const n=this.sizeAttenuation,{positionNode:s,rotationNode:r,scaleNode:a}=this,l=Bi;let c=np.mul(Q(s||0)),h=we(Lo[0].xyz.length(),Lo[1].xyz.length());a!==null&&(h=h.mul(a)),!n&&t.isPerspectiveCamera&&(h=h.mul(c.z.negate()));let u=l.xy;if(e.center&&e.center.isVector2===!0){const g=HF("center","vec2");u=u.sub(g.sub(.5))}u=u.mul(h);const d=ee(r||KB),f=nz(u,d);c=ot(c.xy.add(f),c.zw);const p=zx.mul(c);return i.vertex=l,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}class oz extends ap{constructor(){super(),this.shadowNode=ee(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){wt.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(wt.rgb)}}const az=new qT;class lz extends si{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(az),this.setValues(e)}setupLightingModel(){return new oz}}Me(({texture:o,uv:e})=>{const i=Q().toVar();return Fi(e.x.lessThan(1e-4),()=>{i.assign(Q(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{i.assign(Q(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{i.assign(Q(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{i.assign(Q(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{i.assign(Q(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{i.assign(Q(0,0,-1))}).Else(()=>{const s=o.uv(e.add(Q(-.01,0,0))).r.sub(o.uv(e.add(Q(.01,0,0))).r),r=o.uv(e.add(Q(0,-.01,0))).r.sub(o.uv(e.add(Q(0,.01,0))).r),a=o.uv(e.add(Q(0,0,-.01))).r.sub(o.uv(e.add(Q(0,0,.01))).r);i.assign(Q(s,r,a))}),i.normalize()});class cz{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,i)=>{this.requestId=self.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this.animationLoop!==null&&this.animationLoop(t,i)};e()}dispose(){self.cancelAnimationFrame(this.requestId),this.requestId=null}setAnimationLoop(e){this.animationLoop=e}}class Ks{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let i=0;i<e.length;i++)if(t=t.get(e[i]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let i=this.weakMap;for(let n=0;n<e.length;n++){const s=e[n];i.has(s)===!1&&i.set(s,new WeakMap),i=i.get(s)}return i.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let i=0;i<e.length;i++)if(t=t.get(e[i]),t===void 0)return!1;return t.delete(e[e.length-1])}}const $m=new _r;class yy{constructor(){this.version=0,this.globalClippingCount=0,this.localClippingCount=0,this.localClippingEnabled=!1,this.localClipIntersection=!1,this.planes=[],this.parentVersion=0,this.viewNormalMatrix=new Mn,this.cacheKey=0}projectPlanes(e,t){const i=e.length,n=this.planes;for(let s=0;s<i;s++){$m.copy(e[s]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const r=n[t+s],a=$m.normal;r.x=-a.x,r.y=-a.y,r.z=-a.z,r.w=$m.constant}}updateGlobal(e,t){const i=e.clippingPlanes;this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix);let n=!1;if(Array.isArray(i)&&i.length!==0){const s=i.length;if(s!==this.globalClippingCount){const r=[];for(let a=0;a<s;a++)r.push(new At);this.globalClippingCount=s,this.planes=r,n=!0}this.projectPlanes(i,0)}else this.globalClippingCount!==0&&(this.globalClippingCount=0,this.planes=[],n=!0);e.localClippingEnabled!==this.localClippingEnabled&&(this.localClippingEnabled=e.localClippingEnabled,n=!0),n&&(this.version++,this.cacheKey=tf(this.globalClippingCount,this.localClippingEnabled===!0?1:0))}update(e,t){let i=!1;if(this!==e&&e.version!==this.parentVersion&&(this.globalClippingCount=t.isShadowNodeMaterial?0:e.globalClippingCount,this.localClippingEnabled=e.localClippingEnabled,this.planes=Array.from(e.planes),this.parentVersion=e.version,this.viewMatrix=e.viewMatrix,this.viewNormalMatrix=e.viewNormalMatrix,i=!0),this.localClippingEnabled){const n=t.clippingPlanes;if(Array.isArray(n)&&n.length!==0){const s=n.length,r=this.planes,a=this.globalClippingCount;if(i||s!==this.localClippingCount){r.length=a+s;for(let l=0;l<s;l++)r[a+l]=new At;this.localClippingCount=s,i=!0}this.projectPlanes(n,a)}else this.localClippingCount!==0&&(this.localClippingCount=0,i=!0);this.localClipIntersection!==t.clipIntersection&&(this.localClipIntersection=t.clipIntersection,i=!0)}i&&(this.version+=e.version,this.cacheKey=tf(e.cacheKey,this.localClippingCount,this.localClipIntersection===!0?1:0))}}let hz=0;function uz(o){const e=Object.keys(o);let t=Object.getPrototypeOf(o);for(;t;){const i=Object.getOwnPropertyDescriptors(t);for(const n in i)if(i[n]!==void 0){const s=i[n];s&&typeof s.get=="function"&&e.push(n)}t=Object.getPrototypeOf(t)}return e}class dz{constructor(e,t,i,n,s,r,a,l,c){this._nodes=e,this._geometries=t,this.id=hz++,this.renderer=i,this.object=n,this.material=s,this.scene=r,this.camera=a,this.lightsNode=l,this.context=c,this.geometry=n.geometry,this.version=s.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(c.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){const t=this.material;let i=this.clippingContext;Array.isArray(t.clippingPlanes)?((i===e||!i)&&(i=new yy,this.clippingContext=i),i.update(e,t)):this.clippingContext!==e&&(this.clippingContext=e)}get clippingNeedsUpdate(){return this.clippingContext.version===this.clippingContextVersion?!1:(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,i=[],n=new Set;for(const s of e){const r=s.node&&s.node.attribute?s.node.attribute:t.getAttribute(s.name);if(r===void 0)continue;i.push(r);const a=r.isInterleavedBufferAttribute?r.data:r;n.add(a)}return this.attributes=i,this.vertexBuffers=Array.from(n.values()),i}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:i,group:n,drawRange:s}=this,r=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),l=a!==null,c=i.isInstancedBufferGeometry?i.instanceCount:e.count>1?e.count:1;if(c===0)return null;if(r.instanceCount=c,e.isBatchedMesh===!0)return r;let h=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(h=2);let u=s.start*h,d=(s.start+s.count)*h;n!==null&&(u=Math.max(u,n.start*h),d=Math.min(d,(n.start+n.count)*h));const f=l===!0?a.count:i.attributes.position.count;u=Math.max(u,0),d=Math.min(d,f);const p=d-u;return p<0||p===1/0?null:(r.vertexCount=p,r.firstVertex=u,r)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const i of Object.keys(e.attributes).sort()){const n=e.attributes[i];t+=i+",",n.data&&(t+=n.data.stride+","),n.offset&&(t+=n.offset+","),n.itemSize&&(t+=n.itemSize+","),n.normalized&&(t+="n,")}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let i=t.customProgramCacheKey();for(const n of uz(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(n))continue;const s=t[n];let r;if(s!==null){const a=typeof s;a==="number"?r=s!==0?"1":"0":a==="object"?(r="{",s.isTexture&&(r+=s.mapping),r+="}"):r=String(s)}else r=String(s);i+=r+","}return i+=this.clippingContext.cacheKey+",",e.geometry&&(i+=this.getGeometryCacheKey()),e.skeleton&&(i+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(i+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(i+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(i+=e._colorsTexture.uuid+",")),e.count>1&&(i+=e.uuid+","),ZD(i)}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(e+=1),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const va=[];class fz{constructor(e,t,i,n,s,r){this.renderer=e,this.nodes=t,this.geometries=i,this.pipelines=n,this.bindings=s,this.info=r,this.chainMaps={}}get(e,t,i,n,s,r,a){const l=this.getChainMap(a);va[0]=e,va[1]=t,va[2]=r,va[3]=s;let c=l.get(va);return c===void 0?(c=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,i,n,s,r,a),l.set(va,c)):(c.updateClipping(r.clippingContext),(c.version!==t.version||c.needsUpdate)&&(c.initialCacheKey!==c.getCacheKey()?(c.dispose(),c=this.get(e,t,i,n,s,r,a)):c.version=t.version)),c}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Ks)}dispose(){this.chainMaps={}}createRenderObject(e,t,i,n,s,r,a,l,c,h){const u=this.getChainMap(h),d=new dz(e,t,i,n,s,r,a,l,c);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),u.delete(d.getChainArray())},d}}class Or{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Mo={VERTEX:1,INDEX:2,STORAGE:4},wr=16,pz=211,mz=212;class gz extends Or{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==void 0&&this.backend.destroyAttribute(e),t}update(e,t){const i=this.get(e);if(i.version===void 0)t===Mo.VERTEX?this.backend.createAttribute(e):t===Mo.INDEX?this.backend.createIndexAttribute(e):t===Mo.STORAGE&&this.backend.createStorageAttribute(e),i.version=this._getBufferAttribute(e).version;else{const n=this._getBufferAttribute(e);(i.version<n.version||n.usage===Fa)&&(this.backend.updateAttribute(e),i.version=n.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function yz(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}function uA(o){return o.index!==null?o.index.version:o.attributes.position.version}function dS(o){const e=[],t=o.index,i=o.attributes.position;if(t!==null){const s=t.array;for(let r=0,a=s.length;r<a;r+=3){const l=s[r+0],c=s[r+1],h=s[r+2];e.push(l,c,c,h,h,l)}}else{const s=i.array;for(let r=0,a=s.length/3-1;r<a;r+=3){const l=r+0,c=r+1,h=r+2;e.push(l,c,c,h,h,l)}}const n=new(yz(e)?BT:FT)(e,1);return n.version=uA(o),n}class xz extends Or{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,i=this.get(t);i.initialized=!0,this.info.memory.geometries++;const n=()=>{this.info.memory.geometries--;const s=t.index,r=e.getAttributes();s!==null&&this.attributes.delete(s);for(const l of r)this.attributes.delete(l);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",n)};t.addEventListener("dispose",n)}updateAttributes(e){const t=e.getAttributes();for(const n of t)n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute?this.updateAttribute(n,Mo.STORAGE):this.updateAttribute(n,Mo.VERTEX);const i=this.getIndex(e);i!==null&&this.updateAttribute(i,Mo.INDEX)}updateAttribute(e,t){const i=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,i)):this.attributeCall.get(e.data)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e.data,i),this.attributeCall.set(e,i)):this.attributeCall.get(e)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e,i))}getIndex(e){const{geometry:t,material:i}=e;let n=t.index;if(i.wireframe===!0){const s=this.wireframes;let r=s.get(t);r===void 0?(r=dS(t),s.set(t,r)):r.version!==uA(t)&&(this.attributes.delete(r),r=dS(t),s.set(t,r)),n=r}return n}}class _z{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,i){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=i*(t/3):e.isPoints?this.render.points+=i*t:e.isLineSegments?this.render.lines+=i*(t/2):e.isLine?this.render.lines+=i*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){this[e].timestampCalls===0&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class dA{constructor(e){this.cacheKey=e,this.usedTimes=0}}class vz extends dA{constructor(e,t,i){super(e),this.vertexProgram=t,this.fragmentProgram=i}}class Sz extends dA{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let bz=0;class Xm{constructor(e,t,i=null,n=null){this.id=bz++,this.code=e,this.stage=t,this.transforms=i,this.attributes=n,this.usedTimes=0}}class Mz extends Or{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:i}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const s=n.pipeline;s&&(s.usedTimes--,s.computeProgram.usedTimes--);const r=this.nodes.getForCompute(e);let a=this.programs.compute.get(r.computeShader);a===void 0&&(s&&s.computeProgram.usedTimes===0&&this._releaseProgram(s.computeProgram),a=new Xm(r.computeShader,"compute",r.transforms,r.nodeAttributes),this.programs.compute.set(r.computeShader,a),i.createProgram(a));const l=this._getComputeCacheKey(e,a);let c=this.caches.get(l);c===void 0&&(s&&s.usedTimes===0&&this._releasePipeline(s),c=this._getComputePipeline(e,a,l,t)),c.usedTimes++,a.usedTimes++,n.version=e.version,n.pipeline=c}return n.pipeline}getForRender(e,t=null){const{backend:i}=this,n=this.get(e);if(this._needsRenderUpdate(e)){const s=n.pipeline;s&&(s.usedTimes--,s.vertexProgram.usedTimes--,s.fragmentProgram.usedTimes--);const r=e.getNodeBuilderState();let a=this.programs.vertex.get(r.vertexShader);a===void 0&&(s&&s.vertexProgram.usedTimes===0&&this._releaseProgram(s.vertexProgram),a=new Xm(r.vertexShader,"vertex"),this.programs.vertex.set(r.vertexShader,a),i.createProgram(a));let l=this.programs.fragment.get(r.fragmentShader);l===void 0&&(s&&s.fragmentProgram.usedTimes===0&&this._releaseProgram(s.fragmentProgram),l=new Xm(r.fragmentShader,"fragment"),this.programs.fragment.set(r.fragmentShader,l),i.createProgram(l));const c=this._getRenderCacheKey(e,a,l);let h=this.caches.get(c);h===void 0?(s&&s.usedTimes===0&&this._releasePipeline(s),h=this._getRenderPipeline(e,a,l,c,t)):e.pipeline=h,h.usedTimes++,a.usedTimes++,l.usedTimes++,n.pipeline=h}return n.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,i,n){i=i||this._getComputeCacheKey(e,t);let s=this.caches.get(i);return s===void 0&&(s=new Sz(i,t),this.caches.set(i,s),this.backend.createComputePipeline(s,n)),s}_getRenderPipeline(e,t,i,n,s){n=n||this._getRenderCacheKey(e,t,i);let r=this.caches.get(n);return r===void 0&&(r=new vz(n,t,i),this.caches.set(n,r),e.pipeline=r,this.backend.createRenderPipeline(e,s)),r}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,i){return t.id+","+i.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,i=e.stage;this.programs[i].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class Tz extends Or{constructor(e,t,i,n,s,r){super(),this.backend=e,this.textures=i,this.pipelines=s,this.attributes=n,this.nodes=t,this.info=r,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const i of t){const n=this.get(i);n.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,t),n.bindGroup=i)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const i of t){const n=this.get(i);n.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,t),n.bindGroup=i)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const i=t.attribute;this.attributes.update(i,Mo.STORAGE)}}_update(e,t){const{backend:i}=this;let n=!1;for(const s of e.bindings)if(!(s.isNodeUniformsGroup&&!this.nodes.updateGroup(s))){if(s.isUniformBuffer)s.update()&&i.updateBinding(s);else if(s.isSampler)s.update();else if(s.isSampledTexture){s.needsBindingsUpdate(this.textures.get(s.texture).generation)&&(n=!0);const r=s.update(),a=s.texture;r&&this.textures.updateTexture(a);const l=i.get(a);if(i.isWebGPUBackend===!0&&l.texture===void 0&&l.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",s,r,a,s.textureNode.value,n),this.textures.updateTexture(a),n=!0),a.isStorageTexture===!0){const c=this.get(a);s.store===!0?c.needsMipmap=!0:a.generateMipmaps===!0&&this.textures.needsMipmaps(a)&&c.needsMipmap===!0&&(this.backend.generateMipmaps(a),c.needsMipmap=!1)}}}n===!0&&this.backend.updateBindings(e,t)}}class fS{constructor(e,t,i=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=i}}class wz{constructor(e,t,i){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=i.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class fA{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class Az extends fA{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class Ez{constructor(e,t,i=""){this.name=e,this.type=t,this.code=i,Object.defineProperty(this,"isNodeCode",{value:!0})}}let Rz=0;class qm{constructor(e=null){this.id=Rz++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class Cz extends Ct{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class Di extends st{static get type(){return"CodeNode"}constructor(e="",t=[],i=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=i,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const i=e.getCodeFromNode(this,this.getNodeType(e));return i.code=this.code,i.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class Nz extends Di{static get type(){return"FunctionNode"}constructor(e="",t=[],i=""){super(e,t,i)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let i=t.nodeFunction;return i===void 0&&(i=e.parser.parseFunction(this.code),t.nodeFunction=i),i}generate(e,t){super.generate(e);const i=this.getNodeFunction(e),n=i.name,s=i.type,r=e.getCodeFromNode(this,s);n!==""&&(r.name=n);const a=e.getPropertyName(r),l=this.getNodeFunction(e).getCode(a);return r.code=l+`
`,t==="property"?a:e.format(`${a}()`,s,t)}}class ko{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class Pz extends ko{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class Iz extends ko{constructor(e,t=new mt){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class Lz extends ko{constructor(e,t=new V){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class Dz extends ko{constructor(e,t=new At){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class Uz extends ko{constructor(e,t=new Et){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Fz extends ko{constructor(e,t=new Mn){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class Bz extends ko{constructor(e,t=new Vt){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class Oz extends Pz{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class zz extends Iz{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class kz extends Lz{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Gz extends Dz{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Vz extends Uz{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Hz extends Fz{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Wz extends Bz{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class $z extends st{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const i=new Ju(t);return this._currentCond=tn(e,i),this.add(this._currentCond)}ElseIf(e,t){const i=new Ju(t),n=tn(e,i);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(e){return this._currentCond.elseNode=new Ju(e),this}build(e,...t){const i=cw();rf(this);for(const n of this.nodes)n.build(e,"void");return rf(i),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const Ym=te($z),za=4,pS=[.125,.215,.35,.446,.526,.582],co=20,Zm=new Ax(-1,1,1,-1,0,1),Xz=new Ns(90,1),mS=new Et;let Km=null,jm=0,Jm=0;const ao=(1+Math.sqrt(5))/2,Sa=1/ao,gS=[new V(-ao,Sa,0),new V(ao,Sa,0),new V(-Sa,0,ao),new V(Sa,0,ao),new V(0,ao,-Sa),new V(0,ao,Sa),new V(-1,1,-1),new V(1,1,-1),new V(-1,1,1),new V(1,1,1)],qz=[3,1,5,0,4,2],Qm=LO(ip(),Zs("faceIndex")).normalize(),$x=Q(Qm.x,Qm.y.negate(),Qm.z);class Yz{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(e,t=0,i=.1,n=100){Km=this._renderer.getRenderTarget(),jm=this._renderer.getActiveCubeFace(),Jm=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=xS(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=_S(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Km,jm,Jm),e.scissorTest=!1,Cu(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ro||e.mapping===Qa?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Km=this._renderer.getRenderTarget(),jm=this._renderer.getActiveCubeFace(),Jm=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:rn,minFilter:rn,generateMipmaps:!1,type:Vs,format:ll,colorSpace:Pn},n=yS(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=yS(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=Zz(s)),this._blurMaterial=Kz(s,e,t)}return n}async _compileMaterial(e){const t=new Po(this._lodPlanes[0],e);await this._renderer.compile(t,Zm)}_sceneToCubeUV(e,t,i,n){const s=Xz;s.near=t,s.far=i;const r=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear;l.getClearColor(mS),l.autoClear=!1;let h=this._backgroundBox;if(h===null){const f=new Yf({name:"PMREM.Background",side:Js,depthWrite:!1,depthTest:!1});h=new Po(new rh,f)}let u=!1;const d=e.background;d?d.isColor&&(h.material.color.copy(d),e.background=null,u=!0):(h.material.color.copy(mS),u=!0),l.setRenderTarget(n),l.clear(),u&&l.render(h,s);for(let f=0;f<6;f++){const p=f%3;p===0?(s.up.set(0,r[f],0),s.lookAt(a[f],0,0)):p===1?(s.up.set(0,0,r[f]),s.lookAt(0,a[f],0)):(s.up.set(0,r[f],0),s.lookAt(0,0,a[f]));const g=this._cubeSize;Cu(n,p*g,f>2?g:0,g,g),l.render(e,s)}l.autoClear=c,e.background=d}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===Ro||e.mapping===Qa;n?this._cubemapMaterial===null&&(this._cubemapMaterial=xS(e)):this._equirectMaterial===null&&(this._equirectMaterial=_S(e));const s=n?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=e;const r=this._lodMeshes[0];r.material=s;const a=this._cubeSize;Cu(t,0,0,3*a,2*a),i.setRenderTarget(t),i.render(r,Zm)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=gS[(n-s-1)%gS.length];this._blur(e,s-1,s,r,a)}t.autoClear=i}_blur(e,t,i,n,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,i,n,"latitudinal",s),this._halfBlur(r,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,r,a){const l=this._renderer,c=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=this._lodMeshes[n];u.material=c;const d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*co-1),g=s/p,m=isFinite(s)?1+Math.floor(h*g):co;m>co&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${co}`);const y=[];let x=0;for(let b=0;b<co;++b){const A=b/g,L=Math.exp(-A*A/2);y.push(L),b===0?x+=L:b<m&&(x+=2*L)}for(let b=0;b<y.length;b++)y[b]=y[b]/x;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=m,d.weights.array=y,d.latitudinal.value=r==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:_}=this;d.dTheta.value=p,d.mipInt.value=_-i;const v=this._sizeLods[n],E=3*v*(n>_-za?n-_+za:0),M=4*(this._cubeSize-v);Cu(t,E,M,3*v,2*v),l.setRenderTarget(t),l.render(u,Zm)}}function Zz(o){const e=[],t=[],i=[],n=[];let s=o;const r=o-za+1+pS.length;for(let a=0;a<r;a++){const l=Math.pow(2,s);t.push(l);let c=1/l;a>o-za?c=pS[a-o+za-1]:a===0&&(c=0),i.push(c);const h=1/(l-2),u=-h,d=1+h,f=[u,u,d,u,d,d,u,u,d,d,u,d],p=6,g=6,m=3,y=2,x=1,_=new Float32Array(m*g*p),v=new Float32Array(y*g*p),E=new Float32Array(x*g*p);for(let b=0;b<p;b++){const A=b%3*2/3-1,L=b>2?0:-1,S=[A,L,0,A+2/3,L,0,A+2/3,L+1,0,A,L,0,A+2/3,L+1,0,A,L+1,0],T=qz[b];_.set(S,m*g*T),v.set(f,y*g*T);const B=[T,T,T,T,T,T];E.set(B,x*g*T)}const M=new Oo;M.setAttribute("position",new In(_,m)),M.setAttribute("uv",new In(v,y)),M.setAttribute("faceIndex",new In(E,x)),e.push(M),n.push(new Po(M,null)),s>za&&s--}return{lodPlanes:e,sizeLods:t,sigmas:i,lodMeshes:n}}function yS(o,e,t){const i=new hl(o,e,t);return i.texture.mapping=Ug,i.texture.name="PMREM.cubeUv",i.texture.isPMREMTexture=!0,i.scissorTest=!0,i}function Cu(o,e,t,i,n){o.viewport.set(e,t,i,n),o.scissor.set(e,t,i,n)}function Xx(o){const e=new si;return e.depthTest=!1,e.depthWrite=!1,e.blending=Ja,e.name=`PMREM_${o}`,e}function Kz(o,e,t){const i=Bc(new Array(co).fill(0)),n=at(new V(0,1,0)),s=at(0),r=ee(co),a=at(0),l=at(1),c=Yt(null),h=at(0),u=ee(1/e),d=ee(1/t),f=ee(o),p={n:r,latitudinal:a,weights:i,poleAxis:n,outputDirection:$x,dTheta:s,samples:l,envMap:c,mipInt:h,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},g=Xx("blur");return g.uniforms=p,g.fragmentNode=UO({...p,latitudinal:a.equal(1)}),g}function xS(o){const e=Xx("cubemap");return e.fragmentNode=Fc(o,$x),e}function _S(o){const e=Xx("equirect");return e.fragmentNode=Yt(o,jw($x),0),e}let jz=0;class xy{constructor(e="",t=[],i=0,n=[]){this.name=e,this.bindings=t,this.index=i,this.bindingsReference=n,this.id=jz++}}const vS=new WeakMap,Jz=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Qz=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Nu=o=>(o=Number(o),o+(o%1?"":".0"));class pA{constructor(e,t,i){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=i,this.scene=null,this.camera=null,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=Ym(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new qm,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=vS.get(this.renderer);return e===void 0&&(e=new Ks,vS.set(this.renderer,e)),e}createRenderTarget(e,t,i){return new hl(e,t,i)}createCubeRenderTarget(e,t){return new Jw(e,t)}createPMREMGenerator(){return new Yz(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const i=this.getBindGroupsCache(),n=[];let s=!0;for(const a of t)n.push(a),s=s&&a.groupNode.shared!==!0;let r;return s?(r=i.get(n),r===void 0&&(r=new xy(e,n,this.bindingsIndexes[e].group,n),i.set(n,r))):r=new xy(e,n,this.bindingsIndexes[e].group,n),r}getBindGroupArray(e,t){const i=this.bindings[t];let n=i[e];return n===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),i[e]=n=[]),n}getBindings(){let e=this.bindGroups;if(e===null){const t={},i=this.bindings;for(const n of Nv)for(const s in i[n]){const r=i[n][s];(t[s]||(t[s]=[])).push(...r)}e=[];for(const n in t){const s=t[n],r=this._getBindGroup(n,s);e.push(r)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,i)=>t.bindings[0].groupNode.order-i.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const i=e[t];this.bindingsIndexes[i.name].group=t,i.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}buildUpdateNodes(){for(const e of this.nodes){const t=e.getUpdateType(),i=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==ct.NONE&&this.updateNodes.push(e.getSelf()),i!==ct.NONE&&this.updateBeforeNodes.push(e.getSelf()),n!==ct.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===rn||e.magFilter===Bg||e.magFilter===Ha||e.magFilter===Gs||e.minFilter===rn||e.minFilter===Bg||e.minFilter===Ha||e.minFilter===Gs}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const i=this.getDataFromNode(e);return i.cache===void 0&&(i.cache=new qm(t?this.getCache():null)),i.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new Et:e==="vec2"?t=new mt:e==="vec3"?t=new V:e==="vec4"&&(t=new At)),e==="float")return Nu(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Nu(t.r)}, ${Nu(t.g)}, ${Nu(t.b)} )`;const i=this.getTypeLength(e),n=this.getComponentType(e),s=r=>this.generateConst(n,r);if(i===2)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(i===3)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(i===4)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(i>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(s).join(", ")} )`;if(i>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const i=this.attributes;for(const s of i)if(s.name===e)return s;const n=new fS(e,t);return i.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===Hi)return"int";if(t===wi)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;const i=Jz.get(e);return(t==="float"?"":t[0])+i}getTypeFromArray(e){return Qz.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const i=t.array,n=e.itemSize,s=e.normalized;let r;return!(e instanceof OT)&&s!==!0&&(r=this.getTypeFromArray(i)),this.getTypeFromLength(n,r)}getTypeLength(e){const t=this.getVectorType(e),i=/vec([2-4])/.exec(t);return i!==null?Number(i[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Ym(this.stack),this.stacks.push(cw()||this.stack),rf(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,rf(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,i=null){i=i===null?e.isGlobal(this)?this.globalCache:this.cache:i;let n=i.getData(e);return n===void 0&&(n={},i.setData(e,n)),n[t]===void 0&&(n[t]={}),n[t]}getNodeProperties(e,t="any"){const i=this.getDataFromNode(e,t);return i.properties||(i.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const i=this.getDataFromNode(e);let n=i.bufferAttribute;if(n===void 0){const s=this.uniforms.index++;n=new fS("nodeAttribute"+s,t,e),this.bufferAttributes.push(n),i.bufferAttribute=n}return n}getStructTypeFromNode(e,t=this.shaderStage){const i=this.getDataFromNode(e,t);if(i.structType===void 0){const n=this.structs.index++;e.name=`StructType${n}`,this.structs[t].push(e),i.structType=e}return e}getUniformFromNode(e,t,i=this.shaderStage,n=null){const s=this.getDataFromNode(e,i,this.globalCache);let r=s.uniform;if(r===void 0){const a=this.uniforms.index++;r=new wz(n||"nodeUniform"+a,t,e),this.uniforms[i].push(r),s.uniform=r}return r}getVarFromNode(e,t=null,i=e.getNodeType(this),n=this.shaderStage){const s=this.getDataFromNode(e,n);let r=s.variable;if(r===void 0){const a=this.vars[n]||(this.vars[n]=[]);t===null&&(t="nodeVar"+a.length),r=new fA(t,i),a.push(r),s.variable=r}return r}getVaryingFromNode(e,t=null,i=e.getNodeType(this)){const n=this.getDataFromNode(e,"any");let s=n.varying;if(s===void 0){const r=this.varyings,a=r.length;t===null&&(t="nodeVarying"+a),s=new Az(t,i),r.push(s),n.varying=s}return s}getCodeFromNode(e,t,i=this.shaderStage){const n=this.getDataFromNode(e);let s=n.code;if(s===void 0){const r=this.codes[i]||(this.codes[i]=[]),a=r.length;s=new Ez("nodeCode"+a,t),r.push(s),n.code=s}return s}addFlowCodeHierarchy(e,t){const{flowCodes:i,flowCodeBlock:n}=this.getDataFromNode(e);let s=!0,r=t;for(;r;){if(n.get(r)===!0){s=!1;break}r=this.getDataFromNode(r).parentNodeBlock}if(s)for(const a of i)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,i){const n=this.getDataFromNode(e),s=n.flowCodes||(n.flowCodes=[]),r=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);s.push(t),r.set(i,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),i=this.flowChildNode(e,t);return this.flowsData.set(e,i),i}buildFunctionNode(e){const t=new Nz,i=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=i,t}flowShaderNode(e){const t=e.layout,i={[Symbol.iterator](){let r=0;const a=Object.values(this);return{next:()=>({value:a[r],done:r++>=a.length})}}};for(const r of t.inputs)i[r.name]=new Cz(r.type,r.name);e.layout=null;const n=e.call(i),s=this.flowStagesNode(n,t.type);return e.layout=t,s}flowStagesNode(e,t=null){const i=this.flow,n=this.vars,s=this.cache,r=this.buildStage,a=this.stack,l={code:""};this.flow=l,this.vars={},this.cache=new qm,this.stack=Ym();for(const c of Cv)this.setBuildStage(c),l.result=e.build(this,t);return l.vars=this.getVars(this.shaderStage),this.flow=i,this.vars=n,this.cache=s,this.stack=a,this.setBuildStage(r),l}getFunctionOperator(){return null}flowChildNode(e,t=null){const i=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=i,n}flowNodeFromShaderStage(e,t,i=null,n=null){const s=this.shaderStage;this.setShaderStage(e);const r=this.flowChildNode(t,i);return n!==null&&(r.code+=`${this.tab+n} = ${r.result};
`),this.flowCode[e]=this.flowCode[e]+r.code,this.setShaderStage(s),r}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const i=this.vars[e];if(i!==void 0)for(const n of i)t+=`${this.getVar(n.type,n.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let i="";if(t!==void 0)for(const n of t)i+=n.code+`
`;return i}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:i}=this;if(t!==null){let n=i.nodes.library.fromMaterial(t);n===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),n=new si),n.build(this)}else this.addFlow("compute",e);for(const n of Cv){this.setBuildStage(n),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const s of Nv){this.setShaderStage(s);const r=this.flowNodes[s];for(const a of r)n==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new Oz(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new zz(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new kz(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new Gz(e);if(t==="color")return new Vz(e);if(t==="mat3")return new Hz(e);if(t==="mat4")return new Wz(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,i){if(t=this.getVectorType(t),i=this.getVectorType(i),t===i||i===null||this.isReference(i))return e;const n=this.getTypeLength(t),s=this.getTypeLength(i);return n===16&&s===9?`${this.getType(i)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:n===9&&s===4?`${this.getType(i)}(${e}[0].xy, ${e}[1].xy)`:n>4||s>4||s===0?e:n===s?`${this.getType(i)}( ${e} )`:n>s?this.format(`${e}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s,this.getComponentType(t)),i):s===4&&n>1?`${this.getType(i)}( ${this.format(e,t,"vec3")}, 1.0 )`:n===2?`${this.getType(i)}( ${this.format(e,t,"vec2")}, 0.0 )`:(n===1&&s>1&&t!==this.getComponentType(i)&&(e=`${this.getType(this.getComponentType(i))}( ${e} )`),`${this.getType(i)}( ${e} )`)}getSignature(){return`// Three.js r${Xf} - Node System
`}}class SS{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let i=e.get(t);return i===void 0&&(i={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,i)),i}updateBeforeNode(e){const t=e.getUpdateBeforeType(),i=e.updateReference(this);if(t===ct.FRAME){const{frameMap:n}=this._getMaps(this.updateBeforeMap,i);n.get(i)!==this.frameId&&e.updateBefore(this)!==!1&&n.set(i,this.frameId)}else if(t===ct.RENDER){const{renderMap:n}=this._getMaps(this.updateBeforeMap,i);n.get(i)!==this.renderId&&e.updateBefore(this)!==!1&&n.set(i,this.renderId)}else t===ct.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),i=e.updateReference(this);if(t===ct.FRAME){const{frameMap:n}=this._getMaps(this.updateAfterMap,i);n.get(i)!==this.frameId&&e.updateAfter(this)!==!1&&n.set(i,this.frameId)}else if(t===ct.RENDER){const{renderMap:n}=this._getMaps(this.updateAfterMap,i);n.get(i)!==this.renderId&&e.updateAfter(this)!==!1&&n.set(i,this.renderId)}else t===ct.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),i=e.updateReference(this);if(t===ct.FRAME){const{frameMap:n}=this._getMaps(this.updateMap,i);n.get(i)!==this.frameId&&e.update(this)!==!1&&n.set(i,this.frameId)}else if(t===ct.RENDER){const{renderMap:n}=this._getMaps(this.updateMap,i);n.get(i)!==this.renderId&&e.update(this)!==!1&&n.set(i,this.renderId)}else t===ct.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class qx{constructor(e,t,i=null,n="",s=!1){this.type=e,this.name=t,this.count=i,this.qualifier=n,this.isConst=s}}qx.isNodeFunctionInput=!0;class $n extends dl{static get type(){return"TimerNode"}constructor(e=$n.LOCAL,t=1,i=0){super(i),this.scope=e,this.scale=t,this.updateType=ct.FRAME}update(e){const t=this.scope,i=this.scale;t===$n.LOCAL?this.value+=e.deltaTime*i:t===$n.DELTA?this.value=e.deltaTime*i:t===$n.FRAME?this.value=e.frameId:this.value=e.time*i}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}$n.LOCAL="local";$n.GLOBAL="global";$n.DELTA="delta";$n.FRAME="frame";const ek=(o,e=0)=>fe(new $n($n.LOCAL,o,e));class fi extends st{static get type(){return"OscNode"}constructor(e=fi.SINE,t=ek()){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}setup(){const e=this.method,t=fe(this.timeNode);let i=null;return e===fi.SINE?i=t.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5):e===fi.SQUARE?i=t.fract().round():e===fi.TRIANGLE?i=t.add(.5).fract().mul(2).sub(1).abs():e===fi.SAWTOOTH&&(i=t.fract()),i}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}fi.SINE="sine";fi.SQUARE="square";fi.TRIANGLE="triangle";fi.SAWTOOTH="sawtooth";fi.SINE;fi.SQUARE;fi.TRIANGLE;fi.SAWTOOTH;new _r;new V;new V;new V;new Vt;new V(0,0,-1);new At;new V;new V;new At;new mt;new hl;Oc.flipX();const eg=new Ax(-1,1,1,-1,0,1);class tk extends Oo{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Ws([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ws(t,2))}}const ik=new tk;class mA extends Po{constructor(e=null){super(ik,e),this.camera=eg,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,eg)}render(e){e.render(this,eg)}}class ls extends st{static get type(){return"SceneNode"}constructor(e=ls.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,i=this.scene!==null?this.scene:e.scene;let n;return t===ls.BACKGROUND_BLURRINESS?n=kt("backgroundBlurriness","float",i):t===ls.BACKGROUND_INTENSITY?n=kt("backgroundIntensity","float",i):console.error("THREE.SceneNode: Unknown scope:",t),n}}ls.BACKGROUND_BLURRINESS="backgroundBlurriness";ls.BACKGROUND_INTENSITY="backgroundIntensity";const nk=ge(ls,ls.BACKGROUND_BLURRINESS),bS=ge(ls,ls.BACKGROUND_INTENSITY),ka={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},bi={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Mi={Store:"store",Discard:"discard"},ei={Load:"load",Clear:"clear"},tg={CCW:"ccw",CW:"cw"},ig={None:"none",Front:"front",Back:"back"},nl={Uint16:"uint16",Uint32:"uint32"},I={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},ng={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},df={Linear:"linear",Nearest:"nearest"},Je={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},io={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},MS={None:0,Red:1,Green:2,Blue:4,Alpha:8,All:15},yr={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},_y={Uniform:"uniform",Storage:"storage",ReadOnlyStorage:"read-only-storage"},TS={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},kl={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},wS={OneD:"1d",TwoD:"2d",ThreeD:"3d"},Rn={OneD:"1d",TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",CubeArray:"cube-array",ThreeD:"3d"},sk={All:"all",StencilOnly:"stencil-only",DepthOnly:"depth-only"},Pu={Vertex:"vertex",Instance:"instance"},vy={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"},rk=new mt;class ok extends ch{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class AS extends ok{static get type(){return"PassMultipleTextureNode"}constructor(e,t,i=!1){super(e,null),this.textureName=t,this.previousTexture=i}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class cp extends ri{static get type(){return"PassNode"}constructor(e,t,i,n={}){super("vec4"),this.scope=e,this.scene=t,this.camera=i,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const s=new oh;s.isRenderTargetTexture=!0,s.name="depth";const r=new hl(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Vs,...n});r.texture.name="output",r.depthTexture=s,this.renderTarget=r,this.updateBeforeType=ct.FRAME,this._textures={output:r.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=at(0),this._cameraFar=at(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const i=this._textures[e],n=this.renderTarget.textures.indexOf(i);this.renderTarget.textures[n]=t,this._textures[e]=t,this._previousTextures[e]=i,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(this._textureNodes[e]=t=fe(new AS(this,e)),this._textureNodes[e].updateTexture()),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),this._previousTextureNodes[e]=t=fe(new AS(this,e,!0)),this._previousTextureNodes[e].updateTexture()),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const i=this._cameraNear,n=this._cameraFar;this._viewZNodes[e]=t=Yw(this.getTextureNode(e),i,n)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const i=this._cameraNear,n=this._cameraFar,s=this.getViewZNode(e);this._linearDepthNodes[e]=t=nd(s,i,n)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===cp.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:i,camera:n}=this;this._pixelRatio=t.getPixelRatio();const s=t.getSize(rk);this.setSize(s.width,s.height);const r=t.getRenderTarget(),a=t.getMRT();this._cameraNear.value=n.near,this._cameraFar.value=n.far;for(const l in this._previousTextures)this.toggleTexture(l);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(i,n),t.setRenderTarget(r),t.setMRT(a)}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget.setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}cp.COLOR="color";cp.DEPTH="depth";class gA extends st{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const i=e.context.getViewZ;return i!==void 0&&(t=i(this)),(t||Ui.z).negate()}setup(){return this.factorNode}}class ak extends gA{static get type(){return"FogRangeNode"}constructor(e,t,i){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=i}setup(e){const t=this.getViewZNode(e);return Io(this.nearNode,this.farNode,t)}}const lk=te(ak);class ck extends gA{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),i=this.densityNode;return i.mul(i,t,t).negate().exp().oneMinus()}}const hk=te(ck),uk=Me(({depthTexture:o,shadowCoord:e})=>Yt(o,e.xy).compare(e.z)),dk=Me(({depthTexture:o,shadowCoord:e,shadow:t})=>{const i=(g,m)=>Yt(o,g).compare(m),n=kt("mapSize","vec2",t).setGroup(ut),s=kt("radius","float",t).setGroup(ut),r=we(1).div(n),a=r.x.negate().mul(s),l=r.y.negate().mul(s),c=r.x.mul(s),h=r.y.mul(s),u=a.div(2),d=l.div(2),f=c.div(2),p=h.div(2);return bn(i(e.xy.add(we(a,l)),e.z),i(e.xy.add(we(0,l)),e.z),i(e.xy.add(we(c,l)),e.z),i(e.xy.add(we(u,d)),e.z),i(e.xy.add(we(0,d)),e.z),i(e.xy.add(we(f,d)),e.z),i(e.xy.add(we(a,0)),e.z),i(e.xy.add(we(u,0)),e.z),i(e.xy,e.z),i(e.xy.add(we(f,0)),e.z),i(e.xy.add(we(c,0)),e.z),i(e.xy.add(we(u,p)),e.z),i(e.xy.add(we(0,p)),e.z),i(e.xy.add(we(f,p)),e.z),i(e.xy.add(we(a,h)),e.z),i(e.xy.add(we(0,h)),e.z),i(e.xy.add(we(c,h)),e.z)).mul(1/17)}),fk=Me(({depthTexture:o,shadowCoord:e,shadow:t})=>{const i=(h,u)=>Yt(o,h).compare(u),n=kt("mapSize","vec2",t).setGroup(ut),s=we(1).div(n),r=s.x,a=s.y,l=e.xy,c=fl(l.mul(n).add(.5));return l.subAssign(c.mul(s)),bn(i(l,e.z),i(l.add(we(r,0)),e.z),i(l.add(we(0,a)),e.z),i(l.add(s),e.z),Ft(i(l.add(we(r.negate(),0)),e.z),i(l.add(we(r.mul(2),0)),e.z),c.x),Ft(i(l.add(we(r.negate(),a)),e.z),i(l.add(we(r.mul(2),a)),e.z),c.x),Ft(i(l.add(we(0,a.negate())),e.z),i(l.add(we(0,a.mul(2))),e.z),c.y),Ft(i(l.add(we(r,a.negate())),e.z),i(l.add(we(r,a.mul(2))),e.z),c.y),Ft(Ft(i(l.add(we(r.negate(),a.negate())),e.z),i(l.add(we(r.mul(2),a.negate())),e.z),c.x),Ft(i(l.add(we(r.negate(),a.mul(2))),e.z),i(l.add(we(r.mul(2),a.mul(2))),e.z),c.x),c.y)).mul(1/9)}),pk=Me(({depthTexture:o,shadowCoord:e})=>{const t=ee(1).toVar(),i=Yt(o).uv(e.xy).rg,n=Aw(e.z,i.x);return Fi(n.notEqual(ee(1)),()=>{const s=e.z.sub(i.x),r=qn(0,i.y.mul(i.y));let a=r.div(r.add(s.mul(s)));a=Ir(bo(a,.3).div(.95-.3)),t.assign(Ir(qn(n,a)))}),t}),mk=Me(({samples:o,radius:e,size:t,shadowPass:i})=>{const n=ee(0).toVar(),s=ee(0).toVar(),r=o.lessThanEqual(ee(1)).select(ee(0),ee(2).div(o.sub(1))),a=o.lessThanEqual(ee(1)).select(ee(0),ee(-1));zs({start:Xt(0),end:Xt(o),type:"int",condition:"<"},({i:c})=>{const h=a.add(ee(c).mul(r)),u=i.uv(bn(op.xy,we(0,h).mul(e)).div(t)).x;n.addAssign(u),s.addAssign(u.mul(u))}),n.divAssign(o),s.divAssign(o);const l=Dx(s.sub(n.mul(n)));return we(n,l)}),gk=Me(({samples:o,radius:e,size:t,shadowPass:i})=>{const n=ee(0).toVar(),s=ee(0).toVar(),r=o.lessThanEqual(ee(1)).select(ee(0),ee(2).div(o.sub(1))),a=o.lessThanEqual(ee(1)).select(ee(0),ee(-1));zs({start:Xt(0),end:Xt(o),type:"int",condition:"<"},({i:c})=>{const h=a.add(ee(c).mul(r)),u=i.uv(bn(op.xy,we(h,0).mul(e)).div(t));n.addAssign(u.x),s.addAssign(bn(u.y.mul(u.y),u.x.mul(u.x)))}),n.divAssign(o),s.divAssign(o);const l=Dx(s.sub(n.mul(n)));return we(n,l)}),yk=[uk,dk,fk,pk];let ba=null;const Iu=new mA;class Go extends pl{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.updateType=ct.FRAME,this.light=e,this.color=new Et,this.colorNode=at(this.color).setGroup(ut),this.baseColorNode=null,this.shadowMap=null,this.shadowNode=null,this.shadowColorNode=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.isAnalyticLightNode=!0}getCacheKey(){return tf(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadow(e){const{object:t,renderer:i}=e;if(i.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){ba===null&&(ba=new si,ba.fragmentNode=ot(0,0,0,1),ba.isShadowNodeMaterial=!0,ba.name="ShadowMaterial");const s=i.shadowMap.type,r=this.light.shadow,a=new oh;a.compareFunction=yx;const l=e.createRenderTarget(r.mapSize.width,r.mapSize.height);if(l.depthTexture=a,r.camera.updateProjectionMatrix(),s===ou){a.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:Pc,type:Vs}),this.vsmShadowMapHorizontal=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:Pc,type:Vs});const _=Yt(a),v=Yt(this.vsmShadowMapVertical.texture),E=kt("blurSamples","float",r).setGroup(ut),M=kt("radius","float",r).setGroup(ut),b=kt("mapSize","vec2",r).setGroup(ut);let A=this.vsmMaterialVertical||(this.vsmMaterialVertical=new si);A.fragmentNode=mk({samples:E,radius:M,size:b,shadowPass:_}).context(e.getSharedContext()),A.name="VSMVertical",A=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new si),A.fragmentNode=gk({samples:E,radius:M,size:b,shadowPass:v}).context(e.getSharedContext()),A.name="VSMHorizontal"}const c=kt("intensity","float",r).setGroup(ut),h=kt("bias","float",r).setGroup(ut),u=kt("normalBias","float",r).setGroup(ut),d=t.material.shadowPositionNode||hy;let f=at(r.matrix).setGroup(ut).mul(d.add(rp.mul(u)));f=f.xyz.div(f.w);let p=f.z.add(h);i.coordinateSystem===No&&(p=p.mul(2).sub(1)),f=Q(f.x,f.y.oneMinus(),p);const g=f.x.greaterThanEqual(0).and(f.x.lessThanEqual(1)).and(f.y.greaterThanEqual(0)).and(f.y.lessThanEqual(1)).and(f.z.lessThanEqual(1)),m=r.filterNode||yk[i.shadowMap.type]||null;if(m===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const y=Yt(l.texture,f),x=g.select(m({depthTexture:s===ou?this.vsmShadowMapHorizontal.texture:a,shadowCoord:f,shadow:r}),ee(1));this.shadowMap=l,this.light.shadow.map=l,this.shadowNode=x,this.shadowColorNode=n=this.colorNode.mul(Ft(1,x.rgb.mix(y,1),c.mul(y.a))),this.baseColorNode=this.colorNode}this.colorNode=n,this.updateBeforeType=ct.RENDER}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&this.disposeShadow()}updateShadow(e){const{shadowMap:t,light:i}=this,{renderer:n,scene:s,camera:r}=e,a=n.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const c=s.overrideMaterial;s.overrideMaterial=ba,t.setSize(i.shadow.mapSize.width,i.shadow.mapSize.height),i.shadow.updateMatrices(i),i.shadow.camera.layers.mask=r.layers.mask;const h=n.getRenderTarget(),u=n.getRenderObjectFunction();n.setRenderObjectFunction((d,...f)=>{(d.castShadow===!0||d.receiveShadow&&a===ou)&&n.renderObject(d,...f)}),n.setRenderTarget(t),n.render(s,i.shadow.camera),n.setRenderObjectFunction(u),i.isPointLight!==!0&&a===ou&&this.vsmPass(e,i),n.setRenderTarget(h),s.overrideMaterial=c}vsmPass(e,t){const{renderer:i}=e;this.vsmShadowMapVertical.setSize(t.shadow.mapSize.width,t.shadow.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.shadow.mapSize.width,t.shadow.mapSize.height),i.setRenderTarget(this.vsmShadowMapVertical),Iu.material=this.vsmMaterialVertical,Iu.render(i),i.setRenderTarget(this.vsmShadowMapHorizontal),Iu.material=this.vsmMaterialHorizontal,Iu.render(i)}disposeShadow(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.shadowNode=null,this.shadowColorNode=null,this.baseColorNode=null,this.updateBeforeType=ct.NONE}updateBefore(e){const t=this.light.shadow;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const yA=Me(o=>{const{lightDistance:e,cutoffDistance:t,decayExponent:i}=o,n=e.pow(i).max(.01).reciprocal();return t.greaterThan(0).select(n.mul(e.div(t).pow4().oneMinus().clamp().pow2()),n)});let Lu;function Yx(o){Lu=Lu||new WeakMap;let e=Lu.get(o);return e===void 0&&Lu.set(o,e={}),e}function xA(o){const e=Yx(o);return e.position||(e.position=at(new V).setGroup(ut).onRenderUpdate((t,i)=>i.value.setFromMatrixPosition(o.matrixWorld)))}function xk(o){const e=Yx(o);return e.targetPosition||(e.targetPosition=at(new V).setGroup(ut).onRenderUpdate((t,i)=>i.value.setFromMatrixPosition(o.target.matrixWorld)))}function Zx(o){const e=Yx(o);return e.viewPosition||(e.viewPosition=at(new V).setGroup(ut).onRenderUpdate(({camera:t},i)=>{i.value=i.value||new V,i.value.setFromMatrixPosition(o.matrixWorld),i.value.applyMatrix4(t.matrixWorldInverse)}))}const _A=o=>tr.transformDirection(xA(o).sub(xk(o))),_k=Me(([o])=>{const e=o.mul(.9478672986).add(.0521327014).pow(2.4),t=o.mul(.0773993808),i=o.lessThanEqual(.04045);return Ft(e,t,i)}).setLayout({name:"sRGBToLinearSRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),vk=Me(([o])=>{const e=o.pow(.41666).mul(1.055).sub(.055),t=o.mul(12.92),i=o.lessThanEqual(.0031308);return Ft(e,t,i)}).setLayout({name:"linearSRGBTosRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Sk=Me(([o,e])=>o.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),bk=Me(([o,e])=>(o=o.mul(e),o.div(o.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Mk=Me(([o,e])=>{o=o.mul(e),o=o.sub(.004).max(0);const t=o.mul(o.mul(6.2).add(.5)),i=o.mul(o.mul(6.2).add(1.7)).add(.06);return t.div(i).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Tk=Me(([o])=>{const e=o.mul(o.add(.0245786)).sub(90537e-9),t=o.mul(o.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),wk=Me(([o,e])=>{const t=an(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),i=an(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return o=o.mul(e).div(.6),o=t.mul(o),o=Tk(o),o=i.mul(o),o.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Ak=an(Q(1.6605,-.1246,-.0182),Q(-.5876,1.1329,-.1006),Q(-.0728,-.0083,1.1187)),Ek=an(Q(.6274,.0691,.0164),Q(.3293,.9195,.088),Q(.0433,.0113,.8956)),Rk=Me(([o])=>{const e=Q(o).toVar(),t=Q(e.mul(e)).toVar(),i=Q(t.mul(t)).toVar();return ee(15.5).mul(i.mul(t)).sub(Pt(40.14,i.mul(e))).add(Pt(31.96,i).sub(Pt(6.868,t.mul(e))).add(Pt(.4298,t).add(Pt(.1191,e).sub(.00232))))}),Ck=Me(([o,e])=>{const t=Q(o).toVar(),i=an(Q(.856627153315983,.137318972929847,.11189821299995),Q(.0951212405381588,.761241990602591,.0767994186031903),Q(.0482516061458583,.101439036467562,.811302368396859)),n=an(Q(1.1271005818144368,-.1413297634984383,-.14132976349843826),Q(-.11060664309660323,1.157823702216272,-.11060664309660294),Q(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=ee(-12.47393),r=ee(4.026069);return t.mulAssign(e),t.assign(Ek.mul(t)),t.assign(i.mul(t)),t.assign(qn(t,1e-10)),t.assign(Jf(t)),t.assign(t.sub(s).div(r.sub(s))),t.assign(Ir(t,0,1)),t.assign(Rk(t)),t.assign(n.mul(t)),t.assign(ep(qn(Q(0),t),Q(2.2))),t.assign(Ak.mul(t)),t.assign(Ir(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Nk=Me(([o,e])=>{const t=ee(.76),i=ee(.15);o=o.mul(e);const n=hf(o.r,hf(o.g,o.b)),s=tn(n.lessThan(.08),n.sub(Pt(6.25,n.mul(n))),.04);o.subAssign(s);const r=qn(o.r,qn(o.g,o.b));Fi(r.lessThan(t),()=>o);const a=bo(1,t),l=bo(1,a.mul(a).div(r.add(a.sub(t))));o.mulAssign(l.div(r));const c=bo(1,Pr(1,i.mul(r.sub(l)).add(1)));return Ft(o,Q(l),c)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Pk extends st{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:i}=e;i.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}te(Pk);class ms extends ri{static get type(){return"AtomicFunctionNode"}constructor(e,t,i,n=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=i,this.storeNode=n}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,i=this.getNodeType(e),n=this.getInputType(e),s=this.pointerNode,r=this.valueNode,a=[];a.push(`&${s.build(e,n)}`),a.push(r.build(e,n));const l=`${e.getMethod(t,i)}( ${a.join(", ")} )`;if(this.storeNode!==null){const c=this.storeNode.build(e,n);e.addLineFlowCode(`${c} = ${l}`,this)}else e.addLineFlowCode(l,this)}}ms.ATOMIC_LOAD="atomicLoad";ms.ATOMIC_STORE="atomicStore";ms.ATOMIC_ADD="atomicAdd";ms.ATOMIC_SUB="atomicSub";ms.ATOMIC_MAX="atomicMax";ms.ATOMIC_MIN="atomicMin";ms.ATOMIC_AND="atomicAnd";ms.ATOMIC_OR="atomicOr";ms.ATOMIC_XOR="atomicXor";te(ms);const Ik=Me(([o,e])=>{const t=o.x,i=o.y,n=o.z;let s=e.element(0).mul(.886227);return s=s.add(e.element(1).mul(2*.511664).mul(i)),s=s.add(e.element(2).mul(2*.511664).mul(n)),s=s.add(e.element(3).mul(2*.511664).mul(t)),s=s.add(e.element(4).mul(2*.429043).mul(t).mul(i)),s=s.add(e.element(5).mul(2*.429043).mul(i).mul(n)),s=s.add(e.element(6).mul(n.mul(n).mul(.743125).sub(.247708))),s=s.add(e.element(7).mul(2*.429043).mul(t).mul(n)),s=s.add(e.element(8).mul(.429043).mul(Pt(t,t).sub(Pt(i,i)))),s});class Lk extends Go{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=at(0).setGroup(ut),this.decayExponentNode=at(0).setGroup(ut)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(e){const{colorNode:t,cutoffDistanceNode:i,decayExponentNode:n,light:s}=this,r=e.context.lightingModel,a=Zx(s).sub(Ui),l=a.normalize(),c=a.length(),h=yA({lightDistance:c,cutoffDistance:i,decayExponent:n}),u=t.mul(h),d=e.context.reflectedLight;r.direct({lightDirection:l,lightColor:u,reflectedLight:d},e.stack,e)}}class Dk extends Go{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,i=this.colorNode,n=_A(this.light),s=e.context.reflectedLight;t.direct({lightDirection:n,lightColor:i,reflectedLight:s},e.stack,e)}}const sg=new Vt,Du=new Vt;let Gl=null;class Uk extends Go{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=at(new V).setGroup(ut),this.halfWidth=at(new V).setGroup(ut)}update(e){super.update(e);const{light:t}=this,i=e.camera.matrixWorldInverse;Du.identity(),sg.copy(t.matrixWorld),sg.premultiply(i),Du.extractRotation(sg),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(Du),this.halfHeight.value.applyMatrix4(Du)}setup(e){super.setup(e);let t,i;e.isAvailable("float32Filterable")?(t=Yt(Gl.LTC_FLOAT_1),i=Yt(Gl.LTC_FLOAT_2)):(t=Yt(Gl.LTC_HALF_1),i=Yt(Gl.LTC_HALF_2));const{colorNode:n,light:s}=this,r=e.context.lightingModel,a=Zx(s),l=e.context.reflectedLight;r.directRectArea({lightColor:n,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:l,ltc_1:t,ltc_2:i},e.stack,e)}static setLTC(e){Gl=e}}class vA extends Go{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=at(0).setGroup(ut),this.penumbraCosNode=at(0).setGroup(ut),this.cutoffDistanceNode=at(0).setGroup(ut),this.decayExponentNode=at(0).setGroup(ut)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:i}=this;return Io(t,i,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:i,cutoffDistanceNode:n,decayExponentNode:s,light:r}=this,a=Zx(r).sub(Ui),l=a.normalize(),c=l.dot(_A(r)),h=this.getSpotAttenuation(c),u=a.length(),d=yA({lightDistance:u,cutoffDistance:n,decayExponent:s}),f=i.mul(h).mul(d),p=e.context.reflectedLight;t.direct({lightDirection:l,lightColor:f,reflectedLight:p},e.stack,e)}}class Fk extends vA{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let i=null;if(t&&t.isTexture===!0){const n=e.acos().mul(1/Math.PI);i=Yt(t,we(n,0),0).r}else i=super.getSpotAttenuation(e);return i}}class Bk extends Go{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class Ok extends Go{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=xA(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=at(new Et).setGroup(ut)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:i,lightDirectionNode:n}=this,r=Yn.dot(n).mul(.5).add(.5),a=Ft(i,t,r);e.context.irradiance.addAssign(a)}}class zk extends Go{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let i=0;i<9;i++)t.push(new V);this.lightProbe=Bc(t)}update(e){const{light:t}=this;super.update(e);for(let i=0;i<9;i++)this.lightProbe.array[i].copy(t.sh.coefficients[i]).multiplyScalar(t.intensity)}setup(e){const t=Ik(rp,this.lightProbe);e.context.irradiance.addAssign(t)}}class SA{parseFunction(){console.warn("Abstract function.")}}class Kx{constructor(e,t,i="",n=""){this.type=e,this.inputs=t,this.name=i,this.precision=n}getCode(){console.warn("Abstract function.")}}Kx.isNodeFunction=!0;const kk=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,Gk=/[a-z_0-9]+/ig,ES="#pragma main",Vk=o=>{o=o.trim();const e=o.indexOf(ES),t=e!==-1?o.slice(e+ES.length):o,i=t.match(kk);if(i!==null&&i.length===5){const n=i[4],s=[];let r=null;for(;(r=Gk.exec(n))!==null;)s.push(r);const a=[];let l=0;for(;l<s.length;){const p=s[l][0]==="const";p===!0&&l++;let g=s[l][0];g==="in"||g==="out"||g==="inout"?l++:g="";const m=s[l++][0];let y=Number.parseInt(s[l][0]);Number.isNaN(y)===!1?l++:y=null;const x=s[l++][0];a.push(new qx(m,x,y,g,p))}const c=t.substring(i[0].length),h=i[3]!==void 0?i[3]:"",u=i[2],d=i[1]!==void 0?i[1]:"",f=e!==-1?o.slice(0,e):"";return{type:u,inputs:a,name:h,precision:d,inputsCode:n,blockCode:c,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class Hk extends Kx{constructor(e){const{type:t,inputs:i,name:n,precision:s,inputsCode:r,blockCode:a,headerCode:l}=Vk(e);super(t,i,n,s),this.inputsCode=r,this.blockCode=a,this.headerCode=l}getCode(e=this.name){let t;const i=this.blockCode;if(i!==""){const{type:n,inputsCode:s,headerCode:r,precision:a}=this;let l=`${n} ${e} ( ${s.trim()} )`;a!==""&&(l=`${a} ${l}`),t=r+l+i}else t="";return t}}class Wk extends SA{parseFunction(e){return new Hk(e)}}function $k(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function Xk(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}class qk{constructor(){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparent=[],this.bundles=[],this.lightsNode=new $w([]),this.lightsArray=[],this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,i,n,s,r){let a=this.renderItems[this.renderItemsIndex];return a===void 0?(a={id:e.id,object:e,geometry:t,material:i,groupOrder:n,renderOrder:e.renderOrder,z:s,group:r},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=i,a.groupOrder=n,a.renderOrder=e.renderOrder,a.z=s,a.group=r),this.renderItemsIndex++,a}push(e,t,i,n,s,r){const a=this.getNextRenderItem(e,t,i,n,s,r);e.occlusionTest===!0&&this.occlusionQueryCount++,(i.transparent===!0||i.transmission>0?this.transparent:this.opaque).push(a)}unshift(e,t,i,n,s,r){const a=this.getNextRenderItem(e,t,i,n,s,r);(i.transparent===!0?this.transparent:this.opaque).unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}getLightsNode(){return this.lightsNode.fromLights(this.lightsArray)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||$k),this.transparent.length>1&&this.transparent.sort(t||Xk)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const i=this.renderItems[e];if(i.id===null)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.groupOrder=null,i.renderOrder=null,i.z=null,i.group=null}}}class Yk{constructor(){this.lists=new Ks}get(e,t){const i=this.lists,n=[e,t];let s=i.get(n);return s===void 0&&(s=new qk,i.set(n,s)),s}dispose(){this.lists=new Ks}}let Zk=0;class Kk{constructor(){this.id=Zk++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new At,this.scissor=!1,this.scissorValue=new At,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return bA(this)}}function bA(o){const{textures:e,activeCubeFace:t}=o,i=[t];for(const n of e)i.push(n.id);return iw(i)}class jk{constructor(){this.chainMaps={}}get(e,t,i=null){const n=[e,t];let s;if(i===null)s="default";else{const l=i.texture.format;s=`${i.textures.length}:${l}:${i.samples}:${i.depthBuffer}:${i.stencilBuffer}`}const r=this.getChainMap(s);let a=r.get(n);return a===void 0&&(a=new Kk,r.set(n,a)),i!==null&&(a.sampleCount=i.samples===0?1:i.samples),a}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Ks)}dispose(){this.chainMaps={}}}const Jk=new V;class Qk extends Or{constructor(e,t,i){super(),this.renderer=e,this.backend=t,this.info=i}updateRenderTarget(e,t=0){const i=this.get(e),n=e.samples===0?1:e.samples,s=i.depthTextureMips||(i.depthTextureMips={}),r=e.textures,a=this.getSize(r[0]),l=a.width>>t,c=a.height>>t;let h=e.depthTexture||s[t],u=!1;h===void 0&&(h=new oh,h.format=e.stencilBuffer?el:So,h.type=e.stencilBuffer?ih:wi,h.image.width=l,h.image.height=c,s[t]=h),(i.width!==a.width||a.height!==i.height)&&(u=!0,h.needsUpdate=!0,h.image.width=l,h.image.height=c),i.width=a.width,i.height=a.height,i.textures=r,i.depthTexture=h,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.renderTarget=e,i.sampleCount!==n&&(u=!0,h.needsUpdate=!0,i.sampleCount=n);const d={sampleCount:n};for(let f=0;f<r.length;f++){const p=r[f];u&&(p.needsUpdate=!0),this.updateTexture(p,d)}if(this.updateTexture(h,d),i.initialized!==!0){i.initialized=!0;const f=()=>{e.removeEventListener("dispose",f);for(let p=0;p<r.length;p++)this._destroyTexture(r[p]);this._destroyTexture(h),this.delete(e)};e.addEventListener("dispose",f)}}updateTexture(e,t={}){const i=this.get(e);if(i.initialized===!0&&i.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(n&&i.initialized===!0&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){const h=this.renderer.getRenderTarget();h?e.type=h.texture.type:e.type=Os}const{width:r,height:a,depth:l}=this.getSize(e);if(t.width=r,t.height=a,t.depth=l,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,r,a):1,n||e.isStorageTexture===!0)s.createSampler(e),s.createTexture(e,t),i.generation=e.version;else if(i.initialized!==!0&&s.createSampler(e),e.version>0){const h=e.image;if(h===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(h.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const u=[];for(const d of e.images)u.push(d);t.images=u}else t.image=h;(i.isDefaultTexture===void 0||i.isDefaultTexture===!0)&&(s.createTexture(e,t),i.isDefaultTexture=!1,i.generation=e.version),e.source.dataReady===!0&&s.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),i.isDefaultTexture=!0,i.generation=e.version;if(i.initialized!==!0){i.initialized=!0,i.generation=e.version,this.info.memory.textures++;const c=()=>{e.removeEventListener("dispose",c),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",c)}i.version=e.version}getSize(e,t=Jk){let i=e.images?e.images[0]:e.image;return i?(i.image!==void 0&&(i=i.image),t.width=i.width,t.height=i.height,t.depth=e.isCubeTexture?6:i.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,i){let n;return e.isCompressedTexture?n=e.mipmaps.length:n=Math.floor(Math.log2(Math.max(t,i)))+1,n}needsMipmaps(e){return this.isEnvironmentTexture(e)?!0:e.isCompressedTexture===!0||e.minFilter!==Ri&&e.minFilter!==rn}isEnvironmentTexture(e){const t=e.mapping;return t===eh||t===th||t===Ro||t===Qa}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class jx extends Et{constructor(e,t,i,n=1){super(e,t,i),this.a=n}set(e,t,i,n=1){return this.a=n,super.set(e,t,i)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}const Gn=new jx;class eG extends Or{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,i){const n=this.renderer,s=this.nodes.getBackgroundNode(e)||e.background;let r=!1;if(s===null)n._clearColor.getRGB(Gn,Pn),Gn.a=n._clearColor.a;else if(s.isColor===!0)s.getRGB(Gn,Pn),Gn.a=1,r=!0;else if(s.isNode===!0){const a=this.get(e),l=s;Gn.copy(n._clearColor);let c=a.backgroundMesh;if(c===void 0){const u=Fx(ot(l).mul(bS),{getUV:()=>rp,getTextureLevel:()=>nk});let d=uy();d=d.setZ(d.w);const f=new si;f.name="Background.material",f.side=Js,f.depthTest=!1,f.depthWrite=!1,f.fog=!1,f.lights=!1,f.vertexNode=d,f.colorNode=u,a.backgroundMeshNode=u,a.backgroundMesh=c=new Po(new Mx(1,32,32),f),c.frustumCulled=!1,c.name="Background.mesh",c.onBeforeRender=function(p,g,m){this.matrixWorld.copyPosition(m.matrixWorld)}}const h=l.getCacheKey();a.backgroundCacheKey!==h&&(a.backgroundMeshNode.node=ot(l).mul(bS),a.backgroundMeshNode.needsUpdate=!0,c.material.needsUpdate=!0,a.backgroundCacheKey=h),t.unshift(c,c.geometry,c.material,0,0,null)}else console.error("THREE.Renderer: Unsupported background configuration.",s);if(n.autoClear===!0||r===!0){Gn.multiplyScalar(Gn.a);const a=i.clearColorValue;a.r=Gn.r,a.g=Gn.g,a.b=Gn.b,a.a=Gn.a,i.depthClearValue=n._clearDepth,i.stencilClearValue=n._clearStencil,i.clearColor=n.autoClearColor===!0,i.clearDepth=n.autoClearDepth===!0,i.clearStencil=n.autoClearStencil===!0}else i.clearColor=!1,i.clearDepth=!1,i.clearStencil=!1}}class tG{constructor(e,t,i,n,s,r,a,l,c,h=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=i,this.transforms=h,this.nodeAttributes=n,this.bindings=s,this.updateNodes=r,this.updateBeforeNodes=a,this.updateAfterNodes=l,this.monitor=c,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const n=new xy(t.name,[],t.index,t);e.push(n);for(const s of t.bindings)n.bindings.push(s.clone())}else e.push(t);return e}}const RS=new WeakMap;class iG extends Or{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new SS,this.nodeBuilderCache=new Map,this.callHashCache=new Ks,this.groupsData=new Ks}updateGroup(e){const t=e.groupNode,i=t.name;if(i===dw.name)return!0;if(i===ut.name){const r=this.get(e),a=this.nodeFrame.renderId;return r.renderId!==a?(r.renderId=a,!0):!1}if(i===PU.name){const r=this.get(e),a=this.nodeFrame.frameId;return r.frameId!==a?(r.frameId=a,!0):!1}const n=[t,e];let s=this.groupsData.get(n);return s===void 0&&this.groupsData.set(n,s={}),s.version!==t.version?(s.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let i=t.nodeBuilderState;if(i===void 0){const{nodeBuilderCache:n}=this,s=this.getForRenderCacheKey(e);if(i=n.get(s),i===void 0){const r=this.backend.createNodeBuilder(e.object,this.renderer);r.scene=e.scene,r.material=e.material,r.camera=e.camera,r.context.material=e.material,r.lightsNode=e.lightsNode,r.environmentNode=this.getEnvironmentNode(e.scene),r.fogNode=this.getFogNode(e.scene),r.clippingContext=e.clippingContext,r.build(),i=this._createNodeBuilderState(r),n.set(s,i)}i.usedTimes++,t.nodeBuilderState=i}return i}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let i=t.nodeBuilderState;if(i===void 0){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),i=this._createNodeBuilderState(n),t.nodeBuilderState=i}return i}_createNodeBuilderState(e){return new tG(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const i=[e,t],n=this.renderer.info.calls;let s=this.callHashCache.get(i);if(s===void 0||s.callId!==n){const r=this.getEnvironmentNode(e),a=this.getFogNode(e),l=[];t&&l.push(t.getCacheKey(!0)),r&&l.push(r.getCacheKey()),a&&l.push(a.getCacheKey()),l.push(this.renderer.shadowMap.enabled?1:0),s={callId:n,cacheKey:iw(l)},this.callHashCache.set(i,s)}return s.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),i=e.background;if(i){const n=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==i||n){let s=null;if(i.isCubeTexture===!0||i.mapping===eh||i.mapping===th||i.mapping===Ug)if(e.backgroundBlurriness>0||i.mapping===Ug)s=cA(i,rp);else{let r;i.isCubeTexture===!0?r=Fc(i):r=Yt(i),s=eA(r)}else i.isTexture===!0?s=Yt(i,Oc.flipY()).setUpdateMatrix(!0):i.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",i);t.backgroundNode=s,t.background=i,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),i=e.fog;if(i){if(t.fog!==i){let n=null;if(i.isFogExp2){const s=kt("color","color",i).setGroup(ut),r=kt("density","float",i).setGroup(ut);n=hk(s,r)}else if(i.isFog){const s=kt("color","color",i).setGroup(ut),r=kt("near","float",i).setGroup(ut),a=kt("far","float",i).setGroup(ut);n=lk(s,r,a)}else console.error("WebGPUNodes: Unsupported fog configuration.",i);t.fogNode=n,t.fog=i}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),i=e.environment;if(i){if(t.environment!==i){let n=null;i.isCubeTexture===!0?n=Fc(i):i.isTexture===!0?n=Yt(i):console.error("Nodes: Unsupported environment configuration.",i),t.environmentNode=n,t.environment=i}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,i=null,n=null,s=null){const r=this.nodeFrame;return r.renderer=e,r.scene=t,r.object=i,r.camera=n,r.material=s,r}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return RS.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,i=this.getOutputCacheKey(),n=Yt(e,Oc).renderOutput(t.toneMapping,t.currentColorSpace);return RS.set(e,i),n}updateBefore(e){const t=e.getNodeBuilderState();for(const i of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(i)}updateAfter(e){const t=e.getNodeBuilderState();for(const i of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(i)}updateForCompute(e){const t=this.getNodeFrame(),i=this.getForCompute(e);for(const n of i.updateNodes)t.updateNode(n)}updateForRender(e){const t=this.getNodeFrameForRender(e),i=e.getNodeBuilderState();for(const n of i.updateNodes)t.updateNode(n)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new SS,this.nodeBuilderCache=new Map}}class nG{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class sG{constructor(){this.lists=new Ks}get(e,t){const i=this.lists,n=[e,t];let s=i.get(n);return s===void 0&&(s=new nG(e,t),i.set(n,s)),s}dispose(){this.lists=new Ks}}class MA{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map,this.colorSpaceNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const i=this.getMaterialNodeClass(e.type);if(i!==null){t=new i;for(const n in e)t[n]=e[n]}return t}addColorSpace(e,t){this.addType(e,t,this.colorSpaceNodes)}getColorSpaceFunction(e){return this.colorSpaceNodes.get(e)||null}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t.name,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,i){if(i.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);i.set(t,e)}addClass(e,t,i){if(i.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);i.set(t,e)}}const CS=new VT,Uu=new mt,rg=new At,og=new $T,Fu=new Vt,Ma=new At;class rG{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:i=!1,alpha:n=!0,depth:s=!0,stencil:r=!1,antialias:a=!1,samples:l=0,getFallback:c=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=l||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=i,this.outputColorSpace=He,this.toneMapping=Va,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=s,this.stencil=r,this.clippingPlanes=[],this.info=new _z,this.nodes={library:new MA,modelViewMatrix:null,modelNormalViewMatrix:null},this._getFallback=c,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new At(0,0,this._width,this._height),this._scissor=new At(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new mA(new si),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=this.alpha===!0?0:1;this._clearColor=new jx(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:aL},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(u,d,f)=>{await this.compileAsync(u,d);const p=this._renderLists.get(u,d),g=this._renderContexts.get(u,d,this._renderTarget),m=u.overrideMaterial||f.material,y=this._objects.get(f,m,u,d,p.lightsNode,g),{fragmentShader:x,vertexShader:_}=y.getNodeBuilderState();return{fragmentShader:x,vertexShader:_}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let i=this.backend;try{await i.init(this)}catch(n){if(this._getFallback!==null)try{this.backend=i=this._getFallback(n),await i.init(this)}catch(s){t(s);return}else{t(n);return}}this._nodes=new iG(this,i),this._animation=new cz(this._nodes,this.info),this._attributes=new gz(i),this._background=new eG(this,this._nodes),this._geometries=new xz(this._attributes,this.info),this._textures=new Qk(this,i,this.info),this._pipelines=new Mz(i,this._nodes),this._bindings=new Tz(i,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new fz(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new Yk,this._bundles=new sG,this._renderContexts=new jk,this._initialized=!0,e()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,i=null){this._initialized===!1&&await this.init();const n=this._nodes.nodeFrame,s=n.renderId,r=this._currentRenderContext,a=this._currentRenderObjectFunction,l=this._compilationPromises,c=e.isScene===!0?e:CS;i===null&&(i=e);const h=this._renderTarget,u=this._renderContexts.get(i,t,h),d=this._activeMipmapLevel,f=[];this._currentRenderContext=u,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,n.renderId++,n.update(),u.depth=this.depth,u.stencil=this.stencil,u.clippingContext||(u.clippingContext=new yy),u.clippingContext.updateGlobal(this,t),c.onBeforeRender(this,e,t,h);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p),i!==e&&i.traverseVisible(function(x){x.isLight&&x.layers.test(t.layers)&&p.pushLight(x)}),p.finish(),h!==null){this._textures.updateRenderTarget(h,d);const x=this._textures.get(h);u.textures=x.textures,u.depthTexture=x.depthTexture}else u.textures=null,u.depthTexture=null;this._nodes.updateScene(c),this._background.update(c,p,u);const g=p.opaque,m=p.transparent,y=p.lightsNode;this.opaque===!0&&g.length>0&&this._renderObjects(g,t,c,y),this.transparent===!0&&m.length>0&&this._renderObjects(m,t,c,y),n.renderId=s,this._currentRenderContext=r,this._currentRenderObjectFunction=a,this._compilationPromises=l,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init();const i=this._renderScene(e,t);await this.backend.resolveTimestampAsync(i,"render")}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_renderBundle(e,t,i){const{bundleGroup:n,camera:s,renderList:r}=e,a=this._currentRenderContext,l=this._bundles.get(n,s),c=this.backend.get(l);c.renderContexts===void 0&&(c.renderContexts=new Set);const h=n.version!==c.version,u=c.renderContexts.has(a)===!1||h;if(c.renderContexts.add(a),u){this.backend.beginBundle(a),(c.renderObjects===void 0||h)&&(c.renderObjects=[]),this._currentRenderBundle=l;const d=r.opaque;d.length>0&&this._renderObjects(d,s,t,i),this._currentRenderBundle=null,this.backend.finishBundle(a,l),c.version=n.version}else{const{renderObjects:d}=c;for(let f=0,p=d.length;f<p;f++){const g=d[f];this._nodes.needsRefresh(g)&&(this._nodes.updateBefore(g),this._nodes.updateForRender(g),this._bindings.updateForRender(g),this._nodes.updateAfter(g))}}this.backend.addBundle(a,l)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(e!==Va===!1&&t!==Pn===!1)return null;const{width:s,height:r}=this.getDrawingBufferSize(Uu),{depth:a,stencil:l}=this;let c=this._frameBufferTarget;return c===null&&(c=new hl(s,r,{depthBuffer:a,stencilBuffer:l,type:Vs,format:ll,colorSpace:Pn,generateMipmaps:!1,minFilter:rn,magFilter:rn,samples:this.samples}),c.isPostProcessingRenderTarget=!0,this._frameBufferTarget=c),c.depthBuffer=a,c.stencilBuffer=l,c.setSize(s,r),c.viewport.copy(this._viewport),c.scissor.copy(this._scissor),c.viewport.multiplyScalar(this._pixelRatio),c.scissor.multiplyScalar(this._pixelRatio),c.scissorTest=this._scissorTest,c}_renderScene(e,t,i=!0){const n=i?this._getFrameBufferTarget():null,s=this._nodes.nodeFrame,r=s.renderId,a=this._currentRenderContext,l=this._currentRenderObjectFunction,c=e.isScene===!0?e:CS,h=this._renderTarget,u=this._activeCubeFace,d=this._activeMipmapLevel;let f;n!==null?(f=n,this.setRenderTarget(f)):f=h;const p=this._renderContexts.get(e,t,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,s.renderId=this.info.calls;const g=this.coordinateSystem;t.coordinateSystem!==g&&(t.coordinateSystem=g,t.updateProjectionMatrix()),e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld();let m=this._viewport,y=this._scissor,x=this._pixelRatio;f!==null&&(m=f.viewport,y=f.scissor,x=1),this.getDrawingBufferSize(Uu),rg.set(0,0,Uu.width,Uu.height);const _=m.minDepth===void 0?0:m.minDepth,v=m.maxDepth===void 0?1:m.maxDepth;p.viewportValue.copy(m).multiplyScalar(x).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=_,p.viewportValue.maxDepth=v,p.viewport=p.viewportValue.equals(rg)===!1,p.scissorValue.copy(y).multiplyScalar(x).floor(),p.scissor=this._scissorTest&&p.scissorValue.equals(rg)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new yy),p.clippingContext.updateGlobal(this,t),c.onBeforeRender(this,e,t,f),Fu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),og.setFromProjectionMatrix(Fu,g);const E=this._renderLists.get(e,t);if(E.begin(),this._projectObject(e,t,0,E),E.finish(),this.sortObjects===!0&&E.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const S=this._textures.get(f);p.textures=S.textures,p.depthTexture=S.depthTexture,p.width=S.width,p.height=S.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=u,p.activeMipmapLevel=d,p.occlusionQueryCount=E.occlusionQueryCount,this._nodes.updateScene(c),this._background.update(c,E,p),this.backend.beginRender(p);const{bundles:M,lightsNode:b,transparent:A,opaque:L}=E;if(M.length>0&&this._renderBundles(M,c,b),this.opaque===!0&&L.length>0&&this._renderObjects(L,t,c,b),this.transparent===!0&&A.length>0&&this._renderObjects(A,t,c,b),this.backend.finishRender(p),s.renderId=r,this._currentRenderContext=a,this._currentRenderObjectFunction=l,n!==null){this.setRenderTarget(h,u,d);const S=this._quad;this._nodes.hasOutputChange(f.texture)&&(S.material.fragmentNode=this._nodes.getOutputNode(f.texture),S.material.needsUpdate=!0),this._renderScene(S,S.camera,!1)}return c.onAfterRender(this,e,t,f),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio=e,this.setSize(this._width,this._height,!1)}setDrawingBufferSize(e,t,i){this._width=e,this._height=t,this._pixelRatio=i,this.domElement.width=Math.floor(e*i),this.domElement.height=Math.floor(t*i),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,i=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),i===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,i,n){const s=this._scissor;e.isVector4?s.copy(e):s.set(e,t,i,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,i,n,s=0,r=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,i,n),a.minDepth=s,a.maxDepth=r}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,i=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,i);const n=this._renderTarget||this._getFrameBufferTarget();let s=null;if(n!==null&&(this._textures.updateRenderTarget(n),s=this._textures.get(n)),this.backend.clear(e,t,i,s),n!==null&&this._renderTarget===null){const r=this._quad;this._nodes.hasOutputChange(n.texture)&&(r.material.fragmentNode=this._nodes.getOutputNode(n.texture),r.material.needsUpdate=!0),this._renderScene(r,r.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,i=!0){this._initialized===!1&&await this.init(),this.clear(e,t,i)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?Va:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?Pn:this.outputColorSpace}dispose(){this.info.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,i=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=i}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}async computeAsync(e){this._initialized===!1&&await this.init();const t=this._nodes.nodeFrame,i=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const n=this.backend,s=this._pipelines,r=this._bindings,a=this._nodes,l=Array.isArray(e)?e:[e];if(l[0]===void 0||l[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");n.beginCompute(e);for(const c of l){if(s.has(c)===!1){const d=()=>{c.removeEventListener("dispose",d),s.delete(c),r.delete(c),a.delete(c)};c.addEventListener("dispose",d),c.onInit({renderer:this})}a.updateForCompute(c),r.updateForCompute(c);const h=r.getForCompute(c),u=s.getForCompute(c,h);n.compute(e,c,h,u)}n.finishCompute(e),await this.backend.resolveTimestampAsync(e,"compute"),t.renderId=i}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}copyFramebufferToTexture(e,t=null){const i=this._currentRenderContext;this._textures.updateTexture(e),t=t===null?Ma.set(0,0,e.image.width,e.image.height):t,this.backend.copyFramebufferToTexture(e,i,t)}copyTextureToTexture(e,t,i=null,n=null,s=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,i,n,s)}readRenderTargetPixelsAsync(e,t,i,n,s,r=0,a=0){return this.backend.copyTextureToBuffer(e.textures[r],t,i,n,s,a)}_projectObject(e,t,i,n){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)i=e.renderOrder;else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||og.intersectsSprite(e)){this.sortObjects===!0&&Ma.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Fu);const{geometry:a,material:l}=e;l.visible&&n.push(e,a,l,i,Ma.z,null)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||og.intersectsObject(e))){const{geometry:a,material:l}=e;if(this.sortObjects===!0&&(a.boundingSphere===null&&a.computeBoundingSphere(),Ma.copy(a.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Fu)),Array.isArray(l)){const c=a.groups;for(let h=0,u=c.length;h<u;h++){const d=c[h],f=l[d.materialIndex];f&&f.visible&&n.push(e,a,f,i,Ma.z,d)}}else l.visible&&n.push(e,a,l,i,Ma.z,null)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const a=n;n=this._renderLists.get(e,t),n.begin(),a.pushBundle({bundleGroup:e,camera:t,renderList:n}),n.finish()}const r=e.children;for(let a=0,l=r.length;a<l;a++)this._projectObject(r[a],t,i,n)}_renderBundles(e,t,i){for(const n of e)this._renderBundle(n,t,i)}_renderObjects(e,t,i,n){for(let s=0,r=e.length;s<r;s++){const a=e[s],{object:l,geometry:c,material:h,group:u}=a;if(t.isArrayCamera){const d=t.cameras;for(let f=0,p=d.length;f<p;f++){const g=d[f];if(l.layers.test(g.layers)){const m=g.viewport,y=m.minDepth===void 0?0:m.minDepth,x=m.maxDepth===void 0?1:m.maxDepth,_=this._currentRenderContext.viewportValue;_.copy(m).multiplyScalar(this._pixelRatio).floor(),_.minDepth=y,_.maxDepth=x,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(l,i,g,c,h,u,n)}}}else this._currentRenderObjectFunction(l,i,t,c,h,u,n)}}renderObject(e,t,i,n,s,r,a){let l,c,h;if(e.onBeforeRender(this,t,i,n,s,r),t.overrideMaterial!==null){const u=t.overrideMaterial;s.positionNode&&s.positionNode.isNode&&(l=u.positionNode,u.positionNode=s.positionNode),u.isShadowNodeMaterial&&(u.side=s.shadowSide===null?s.side:s.shadowSide,s.depthNode&&s.depthNode.isNode&&(h=u.depthNode,u.depthNode=s.depthNode),s.shadowNode&&s.shadowNode.isNode&&(c=u.fragmentNode,u.fragmentNode=s.shadowNode),this.localClippingEnabled&&(s.clipShadows?(u.clippingPlanes!==s.clippingPlanes&&(u.clippingPlanes=s.clippingPlanes,u.needsUpdate=!0),u.clipIntersection!==s.clipIntersection&&(u.clipIntersection=s.clipIntersection)):Array.isArray(u.clippingPlanes)&&(u.clippingPlanes=null,u.needsUpdate=!0))),s=u}s.transparent===!0&&s.side===$d&&s.forceSinglePass===!1?(s.side=Js,this._handleObjectFunction(e,s,t,i,a,r,"backSide"),s.side=Nc,this._handleObjectFunction(e,s,t,i,a,r),s.side=$d):this._handleObjectFunction(e,s,t,i,a,r),l!==void 0&&(t.overrideMaterial.positionNode=l),h!==void 0&&(t.overrideMaterial.depthNode=h),c!==void 0&&(t.overrideMaterial.fragmentNode=c),e.onAfterRender(this,t,i,n,s,r)}_renderObjectDirect(e,t,i,n,s,r,a){const l=this._objects.get(e,t,i,n,s,this._currentRenderContext,a);l.drawRange=e.geometry.drawRange,l.group=r;const c=this._nodes.needsRefresh(l);c&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.scene),this.backend.draw(l,this.info),c&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,i,n,s,r){const a=this._objects.get(e,t,i,n,s,this._currentRenderContext,r);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compute(){return this.computeAsync}get compile(){return this.compileAsync}}class Jx{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function oG(o){return o+(wr-o%wr)%wr}class TA extends Jx{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return oG(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class wA extends TA{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let aG=0;class AA extends wA{constructor(e,t){super("UniformBuffer_"+aG++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class lG extends wA{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,i=this.uniforms.length;t<i;t++){const n=this.uniforms[t],{boundary:s,itemSize:r}=n,a=e%wr,l=wr-a;a!==0&&l-s<0?e+=wr-a:a%s!==0&&(e+=a%s),n.offset=e/this.bytesPerElement,e+=r*this.bytesPerElement}return Math.ceil(e/wr)*wr}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s]!==n){const r=this.buffer;r[s]=i[s]=n,t=!0}return t}updateVector2(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.x||i[s+1]!==n.y){const r=this.buffer;r[s+0]=i[s+0]=n.x,r[s+1]=i[s+1]=n.y,t=!0}return t}updateVector3(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.x||i[s+1]!==n.y||i[s+2]!==n.z){const r=this.buffer;r[s+0]=i[s+0]=n.x,r[s+1]=i[s+1]=n.y,r[s+2]=i[s+2]=n.z,t=!0}return t}updateVector4(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.x||i[s+1]!==n.y||i[s+2]!==n.z||i[s+4]!==n.w){const r=this.buffer;r[s+0]=i[s+0]=n.x,r[s+1]=i[s+1]=n.y,r[s+2]=i[s+2]=n.z,r[s+3]=i[s+3]=n.w,t=!0}return t}updateColor(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.r||i[s+1]!==n.g||i[s+2]!==n.b){const r=this.buffer;r[s+0]=i[s+0]=n.r,r[s+1]=i[s+1]=n.g,r[s+2]=i[s+2]=n.b,t=!0}return t}updateMatrix3(e){let t=!1;const i=this.values,n=e.getValue().elements,s=e.offset;if(i[s+0]!==n[0]||i[s+1]!==n[1]||i[s+2]!==n[2]||i[s+4]!==n[3]||i[s+5]!==n[4]||i[s+6]!==n[5]||i[s+8]!==n[6]||i[s+9]!==n[7]||i[s+10]!==n[8]){const r=this.buffer;r[s+0]=i[s+0]=n[0],r[s+1]=i[s+1]=n[1],r[s+2]=i[s+2]=n[2],r[s+4]=i[s+4]=n[3],r[s+5]=i[s+5]=n[4],r[s+6]=i[s+6]=n[5],r[s+8]=i[s+8]=n[6],r[s+9]=i[s+9]=n[7],r[s+10]=i[s+10]=n[8],t=!0}return t}updateMatrix4(e){let t=!1;const i=this.values,n=e.getValue().elements,s=e.offset;return hG(i,n,s)===!1&&(this.buffer.set(n,s),cG(i,n,s),t=!0),t}}function cG(o,e,t){for(let i=0,n=e.length;i<n;i++)o[t+i]=e[i]}function hG(o,e,t){for(let i=0,n=e.length;i<n;i++)if(o[t+i]!==e[i])return!1;return!0}let uG=0;class EA extends lG{constructor(e,t){super(e),this.id=uG++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const i=t.nodeUniform.node;if(!i)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(i)}return e}}let dG=0;class fG extends Jx{constructor(e,t){super(e),this.id=dG++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}class hp extends fG{constructor(e,t,i,n=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i,this.access=n}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class RA extends hp{constructor(e,t,i,n){super(e,t,i,n),this.isSampledCubeTexture=!0}}class CA extends hp{constructor(e,t,i,n){super(e,t,i,n),this.isSampledTexture3D=!0}}const pG={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},mG={low:"lowp",medium:"mediump",high:"highp"},NS={swizzleAssign:!0,storageBuffer:!1},PS=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class gG extends pA{constructor(e,t){super(e,t,new Wk),this.uniformGroups={},this.transforms=[],this.extensions={},this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(e){return e.isVideoTexture===!0&&e.colorSpace!==Co}getMethod(e){return pG[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const r of t.inputs)n.push(this.getType(r.type)+" "+r.name);return`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {

	${i.vars}

${i.code}
	return ${i.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const i=t.array,n=t.count*t.itemSize,{itemSize:s}=t,r=t.array.constructor.name.toLowerCase().includes("int");let a=r?px:fx;s===2?a=r?mx:Pc:s===3?a=r?ML:dx:s===4&&(a=r?gx:ll);const l={Float32Array:_n,Uint8Array:Os,Uint16Array:Ua,Uint32Array:wi,Int8Array:nc,Int16Array:sc,Int32Array:Hi,Uint8ClampedArray:Os},c=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(n/s))));let h=Math.ceil(n/s/c);c*h*s<n&&h++;const u=c*h*s,d=new i.constructor(u);d.set(i,0),t.array=d;const f=new PD(t.array,c,h,a,l[t.array.constructor.name]||_n);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new ch(f,null,null);p.setPrecision("high"),t.pboNode=p,t.pbo=p.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:i}=e,n=t.value;if(this.renderer.backend.has(n)){const h=this.renderer.backend.get(n);h.pbo=n.pbo}const s=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.label),r=this.getPropertyName(s);this.increaseUsage(i);const a=i.build(this,"uint"),l=this.getDataFromNode(e);let c=l.propertyName;if(c===void 0){const h=this.getVarFromNode(e);c=this.getPropertyName(h);const u=this.getDataFromNode(t);let d=u.propertySizeName;d===void 0&&(d=c+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${r}, 0 ).x )`,e),u.propertySizeName=d);const{itemSize:f}=n,p="."+ul.join("").slice(0,f),g=`ivec2(${a} % ${d}, ${a} / ${d})`,m=this.generateTextureLoad(null,r,g,null,"0");let y="vec4";n.pbo.type===wi?y="uvec4":n.pbo.type===Hi&&(y="ivec4"),this.addLineFlowCode(`${c} = ${y}(${m})${p}`,e),l.propertyName=c}return c}generateTextureLoad(e,t,i,n,s="0"){return n?`texelFetch( ${t}, ivec3( ${i}, ${n} ), ${s} )`:`texelFetch( ${t}, ${i}, ${s} )`}generateTexture(e,t,i,n){return e.isDepthTexture?`texture( ${t}, ${i} ).x`:(n&&(i=`vec3( ${i}, ${n} )`),`texture( ${t}, ${i} )`)}generateTextureLevel(e,t,i,n){return`textureLod( ${t}, ${i}, ${n} )`}generateTextureBias(e,t,i,n){return`texture( ${t}, ${i}, ${n} )`}generateTextureGrad(e,t,i,n){return`textureGrad( ${t}, ${i}, ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`texture( ${t}, vec3( ${i}, ${n} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}getVars(e){const t=[],i=this.vars[e];if(i!==void 0)for(const n of i)t.push(`${this.getVar(n.type,n.name)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],i=[],n={};for(const r of t){let a=null,l=!1;if(r.type==="texture"){const h=r.node.value;let u="";h.isDataTexture===!0&&(h.type===wi?u="u":h.type===Hi&&(u="i")),h.compareFunction?a=`sampler2DShadow ${r.name};`:h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0?a=`${u}sampler2DArray ${r.name};`:a=`${u}sampler2D ${r.name};`}else if(r.type==="cubeTexture")a=`samplerCube ${r.name};`;else if(r.type==="texture3D")a=`sampler3D ${r.name};`;else if(r.type==="buffer"){const h=r.node,u=this.getType(h.bufferType),d=h.bufferCount,f=d>0?d:"";a=`${h.name} {
	${u} ${r.name}[${f}];
};
`}else a=`${this.getVectorType(r.type)} ${this.getPropertyName(r,e)};`,l=!0;const c=r.node.precision;if(c!==null&&(a=mG[c]+" "+a),l){a="	"+a;const h=r.groupNode.name;(n[h]||(n[h]=[])).push(a)}else a="uniform "+a,i.push(a)}let s="";for(const r in n){const a=n[r];s+=this._getGLSLUniformStruct(e+"_"+r,a.join(`
`))+`
`}return s+=i.join(`
`),s}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==Hi){let i=e;e.isInterleavedBufferAttribute&&(i=e.data);const n=i.array;n instanceof Uint32Array||n instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const i=this.getAttributesArray();let n=0;for(const s of i)t+=`layout( location = ${n++} ) in ${s.type} ${s.name};
`}return t}getStructMembers(e){const t=[],i=e.getMemberTypes();for(let n=0;n<i.length;n++){const s=i[n];t.push(`layout( location = ${n} ) out ${s} m${n};`)}return t.join(`
`)}getStructs(e){const t=[],i=this.structs[e];if(i.length===0)return`layout( location = 0 ) out vec4 fragColor;
`;for(let n=0,s=i.length;n<s;n++){const r=i[n];let a=`
`;a+=this.getStructMembers(r),a+=`
`,t.push(a)}return t.join(`

`)}getVaryings(e){let t="";const i=this.varyings;if(e==="vertex"||e==="compute")for(const n of i){e==="compute"&&(n.needsInterpolation=!0);const s=n.type,r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}${n.needsInterpolation?"out":"/*out*/"} ${s} ${n.name};
`}else if(e==="fragment"){for(const n of i)if(n.needsInterpolation){const s=n.type,r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}in ${s} ${n.name};
`}}return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((i,n)=>i*n,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,i=this.shaderStage){const n=this.extensions[i]||(this.extensions[i]=new Map);n.has(e)===!1&&n.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const n=this.renderer.backend.extensions;this.object.isBatchedMesh&&n.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const i=this.extensions[e];if(i!==void 0)for(const{name:n,behavior:s}of i.values())t.push(`#extension ${n} : ${s}`);return t.join(`
`)}isAvailable(e){let t=NS[e];if(t===void 0){if(e==="float32Filterable"){const i=this.renderer.backend.extensions;i.has("OES_texture_float_linear")?(i.get("OES_texture_float_linear"),t=!0):t=!1}NS[e]=t}return t}isFlipY(){return!0}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let i=0;i<e.length;i++){const n=e[i],s=this.getPropertyName(n.attributeNode);t+=`${n.varyingName} = ${s};
	`}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions 
${e.extensions}

// precision
${PS}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${PS}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let i=`// code

`;i+=this.flowCode[t];const n=this.flowNodes[t],s=n[n.length-1];for(const a of n){const l=this.getFlowData(a),c=a.name;c&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${c}
	`),i+=`${l.code}
	`,a===s&&t!=="compute"&&(i+=`// result
	`,t==="vertex"?(i+="gl_Position = ",i+=`${l.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(i+="fragColor = ",i+=`${l.result};`)))}const r=e[t];r.extensions=this.getExtensions(t),r.uniforms=this.getUniforms(t),r.attributes=this.getAttributes(t),r.varyings=this.getVaryings(t),r.vars=this.getVars(t),r.structs=this.getStructs(t),r.codes=this.getCodes(t),r.transforms=this.getTransforms(t),r.flow=i}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,i,n=null){const s=super.getUniformFromNode(e,t,i,n),r=this.getDataFromNode(e,i,this.globalCache);let a=r.uniformGPU;if(a===void 0){const l=e.groupNode,c=l.name,h=this.getBindGroupArray(c,i);if(t==="texture")a=new hp(s.name,s.node,l),h.push(a);else if(t==="cubeTexture")a=new RA(s.name,s.node,l),h.push(a);else if(t==="texture3D")a=new CA(s.name,s.node,l),h.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,s.name=`buffer${e.id}`;const u=new AA(e,l);u.name=e.name,h.push(u),a=u}else{const u=this.uniformGroups[i]||(this.uniformGroups[i]={});let d=u[c];d===void 0&&(d=new EA(i+"_"+c,l),u[c]=d,h.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}r.uniformGPU=a}return s}}let ag=null,lg=null,Ta=null;class NA{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:i}=e;return i.isInstancedBufferGeometry?i.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return ag=ag||new mt,this.renderer.getDrawingBufferSize(ag)}getScissor(){return lg=lg||new At,this.renderer.getScissor(lg)}setScissorTest(){}getClearColor(){const e=this.renderer;return Ta=Ta||new jx,e.getClearColor(Ta),Ta.getRGB(Ta,this.renderer.currentColorSpace),Ta}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:rD(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Xf} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}}let yG=0;class xG{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class _G{constructor(e){this.backend=e}createAttribute(e,t){const i=this.backend,{gl:n}=i,s=e.array,r=e.usage||n.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,l=i.get(a);let c=l.bufferGPU;c===void 0&&(c=this._createBuffer(n,t,s,r),l.bufferGPU=c,l.bufferType=t,l.version=a.version);let h;if(s instanceof Float32Array)h=n.FLOAT;else if(s instanceof Uint16Array)e.isFloat16BufferAttribute?h=n.HALF_FLOAT:h=n.UNSIGNED_SHORT;else if(s instanceof Int16Array)h=n.SHORT;else if(s instanceof Uint32Array)h=n.UNSIGNED_INT;else if(s instanceof Int32Array)h=n.INT;else if(s instanceof Int8Array)h=n.BYTE;else if(s instanceof Uint8Array)h=n.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)h=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+s);let u={bufferGPU:c,bufferType:t,type:h,byteLength:s.byteLength,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:h===n.INT||h===n.UNSIGNED_INT||e.gpuType===Hi,id:yG++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(n,t,s,r);u=new xG(u,d)}i.set(e,u)}updateAttribute(e){const t=this.backend,{gl:i}=t,n=e.array,s=e.isInterleavedBufferAttribute?e.data:e,r=t.get(s),a=r.bufferType,l=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(i.bindBuffer(a,r.bufferGPU),l.length===0)i.bufferSubData(a,0,n);else{for(let c=0,h=l.length;c<h;c++){const u=l[c];i.bufferSubData(a,u.start*n.BYTES_PER_ELEMENT,n,u.start,u.count)}s.clearUpdateRanges()}i.bindBuffer(a,null),r.version=s.version}destroyAttribute(e){const t=this.backend,{gl:i}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const n=t.get(e);i.deleteBuffer(n.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:i}=t,n=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:s}=t.get(n),r=e.array,a=r.byteLength;i.bindBuffer(i.COPY_READ_BUFFER,s);const l=i.createBuffer();i.bindBuffer(i.COPY_WRITE_BUFFER,l),i.bufferData(i.COPY_WRITE_BUFFER,a,i.STREAM_READ),i.copyBufferSubData(i.COPY_READ_BUFFER,i.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const c=new e.array.constructor(r.length);return i.bindBuffer(i.COPY_WRITE_BUFFER,l),i.getBufferSubData(i.COPY_WRITE_BUFFER,0,c),i.deleteBuffer(l),i.bindBuffer(i.COPY_READ_BUFFER,null),i.bindBuffer(i.COPY_WRITE_BUFFER,null),c.buffer}_createBuffer(e,t,i,n){const s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,i,n),e.bindBuffer(t,null),s}}let IS=!1,cg,Vl;class vG{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},IS===!1&&(this._init(this.gl),IS=!0)}_init(e){cg={[Mr]:e.FUNC_ADD,[oT]:e.FUNC_SUBTRACT,[aT]:e.FUNC_REVERSE_SUBTRACT},Vl={[lT]:e.ZERO,[cT]:e.ONE,[hT]:e.SRC_COLOR,[Zd]:e.SRC_ALPHA,[gT]:e.SRC_ALPHA_SATURATE,[pT]:e.DST_COLOR,[dT]:e.DST_ALPHA,[uT]:e.ONE_MINUS_SRC_COLOR,[Kd]:e.ONE_MINUS_SRC_ALPHA,[mT]:e.ONE_MINUS_DST_COLOR,[fT]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==sL?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===rL?t.cullFace(t.BACK):e===oL?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:i}=this;e!==t&&(i.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,i,n,s,r,a,l){const{gl:c}=this;if(e===Ja){this.currentBlendingEnabled===!0&&(this.disable(c.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(c.BLEND),this.currentBlendingEnabled=!0),e!==rT){if(e!==this.currentBlending||l!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Mr||this.currentBlendEquationAlpha!==Mr)&&(c.blendEquation(c.FUNC_ADD),this.currentBlendEquation=Mr,this.currentBlendEquationAlpha=Mr),l)switch(e){case Ar:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Xd:c.blendFunc(c.ONE,c.ONE);break;case qd:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case Yd:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Ar:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Xd:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case qd:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case Yd:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=l}return}s=s||t,r=r||i,a=a||n,(t!==this.currentBlendEquation||s!==this.currentBlendEquationAlpha)&&(c.blendEquationSeparate(cg[t],cg[s]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=s),(i!==this.currentBlendSrc||n!==this.currentBlendDst||r!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(c.blendFuncSeparate(Vl[i],Vl[n],Vl[r],Vl[a]),this.currentBlendSrc=i,this.currentBlendDst=n,this.currentBlendSrcAlpha=r,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case yT:t.depthFunc(t.NEVER);break;case xT:t.depthFunc(t.ALWAYS);break;case _T:t.depthFunc(t.LESS);break;case jd:t.depthFunc(t.LEQUAL);break;case vT:t.depthFunc(t.EQUAL);break;case ST:t.depthFunc(t.GEQUAL);break;case bT:t.depthFunc(t.GREATER);break;case MT:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,i){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==i)&&(this.gl.stencilFunc(e,t,i),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=i)}setStencilOp(e,t,i){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==i)&&(this.gl.stencilOp(e,t,i),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=i)}setMaterial(e,t){const{gl:i}=this;e.side===$d?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let n=e.side===Js;t&&(n=!n),this.setFlipSided(n),e.blending===Ar&&e.transparent===!1?this.setBlending(Ja):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const s=e.stencilWrite;this.setStencilTest(s),s&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,i){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==i)&&(n.polygonOffset(t,i),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=i)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}bindFramebuffer(e,t){const{gl:i,currentBoundFramebuffers:n}=this;return n[e]!==t?(i.bindFramebuffer(e,t),n[e]=t,e===i.DRAW_FRAMEBUFFER&&(n[i.FRAMEBUFFER]=t),e===i.FRAMEBUFFER&&(n[i.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:i}=this;let n=[],s=!1;if(e.textures!==null){n=this.currentDrawbuffers.get(t),n===void 0&&(n=[],this.currentDrawbuffers.set(t,n));const r=e.textures;if(n.length!==r.length||n[0]!==i.COLOR_ATTACHMENT0){for(let a=0,l=r.length;a<l;a++)n[a]=i.COLOR_ATTACHMENT0+a;n.length=r.length,s=!0}}else n[0]!==i.BACK&&(n[0]=i.BACK,s=!0);s&&i.drawBuffers(n)}activeTexture(e){const{gl:t,currentTextureSlot:i,maxTextures:n}=this;e===void 0&&(e=t.TEXTURE0+n-1),i!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,i){const{gl:n,currentTextureSlot:s,currentBoundTextures:r,maxTextures:a}=this;i===void 0&&(s===null?i=n.TEXTURE0+a-1:i=s);let l=r[i];l===void 0&&(l={type:void 0,texture:void 0},r[i]=l),(l.type!==e||l.texture!==t)&&(s!==i&&(n.activeTexture(i),this.currentTextureSlot=i),n.bindTexture(e,t),l.type=e,l.texture=t)}bindBufferBase(e,t,i){const{gl:n}=this,s=`${e}-${t}`;return this.currentBoundBufferBases[s]!==i?(n.bindBufferBase(e,t,i),this.currentBoundBufferBases[s]=i,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:i}=this,n=i[t];n!==void 0&&n.type!==void 0&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class SG{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=Co){const{gl:i,extensions:n}=this;let s;if(e===Os)return i.UNSIGNED_BYTE;if(e===xL)return i.UNSIGNED_SHORT_4_4_4_4;if(e===_L)return i.UNSIGNED_SHORT_5_5_5_1;if(e===wT)return i.UNSIGNED_INT_5_9_9_9_REV;if(e===nc)return i.BYTE;if(e===sc)return i.SHORT;if(e===Ua)return i.UNSIGNED_SHORT;if(e===Hi)return i.INT;if(e===wi)return i.UNSIGNED_INT;if(e===_n)return i.FLOAT;if(e===Vs)return i.HALF_FLOAT;if(e===vL)return i.ALPHA;if(e===dx)return i.RGB;if(e===ll)return i.RGBA;if(e===SL)return i.LUMINANCE;if(e===bL)return i.LUMINANCE_ALPHA;if(e===So)return i.DEPTH_COMPONENT;if(e===el)return i.DEPTH_STENCIL;if(e===fx)return i.RED;if(e===px)return i.RED_INTEGER;if(e===Pc)return i.RG;if(e===mx)return i.RG_INTEGER;if(e===gx)return i.RGBA_INTEGER;if(e===lm||e===Zu||e===Ku||e===ju)if(t===He)if(s=n.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(e===lm)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Zu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Ku)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===ju)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=n.get("WEBGL_compressed_texture_s3tc"),s!==null){if(e===lm)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Zu)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ku)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===ju)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===K_||e===j_||e===J_||e===Q_)if(s=n.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(e===K_)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===j_)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===J_)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Q_)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===ev||e===Og||e===zg)if(s=n.get("WEBGL_compressed_texture_etc"),s!==null){if(e===ev||e===Og)return t===He?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(e===zg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===kg||e===Gg||e===Vg||e===Hg||e===Wg||e===$g||e===Xg||e===qg||e===Yg||e===Zg||e===Kg||e===jg||e===Jg||e===Qg)if(s=n.get("WEBGL_compressed_texture_astc"),s!==null){if(e===kg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Gg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Vg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Hg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Wg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===$g)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Xg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===qg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Yg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Zg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Kg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===jg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Jg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Qg)return t===He?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===cm)if(s=n.get("EXT_texture_compression_bptc"),s!==null){if(e===cm)return t===He?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===TL||e===tv||e===iv||e===nv)if(s=n.get("EXT_texture_compression_rgtc"),s!==null){if(e===cm)return s.COMPRESSED_RED_RGTC1_EXT;if(e===tv)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===iv)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===nv)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===ih?i.UNSIGNED_INT_24_8:i[e]!==void 0?i[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((i,n)=>{function s(){const r=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(r===e.WAIT_FAILED){e.deleteSync(t),n();return}if(r===e.TIMEOUT_EXPIRED){requestAnimationFrame(s);return}e.deleteSync(t),i()}s()})}}let LS=!1,Bu,hg,DS;class bG{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},LS===!1&&(this._init(this.gl),LS=!0)}_init(e){Bu={[Jd]:e.REPEAT,[Da]:e.CLAMP_TO_EDGE,[Qd]:e.MIRRORED_REPEAT},hg={[Ri]:e.NEAREST,[Fg]:e.NEAREST_MIPMAP_NEAREST,[Ha]:e.NEAREST_MIPMAP_LINEAR,[rn]:e.LINEAR,[Bg]:e.LINEAR_MIPMAP_NEAREST,[Gs]:e.LINEAR_MIPMAP_LINEAR},DS={[ET]:e.NEVER,[LT]:e.ALWAYS,[yx]:e.LESS,[CT]:e.LEQUAL,[RT]:e.EQUAL,[IT]:e.GEQUAL,[NT]:e.GREATER,[PT]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===Ri||e===Fg||e===Ha?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let i;return e.isCubeTexture===!0?i=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?i=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?i=t.TEXTURE_3D:i=t.TEXTURE_2D,i}getInternalFormat(e,t,i,n,s=!1){const{gl:r,extensions:a}=this;if(e!==null){if(r[e]!==void 0)return r[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let l=t;return t===r.RED&&(i===r.FLOAT&&(l=r.R32F),i===r.HALF_FLOAT&&(l=r.R16F),i===r.UNSIGNED_BYTE&&(l=r.R8),i===r.UNSIGNED_SHORT&&(l=r.R16),i===r.UNSIGNED_INT&&(l=r.R32UI),i===r.BYTE&&(l=r.R8I),i===r.SHORT&&(l=r.R16I),i===r.INT&&(l=r.R32I)),t===r.RED_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.R8UI),i===r.UNSIGNED_SHORT&&(l=r.R16UI),i===r.UNSIGNED_INT&&(l=r.R32UI),i===r.BYTE&&(l=r.R8I),i===r.SHORT&&(l=r.R16I),i===r.INT&&(l=r.R32I)),t===r.RG&&(i===r.FLOAT&&(l=r.RG32F),i===r.HALF_FLOAT&&(l=r.RG16F),i===r.UNSIGNED_BYTE&&(l=r.RG8),i===r.UNSIGNED_SHORT&&(l=r.RG16),i===r.UNSIGNED_INT&&(l=r.RG32UI),i===r.BYTE&&(l=r.RG8I),i===r.SHORT&&(l=r.RG16I),i===r.INT&&(l=r.RG32I)),t===r.RG_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.RG8UI),i===r.UNSIGNED_SHORT&&(l=r.RG16UI),i===r.UNSIGNED_INT&&(l=r.RG32UI),i===r.BYTE&&(l=r.RG8I),i===r.SHORT&&(l=r.RG16I),i===r.INT&&(l=r.RG32I)),t===r.RGB&&(i===r.FLOAT&&(l=r.RGB32F),i===r.HALF_FLOAT&&(l=r.RGB16F),i===r.UNSIGNED_BYTE&&(l=r.RGB8),i===r.UNSIGNED_SHORT&&(l=r.RGB16),i===r.UNSIGNED_INT&&(l=r.RGB32UI),i===r.BYTE&&(l=r.RGB8I),i===r.SHORT&&(l=r.RGB16I),i===r.INT&&(l=r.RGB32I),i===r.UNSIGNED_BYTE&&(l=n===He&&s===!1?r.SRGB8:r.RGB8),i===r.UNSIGNED_SHORT_5_6_5&&(l=r.RGB565),i===r.UNSIGNED_SHORT_5_5_5_1&&(l=r.RGB5_A1),i===r.UNSIGNED_SHORT_4_4_4_4&&(l=r.RGB4),i===r.UNSIGNED_INT_5_9_9_9_REV&&(l=r.RGB9_E5)),t===r.RGB_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.RGB8UI),i===r.UNSIGNED_SHORT&&(l=r.RGB16UI),i===r.UNSIGNED_INT&&(l=r.RGB32UI),i===r.BYTE&&(l=r.RGB8I),i===r.SHORT&&(l=r.RGB16I),i===r.INT&&(l=r.RGB32I)),t===r.RGBA&&(i===r.FLOAT&&(l=r.RGBA32F),i===r.HALF_FLOAT&&(l=r.RGBA16F),i===r.UNSIGNED_BYTE&&(l=r.RGBA8),i===r.UNSIGNED_SHORT&&(l=r.RGBA16),i===r.UNSIGNED_INT&&(l=r.RGBA32UI),i===r.BYTE&&(l=r.RGBA8I),i===r.SHORT&&(l=r.RGBA16I),i===r.INT&&(l=r.RGBA32I),i===r.UNSIGNED_BYTE&&(l=n===He&&s===!1?r.SRGB8_ALPHA8:r.RGBA8),i===r.UNSIGNED_SHORT_4_4_4_4&&(l=r.RGBA4),i===r.UNSIGNED_SHORT_5_5_5_1&&(l=r.RGB5_A1)),t===r.RGBA_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.RGBA8UI),i===r.UNSIGNED_SHORT&&(l=r.RGBA16UI),i===r.UNSIGNED_INT&&(l=r.RGBA32UI),i===r.BYTE&&(l=r.RGBA8I),i===r.SHORT&&(l=r.RGBA16I),i===r.INT&&(l=r.RGBA32I)),t===r.DEPTH_COMPONENT&&(i===r.UNSIGNED_INT&&(l=r.DEPTH24_STENCIL8),i===r.FLOAT&&(l=r.DEPTH_COMPONENT32F)),t===r.DEPTH_STENCIL&&i===r.UNSIGNED_INT_24_8&&(l=r.DEPTH24_STENCIL8),(l===r.R16F||l===r.R32F||l===r.RG16F||l===r.RG32F||l===r.RGBA16F||l===r.RGBA32F)&&a.get("EXT_color_buffer_float"),l}setTextureParameters(e,t){const{gl:i,extensions:n,backend:s}=this;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.NONE),i.texParameteri(e,i.TEXTURE_WRAP_S,Bu[t.wrapS]),i.texParameteri(e,i.TEXTURE_WRAP_T,Bu[t.wrapT]),(e===i.TEXTURE_3D||e===i.TEXTURE_2D_ARRAY)&&i.texParameteri(e,i.TEXTURE_WRAP_R,Bu[t.wrapR]),i.texParameteri(e,i.TEXTURE_MAG_FILTER,hg[t.magFilter]);const r=t.mipmaps!==void 0&&t.mipmaps.length>0,a=t.minFilter===rn&&r?Gs:t.minFilter;if(i.texParameteri(e,i.TEXTURE_MIN_FILTER,hg[a]),t.compareFunction&&(i.texParameteri(e,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(e,i.TEXTURE_COMPARE_FUNC,DS[t.compareFunction])),n.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Ri||t.minFilter!==Ha&&t.minFilter!==Gs||t.type===_n&&n.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const l=n.get("EXT_texture_filter_anisotropic");i.texParameterf(e,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:i,defaultTextures:n}=this,s=this.getGLTextureType(e);let r=n[s];r===void 0&&(r=t.createTexture(),i.state.bindTexture(s,r),t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST),n[s]=r),i.set(e,{textureGPU:r,glTextureType:s,isDefault:!0})}createTexture(e,t){const{gl:i,backend:n}=this,{levels:s,width:r,height:a,depth:l}=t,c=n.utils.convert(e.format,e.colorSpace),h=n.utils.convert(e.type),u=this.getInternalFormat(e.internalFormat,c,h,e.colorSpace,e.isVideoTexture),d=i.createTexture(),f=this.getGLTextureType(e);n.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isDataArrayTexture||e.isCompressedArrayTexture?i.texStorage3D(i.TEXTURE_2D_ARRAY,s,u,r,a,l):e.isData3DTexture?i.texStorage3D(i.TEXTURE_3D,s,u,r,a,l):e.isVideoTexture||i.texStorage2D(f,s,u,r,a),n.set(e,{textureGPU:d,glTextureType:f,glFormat:c,glType:h,glInternalFormat:u})}copyBufferToTexture(e,t){const{gl:i,backend:n}=this,{textureGPU:s,glTextureType:r,glFormat:a,glType:l}=n.get(t),{width:c,height:h}=t.source.data;i.bindBuffer(i.PIXEL_UNPACK_BUFFER,e),n.state.bindTexture(r,s),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.texSubImage2D(r,0,0,0,c,h,a,l,0),i.bindBuffer(i.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(e,t){const{gl:i}=this,{width:n,height:s}=t,{textureGPU:r,glTextureType:a,glFormat:l,glType:c,glInternalFormat:h}=this.backend.get(e);if(e.isRenderTargetTexture||r===void 0)return;const u=d=>d.isDataTexture?d.image.data:d instanceof ImageBitmap||d instanceof OffscreenCanvas||d instanceof HTMLImageElement||d instanceof HTMLCanvasElement?d:d.data;if(this.backend.state.bindTexture(a,r),this.setTextureParameters(a,e),e.isCompressedTexture){const d=e.mipmaps,f=t.image;for(let p=0;p<d.length;p++){const g=d[p];e.isCompressedArrayTexture?e.format!==i.RGBA?l!==null?i.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,g.width,g.height,f.depth,l,g.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,g.width,g.height,f.depth,l,c,g.data):l!==null?i.compressedTexSubImage2D(i.TEXTURE_2D,p,0,0,g.width,g.height,l,g.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images;for(let f=0;f<6;f++){const p=u(d[f]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,n,s,l,c,p)}}else if(e.isDataArrayTexture){const d=t.image;i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,l,c,d.data)}else if(e.isData3DTexture){const d=t.image;i.texSubImage3D(i.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,l,c,d.data)}else if(e.isVideoTexture)e.update(),i.texImage2D(a,0,h,l,c,t.image);else{const d=u(t.image);i.texSubImage2D(a,0,0,0,n,s,l,c,d)}}generateMipmaps(e){const{gl:t,backend:i}=this,{textureGPU:n,glTextureType:s}=i.get(e);i.state.bindTexture(s,n),t.generateMipmap(s)}deallocateRenderBuffers(e){const{gl:t,backend:i}=this;if(e){const n=i.get(e);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const s in n.framebuffers)t.deleteFramebuffer(n.framebuffers[s]);delete n.framebuffers}if(n.depthRenderbuffer&&(t.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(t.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(t.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let s=0;s<n.msaaRenderbuffers.length;s++)t.deleteRenderbuffer(n.msaaRenderbuffers[s]);delete n.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:i}=this,{textureGPU:n,renderTarget:s}=i.get(e);this.deallocateRenderBuffers(s),t.deleteTexture(n),i.delete(e)}copyTextureToTexture(e,t,i=null,n=null,s=0){const{gl:r,backend:a}=this,{state:l}=this.backend,{textureGPU:c,glTextureType:h,glType:u,glFormat:d}=a.get(t);let f,p,g,m,y,x;i!==null?(f=i.max.x-i.min.x,p=i.max.y-i.min.y,g=i.min.x,m=i.min.y):(f=e.image.width,p=e.image.height,g=0,m=0),n!==null?(y=n.x,x=n.y):(y=0,x=0),l.bindTexture(h,c),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment);const _=r.getParameter(r.UNPACK_ROW_LENGTH),v=r.getParameter(r.UNPACK_IMAGE_HEIGHT),E=r.getParameter(r.UNPACK_SKIP_PIXELS),M=r.getParameter(r.UNPACK_SKIP_ROWS),b=r.getParameter(r.UNPACK_SKIP_IMAGES),A=e.isCompressedTexture?e.mipmaps[s]:e.image;r.pixelStorei(r.UNPACK_ROW_LENGTH,A.width),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,A.height),r.pixelStorei(r.UNPACK_SKIP_PIXELS,g),r.pixelStorei(r.UNPACK_SKIP_ROWS,m),e.isDataTexture?r.texSubImage2D(r.TEXTURE_2D,s,y,x,f,p,d,u,A.data):e.isCompressedTexture?r.compressedTexSubImage2D(r.TEXTURE_2D,s,y,x,A.width,A.height,d,A.data):r.texSubImage2D(r.TEXTURE_2D,s,y,x,f,p,d,u,A),r.pixelStorei(r.UNPACK_ROW_LENGTH,_),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,v),r.pixelStorei(r.UNPACK_SKIP_PIXELS,E),r.pixelStorei(r.UNPACK_SKIP_ROWS,M),r.pixelStorei(r.UNPACK_SKIP_IMAGES,b),s===0&&t.generateMipmaps&&r.generateMipmap(r.TEXTURE_2D),l.unbindTexture()}copyFramebufferToTexture(e,t,i){const{gl:n}=this,{state:s}=this.backend,{textureGPU:r}=this.backend.get(e),{x:a,y:l,z:c,w:h}=i,u=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(u){const f=a!==0||l!==0;let p,g;if(e.isDepthTexture===!0?(p=n.DEPTH_BUFFER_BIT,g=n.DEPTH_ATTACHMENT,t.stencil&&(p|=n.STENCIL_BUFFER_BIT)):(p=n.COLOR_BUFFER_BIT,g=n.COLOR_ATTACHMENT0),f){const m=this.backend.get(t.renderTarget),y=m.framebuffers[t.getCacheKey()],x=m.msaaFrameBuffer;s.bindFramebuffer(n.DRAW_FRAMEBUFFER,y),s.bindFramebuffer(n.READ_FRAMEBUFFER,x);const _=d-l-h;n.blitFramebuffer(a,_,a+c,_+h,a,_,a+c,_+h,p,n.NEAREST),s.bindFramebuffer(n.READ_FRAMEBUFFER,y),s.bindTexture(n.TEXTURE_2D,r),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,_,c,h),s.unbindTexture()}else{const m=n.createFramebuffer();s.bindFramebuffer(n.DRAW_FRAMEBUFFER,m),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,g,n.TEXTURE_2D,r,0),n.blitFramebuffer(0,0,c,h,0,0,c,h,p,n.NEAREST),n.deleteFramebuffer(m)}}else s.bindTexture(n.TEXTURE_2D,r),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,d-h-l,c,h),s.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:i}=this,n=t.renderTarget,{samples:s,depthTexture:r,depthBuffer:a,stencilBuffer:l,width:c,height:h}=n;if(i.bindRenderbuffer(i.RENDERBUFFER,e),a&&!l){let u=i.DEPTH_COMPONENT24;s>0?(r&&r.isDepthTexture&&r.type===i.FLOAT&&(u=i.DEPTH_COMPONENT32F),i.renderbufferStorageMultisample(i.RENDERBUFFER,s,u,c,h)):i.renderbufferStorage(i.RENDERBUFFER,u,c,h),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,e)}else a&&l&&(s>0?i.renderbufferStorageMultisample(i.RENDERBUFFER,s,i.DEPTH24_STENCIL8,c,h):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,c,h),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,i,n,s,r){const{backend:a,gl:l}=this,{textureGPU:c,glFormat:h,glType:u}=this.backend.get(e),d=l.createFramebuffer();l.bindFramebuffer(l.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?l.TEXTURE_CUBE_MAP_POSITIVE_X+r:l.TEXTURE_2D;l.framebufferTexture2D(l.READ_FRAMEBUFFER,l.COLOR_ATTACHMENT0,f,c,0);const p=this._getTypedArrayType(u),g=this._getBytesPerTexel(u,h),y=n*s*g,x=l.createBuffer();l.bindBuffer(l.PIXEL_PACK_BUFFER,x),l.bufferData(l.PIXEL_PACK_BUFFER,y,l.STREAM_READ),l.readPixels(t,i,n,s,h,u,0),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const _=new p(y/p.BYTES_PER_ELEMENT);return l.bindBuffer(l.PIXEL_PACK_BUFFER,x),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,_),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),l.deleteFramebuffer(d),_}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:i}=this;let n=0;if(e===i.UNSIGNED_BYTE&&(n=1),(e===i.UNSIGNED_SHORT_4_4_4_4||e===i.UNSIGNED_SHORT_5_5_5_1||e===i.UNSIGNED_SHORT_5_6_5||e===i.UNSIGNED_SHORT||e===i.HALF_FLOAT)&&(n=2),(e===i.UNSIGNED_INT||e===i.FLOAT)&&(n=4),t===i.RGBA)return n*4;if(t===i.RGB)return n*3;if(t===i.ALPHA)return n}}class MG{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class TG{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const i=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const US={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class wG{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:i,mode:n,object:s,type:r,info:a,index:l}=this;l!==0?i.drawElements(n,t,r,e):i.drawArrays(n,e,t),a.update(s,t,n,1)}renderInstances(e,t,i){const{gl:n,mode:s,type:r,index:a,object:l,info:c}=this;i!==0&&(a!==0?n.drawElementsInstanced(s,t,r,e,i):n.drawArraysInstanced(s,e,t,i),c.update(l,t,s,i))}renderMultiDraw(e,t,i){const{extensions:n,mode:s,object:r,info:a}=this;if(i===0)return;const l=n.get("WEBGL_multi_draw");if(l===null)for(let c=0;c<i;c++)this.render(e[c],t[c]);else{this.index!==0?l.multiDrawElementsWEBGL(s,t,0,this.type,e,0,i):l.multiDrawArraysWEBGL(s,e,0,t,0,i);let c=0;for(let h=0;h<i;h++)c+=t[h];a.update(r,c,s,1)}}renderMultiDrawInstances(e,t,i,n){const{extensions:s,mode:r,object:a,info:l}=this;if(i===0)return;const c=s.get("WEBGL_multi_draw");if(c===null)for(let h=0;h<i;h++)this.renderInstances(e[h],t[h],n[h]);else{this.index!==0?c.multiDrawElementsInstancedWEBGL(r,t,0,this.type,e,0,n,0,i):c.multiDrawArraysInstancedWEBGL(r,e,0,t,0,n,0,i);let h=0;for(let u=0;u<i;u++)h+=t[u];for(let u=0;u<n.length;u++)l.update(a,h,r,n[u])}}}class FS extends NA{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,i=t.context!==void 0?t.context:e.domElement.getContext("webgl2");this.gl=i,this.extensions=new MG(this),this.capabilities=new TG(this),this.attributeUtils=new _G(this),this.textureUtils=new bG(this),this.bufferRenderer=new wG(this),this.state=new vG(this),this.utils=new SG(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=t.trackTimestamp===!0,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._currentContext=null}get coordinateSystem(){return Wn}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning){t.queryQueue||(t.queryQueue=[]),t.queryQueue.push(e);return}t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),t.activeQuery!==null&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const i=t.queryQueue.shift();this.initTimestampQuery(i)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const i=this.get(e);i.gpuQueries||(i.gpuQueries=[]);for(let n=0;n<i.gpuQueries.length;n++){const s=i.gpuQueries[n],r=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT_AVAILABLE),a=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(r&&!a){const l=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT),c=Number(l)/1e6;this.gl.deleteQuery(s.query),i.gpuQueries.splice(n,1),n--,this.renderer.info.updateTimestamp(t,c)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,i=this.get(e);if(this.initTimestampQuery(e),i.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:a,height:l}=e.scissorValue;t.scissor(s,e.height-l-r,a,l)}const n=e.occlusionQueryCount;n>0&&(i.currentOcclusionQueries=i.occlusionQueries,i.currentOcclusionQueryObjects=i.occlusionQueryObjects,i.lastOcclusionObject=null,i.occlusionQueries=new Array(n),i.occlusionQueryObjects=new Array(n),i.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:i}=this,n=this.get(e),s=n.previousContext,r=e.occlusionQueryCount;r>0&&(r>n.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let l=0;l<a.length;l++){const c=a[l];c.generateMipmaps&&this.generateMipmaps(c)}if(this._currentContext=s,e.textures!==null&&e.renderTarget){const l=this.get(e.renderTarget),{samples:c}=e.renderTarget;if(c>0){const h=l.framebuffers[e.getCacheKey()],u=t.COLOR_BUFFER_BIT,d=l.msaaFrameBuffer,f=e.textures;i.bindFramebuffer(t.READ_FRAMEBUFFER,d),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,h);for(let p=0;p<f.length;p++)if(e.scissor){const{x:g,y:m,width:y,height:x}=e.scissorValue,_=e.height-x-m;t.blitFramebuffer(g,_,g+y,_+x,g,_,g+y,_+x,u,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,l.invalidationArray,g,_,y,x)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,u,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,l.invalidationArray)}}s!==null&&(this._setFramebuffer(s),s.viewport?this.updateViewport(s):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const s=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let l=0;for(let c=0;c<i.length;c++){const h=i[c];h!==null&&r.getQueryParameter(h,r.QUERY_RESULT_AVAILABLE)&&(r.getQueryParameter(h,r.QUERY_RESULT)>0&&s.add(n[c]),i[c]=null,r.deleteQuery(h),l++)}l<i.length?requestAnimationFrame(a):t.occluded=s};a()}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}updateViewport(e){const t=this.gl,{x:i,y:n,width:s,height:r}=e.viewportValue;t.viewport(i,e.height-r-n,s,r)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,i,n=null,s=!0){const{gl:r}=this;n===null&&(n={textures:null,clearColorValue:this.getClearColor()});let a=0;if(e&&(a|=r.COLOR_BUFFER_BIT),t&&(a|=r.DEPTH_BUFFER_BIT),i&&(a|=r.STENCIL_BUFFER_BIT),a!==0){const l=n.clearColorValue||this.getClearColor();if(l.r*=l.a,l.g*=l.a,l.b*=l.a,t&&this.state.setDepthMask(!0),n.textures===null)r.clearColor(l.r,l.g,l.b,l.a),r.clear(a);else{if(s&&this._setFramebuffer(n),e)for(let c=0;c<n.textures.length;c++)r.clearBufferfv(r.COLOR,c,[l.r,l.g,l.b,l.a]);t&&i?r.clearBufferfi(r.DEPTH_STENCIL,0,1,0):t?r.clearBufferfv(r.DEPTH,0,[1]):i&&r.clearBufferiv(r.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:i}=this;t.bindFramebuffer(i.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,i,n){const{state:s,gl:r}=this;this.discard||(r.enable(r.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:l,attributes:c}=this.get(n),h=this._getVaoKey(null,c),u=this.vaoCache[h];u===void 0?this._createVao(null,c):r.bindVertexArray(u),s.useProgram(a),this._bindUniforms(i);const d=this._getTransformFeedback(l);r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,d),r.beginTransformFeedback(r.POINTS),c[0].isStorageInstancedBufferAttribute?r.drawArraysInstanced(r.POINTS,0,1,t.count):r.drawArrays(r.POINTS,0,t.count),r.endTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null);for(let f=0;f<l.length;f++){const p=l[f];p.pbo&&this.textureUtils.copyBufferToTexture(p.transformBuffer,p.pbo),p.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e)}draw(e){const{object:t,pipeline:i,material:n,context:s}=e,{programGPU:r}=this.get(i),{gl:a,state:l}=this,c=this.get(s),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());const u=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(n,u),l.useProgram(r);let d=e.staticVao;if(d===void 0){const _=this._getVaoKey(e.getIndex(),e.getAttributes());if(d=this.vaoCache[_],d===void 0){let v;({vaoGPU:d,staticVao:v}=this._createVao(e.getIndex(),e.getAttributes())),v&&(e.staticVao=d)}}a.bindVertexArray(d);const f=e.getIndex(),p=c.lastOcclusionObject;if(p!==t&&p!==void 0){if(p!==null&&p.occlusionTest===!0&&(a.endQuery(a.ANY_SAMPLES_PASSED),c.occlusionQueryIndex++),t.occlusionTest===!0){const _=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,_),c.occlusionQueries[c.occlusionQueryIndex]=_,c.occlusionQueryObjects[c.occlusionQueryIndex]=t}c.lastOcclusionObject=t}const g=this.bufferRenderer;t.isPoints?g.mode=a.POINTS:t.isLineSegments?g.mode=a.LINES:t.isLine?g.mode=a.LINE_STRIP:t.isLineLoop?g.mode=a.LINE_LOOP:n.wireframe===!0?(l.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),g.mode=a.LINES):g.mode=a.TRIANGLES;const{vertexCount:m,instanceCount:y}=h;let{firstVertex:x}=h;if(g.object=t,f!==null){x*=f.array.BYTES_PER_ELEMENT;const _=this.get(f);g.index=f.count,g.type=_.type}else g.index=0;t.isBatchedMesh?t._multiDrawInstances!==null?g.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?g.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):oD("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):y>1?g.renderInstances(x,m,y):g.render(x,m),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,i,n,s,r){return this.textureUtils.copyTextureToBuffer(e,t,i,n,s,r)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new gG(e,t)}createProgram(e){const t=this.gl,{stage:i,code:n}=e,s=i==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(s,n),t.compileShader(s),this.set(e,{shaderGPU:s})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const i=this.gl,n=e.pipeline,{fragmentProgram:s,vertexProgram:r}=n,a=i.createProgram(),l=this.get(s).shaderGPU,c=this.get(r).shaderGPU;if(i.attachShader(a,l),i.attachShader(a,c),i.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:l,vertexShader:c}),t!==null&&this.parallel){const h=new Promise(u=>{const d=this.parallel,f=()=>{i.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,n),u()):requestAnimationFrame(f)};f()});t.push(h);return}this._completeCompile(e,n)}_handleSource(e,t){const i=e.split(`
`),n=[],s=Math.max(t-6,0),r=Math.min(t+6,i.length);for(let a=s;a<r;a++){const l=a+1;n.push(`${l===t?">":" "} ${l}: ${i[a]}`)}return n.join(`
`)}_getShaderErrors(e,t,i){const n=e.getShaderParameter(t,e.COMPILE_STATUS),s=e.getShaderInfoLog(t).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const a=parseInt(r[1]);return i.toUpperCase()+`

`+s+`

`+this._handleSource(e.getShaderSource(t),a)}else return s}_logProgramError(e,t,i){if(this.renderer.debug.checkShaderErrors){const n=this.gl,s=n.getProgramInfoLog(e).trim();if(n.getProgramParameter(e,n.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(n,e,i,t);else{const r=this._getShaderErrors(n,i,"vertex"),a=this._getShaderErrors(n,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(e,n.VALIDATE_STATUS)+`

Program Info Log: `+s+`
`+r+`
`+a)}else s!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",s)}}_completeCompile(e,t){const{state:i,gl:n}=this,s=this.get(t),{programGPU:r,fragmentShader:a,vertexShader:l}=s;n.getProgramParameter(r,n.LINK_STATUS)===!1&&this._logProgramError(r,a,l),i.useProgram(r);const c=e.getBindings();this._setupBindings(c,r),this.set(t,{programGPU:r})}createComputePipeline(e,t){const{state:i,gl:n}=this,s={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(s);const{computeProgram:r}=e,a=n.createProgram(),l=this.get(s).shaderGPU,c=this.get(r).shaderGPU,h=r.transforms,u=[],d=[];for(let m=0;m<h.length;m++){const y=h[m];u.push(y.varyingName),d.push(y.attributeNode)}n.attachShader(a,l),n.attachShader(a,c),n.transformFeedbackVaryings(a,u,n.SEPARATE_ATTRIBS),n.linkProgram(a),n.getProgramParameter(a,n.LINK_STATUS)===!1&&this._logProgramError(a,l,c),i.useProgram(a),this.createBindings(null,t),this._setupBindings(t,a);const f=r.attributes,p=[],g=[];for(let m=0;m<f.length;m++){const y=f[m].node.attribute;p.push(y),this.has(y)||this.attributeUtils.createAttribute(y,n.ARRAY_BUFFER)}for(let m=0;m<d.length;m++){const y=d[m].attribute;this.has(y)||this.attributeUtils.createAttribute(y,n.ARRAY_BUFFER);const x=this.get(y);g.push(x)}this.set(e,{programGPU:a,transformBuffers:g,attributes:p})}createBindings(e,t){this.updateBindings(e,t)}updateBindings(e,t){if(!e)return;const{gl:i}=this,n=this.get(t),s=this.get(e);n.textureIndex===void 0&&(n.textureIndex=0),s.textureIndex===void 0?s.textureIndex=n.textureIndex:n.textureIndex=s.textureIndex;let r=0;for(const a of e.bindings)if(a.isUniformsGroup||a.isUniformBuffer){const l=a.buffer,c=i.createBuffer();i.bindBuffer(i.UNIFORM_BUFFER,c),i.bufferData(i.UNIFORM_BUFFER,l,i.DYNAMIC_DRAW),this.set(a,{index:e.index*2+r++,bufferGPU:c})}else if(a.isSampledTexture){const{textureGPU:l,glTextureType:c}=this.get(a.texture);this.set(a,{index:n.textureIndex++,textureGPU:l,glTextureType:c})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const n=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(US).filter(n=>US[n]===e),i=this.extensions;for(let n=0;n<t.length;n++)if(i.has(t[n]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,i,n){this.textureUtils.copyTextureToTexture(e,t,i,n)}copyFramebufferToTexture(e,t,i){this.textureUtils.copyFramebufferToTexture(e,t,i)}_setFramebuffer(e){const{gl:t,state:i}=this;let n=null;if(e.textures!==null){const s=e.renderTarget,r=this.get(s),{samples:a,depthBuffer:l,stencilBuffer:c}=s,h=s.isWebGLCubeRenderTarget===!0;let u=r.msaaFrameBuffer,d=r.depthRenderbuffer;const f=bA(e);let p;if(h?(r.cubeFramebuffers||(r.cubeFramebuffers={}),p=r.cubeFramebuffers[f]):(r.framebuffers||(r.framebuffers={}),p=r.framebuffers[f]),p===void 0){p=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,p);const g=e.textures;if(h){r.cubeFramebuffers[f]=p;const{textureGPU:m}=this.get(g[0]),y=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+y,m,0)}else{r.framebuffers[f]=p;for(let m=0;m<g.length;m++){const y=g[m],x=this.get(y);x.renderTarget=e.renderTarget;const _=t.COLOR_ATTACHMENT0+m;t.framebufferTexture2D(t.FRAMEBUFFER,_,t.TEXTURE_2D,x.textureGPU,0)}i.drawBuffers(e,p)}if(e.depthTexture!==null){const m=this.get(e.depthTexture),y=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTexture2D(t.FRAMEBUFFER,y,t.TEXTURE_2D,m.textureGPU,0)}}if(a>0){if(u===void 0){const g=[];u=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,u);const m=[],y=e.textures;for(let x=0;x<y.length;x++){if(m[x]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,m[x]),g.push(t.COLOR_ATTACHMENT0+x),l){const E=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;g.push(E)}const _=e.textures[x],v=this.get(_);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,v.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+x,t.RENDERBUFFER,m[x])}if(r.msaaFrameBuffer=u,r.msaaRenderbuffers=m,d===void 0){d=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(d,e),r.depthRenderbuffer=d;const x=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;g.push(x)}r.invalidationArray=g}n=r.msaaFrameBuffer}else n=p}i.bindFramebuffer(t.FRAMEBUFFER,n)}_getVaoKey(e,t){let i=[];if(e!==null){const n=this.get(e);i+=":"+n.id}for(let n=0;n<t.length;n++){const s=this.get(t[n]);i+=":"+s.id}return i}_createVao(e,t){const{gl:i}=this,n=i.createVertexArray();let s="",r=!0;if(i.bindVertexArray(n),e!==null){const a=this.get(e);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,a.bufferGPU),s+=":"+a.id}for(let a=0;a<t.length;a++){const l=t[a],c=this.get(l);s+=":"+c.id,i.bindBuffer(i.ARRAY_BUFFER,c.bufferGPU),i.enableVertexAttribArray(a),(l.isStorageBufferAttribute||l.isStorageInstancedBufferAttribute)&&(r=!1);let h,u;l.isInterleavedBufferAttribute===!0?(h=l.data.stride*c.bytesPerElement,u=l.offset*c.bytesPerElement):(h=0,u=0),c.isInteger?i.vertexAttribIPointer(a,l.itemSize,c.type,h,u):i.vertexAttribPointer(a,l.itemSize,c.type,l.normalized,h,u),l.isInstancedBufferAttribute&&!l.isInterleavedBufferAttribute?i.vertexAttribDivisor(a,l.meshPerAttribute):l.isInterleavedBufferAttribute&&l.data.isInstancedInterleavedBuffer&&i.vertexAttribDivisor(a,l.data.meshPerAttribute)}return i.bindBuffer(i.ARRAY_BUFFER,null),this.vaoCache[s]=n,{vaoGPU:n,staticVao:r}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let i=this.transformFeedbackCache[t];if(i!==void 0)return i;const{gl:n}=this;i=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,i);for(let s=0;s<e.length;s++){const r=e[s];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,s,r.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=i,i}_setupBindings(e,t){const i=this.gl;for(const n of e)for(const s of n.bindings){const a=this.get(s).index;if(s.isUniformsGroup||s.isUniformBuffer){const l=i.getUniformBlockIndex(t,s.name);i.uniformBlockBinding(t,l,a)}else if(s.isSampledTexture){const l=i.getUniformLocation(t,s.name);i.uniform1i(l,a)}}}_bindUniforms(e){const{gl:t,state:i}=this;for(const n of e)for(const s of n.bindings){const r=this.get(s),a=r.index;s.isUniformsGroup||s.isUniformBuffer?i.bindBufferBase(t.UNIFORM_BUFFER,a,r.bufferGPU):s.isSampledTexture&&i.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+a)}}}class AG extends Jx{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class EG extends AG{constructor(e,t,i){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i}update(){this.texture=this.textureNode.value}}class RG extends TA{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let CG=0;class NG extends RG{constructor(e,t){super("StorageBuffer_"+CG++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:_y.Storage,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class PG extends Or{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:df.Linear}),this.flipYSampler=e.createSampler({minFilter:df.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:i}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:n})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ka.TriangleStrip,stripIndexFormat:nl.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ka.TriangleStrip,stripIndexFormat:nl.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,i=0){const n=t.format,{width:s,height:r}=t.size,a=this.getTransferPipeline(n),l=this.getFlipYPipeline(n),c=this.device.createTexture({size:{width:s,height:r,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),h=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:i}),u=c.createView({baseMipLevel:0,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,g,m)=>{const y=p.getBindGroupLayout(0),x=this.device.createBindGroup({layout:y,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:g}]}),_=d.beginRenderPass({colorAttachments:[{view:m,loadOp:ei.Clear,storeOp:Mi.Store,clearValue:[0,0,0,0]}]});_.setPipeline(p),_.setBindGroup(0,x),_.draw(4,1,0,0),_.end()};f(a,h,u),f(l,u,h),this.device.queue.submit([d.finish()]),c.destroy()}generateMipmaps(e,t,i=0){const n=this.get(e);n.useCount===void 0&&(n.useCount=0,n.layers=[]);const s=n.layers[i]||this._mipmapCreateBundles(e,t,i),r=this.device.createCommandEncoder({});this._mipmapRunBundles(r,s),this.device.queue.submit([r.finish()]),n.useCount!==0&&(n.layers[i]=s),n.useCount++}_mipmapCreateBundles(e,t,i){const n=this.getTransferPipeline(t.format),s=n.getBindGroupLayout(0);let r=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:i});const a=[];for(let l=1;l<t.mipLevelCount;l++){const c=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:r}]}),h=e.createView({baseMipLevel:l,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:i}),u={colorAttachments:[{view:h,loadOp:ei.Clear,storeOp:Mi.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(n),d.setBindGroup(0,c),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:u}),r=h}return a}_mipmapRunBundles(e,t){const i=t.length;for(let n=0;n<i;n++){const s=t[n],r=e.beginRenderPass(s.passDescriptor);r.executeBundles(s.renderBundles),r.end()}}}const IG={[ET]:"never",[yx]:"less",[RT]:"equal",[CT]:"less-equal",[NT]:"greater",[IT]:"greater-equal",[LT]:"always",[PT]:"not-equal"},LG=[0,1,3,2,4,5];class DG{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new oh,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,i=t.device,n=t.get(e),s={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:e.anisotropy};e.isDepthTexture&&e.compareFunction!==null&&(s.compare=IG[e.compareFunction]),n.sampler=i.createSampler(s)}createDefaultTexture(e){let t;const i=Sy(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(i):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(i),this.backend.get(e).texture=t}createTexture(e,t={}){const i=this.backend,n=i.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:s,height:r,depth:a,levels:l}=t,c=this._getDimension(e),h=e.internalFormat||t.format||Sy(e,i.device);n.format=h;let u=t.sampleCount!==void 0?t.sampleCount:1;u=i.utils.getSampleCount(u);const d=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:u;let f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(f|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(f|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:s,height:r,depthOrArrayLayers:a},mipLevelCount:l,sampleCount:d,dimension:c,format:h,usage:f};if(e.isVideoTexture){const g=e.source.data,m=new VideoFrame(g);p.size.width=m.displayWidth,p.size.height=m.displayHeight,m.close(),n.externalTexture=g}else{if(h===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);n.texture=i.device.createTexture(p)}if(e.isRenderTargetTexture&&u>1&&!e.isMultisampleRenderTargetTexture){const g=Object.assign({},p);g.label=g.label+"-msaa",g.sampleCount=u,n.msaaTexture=i.device.createTexture(g)}n.initialized=!0,n.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,i=t.get(e);i.texture.destroy(),i.msaaTexture!==void 0&&i.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const i=this.backend.get(e);delete i.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let i=0;i<6;i++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,i);else{const i=e.image.depth||1;for(let n=0;n<i;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:i}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:i,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const i=this.backend,{width:n,height:s}=i.getDrawingBufferSize(),r=this.depthTexture,a=i.get(r).texture;let l,c;if(t?(l=el,c=ih):e&&(l=So,c=wi),a!==void 0){if(r.image.width===n&&r.image.height===s&&r.format===l&&r.type===c)return a;this.destroyTexture(r)}return r.name="depthBuffer",r.format=l,r.type=c,r.image.width=n,r.image.height=s,this.createTexture(r,{sampleCount:i.utils.getSampleCount(i.renderer.samples),width:n,height:s}),i.get(r).texture}updateTexture(e,t){const i=this.backend.get(e),{textureDescriptorGPU:n}=i;if(!(e.isRenderTargetTexture||n===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,i.texture,n,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let s=0;s<t.image.depth;s++)this._copyBufferToTexture(t.image,i.texture,n,s,e.flipY,s);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,i.texture,n);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,i.texture,n,e.flipY);else if(e.isVideoTexture){const s=e.source.data;i.externalTexture=s}else this._copyImageToTexture(t.image,i.texture,n,0,e.flipY);i.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,i,n,s,r){const a=this.backend.device,l=this.backend.get(e),c=l.texture,h=l.textureDescriptorGPU.format,u=this._getBytesPerTexel(h);let d=n*u;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:n*s*u,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:c,origin:{x:t,y:i,z:r}},{buffer:f,bytesPerRow:d},{width:n,height:s});const g=this._getTypedArrayType(h);a.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const m=f.getMappedRange();return new g(m)}_isEnvironmentTexture(e){const t=e.mapping;return t===eh||t===th||t===Ro||t===Qa}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const i=new Yi;i.minFilter=Ri,i.magFilter=Ri,this.createTexture(i,{width:1,height:1,format:e}),this.defaultTexture[e]=t=i}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const i=new vx;i.minFilter=Ri,i.magFilter=Ri,this.createTexture(i,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=i}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,i,n){for(let s=0;s<6;s++){const r=e[s],a=n===!0?LG[s]:s;r.isDataTexture?this._copyBufferToTexture(r.image,t,i,a,n):this._copyImageToTexture(r,t,i,a,n)}}_copyImageToTexture(e,t,i,n,s){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,i,n)}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new PG(this.backend.device)),e}_generateMipmaps(e,t,i=0){this._getPassUtils().generateMipmaps(e,t,i)}_flipY(e,t,i=0){this._getPassUtils().flipY(e,t,i)}_copyBufferToTexture(e,t,i,n,s,r=0){const a=this.backend.device,l=e.data,c=this._getBytesPerTexel(i.format),h=e.width*c;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},l,{offset:e.width*e.height*c*r,bytesPerRow:h},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,i,n)}_copyCompressedBufferToTexture(e,t,i){const n=this.backend.device,s=this._getBlockData(i.format),r=i.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const l=e[a],c=l.width,h=l.height,u=r?i.size.depthOrArrayLayers:1,d=Math.ceil(c/s.width)*s.byteLength,f=d*Math.ceil(h/s.height);for(let p=0;p<u;p++)n.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:p}},l.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(h/s.height)},{width:Math.ceil(c/s.width)*s.width,height:Math.ceil(h/s.height)*s.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===I.BC1RGBAUnorm||e===I.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===I.BC2RGBAUnorm||e===I.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===I.BC3RGBAUnorm||e===I.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===I.BC4RUnorm||e===I.BC4RSNorm)return{byteLength:8,width:4,height:4};if(e===I.BC5RGUnorm||e===I.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===I.BC6HRGBUFloat||e===I.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===I.BC7RGBAUnorm||e===I.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===I.ETC2RGB8Unorm||e===I.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===I.ETC2RGB8A1Unorm||e===I.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===I.ETC2RGBA8Unorm||e===I.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===I.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===I.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===I.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===I.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===I.ASTC4x4Unorm||e===I.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===I.ASTC5x4Unorm||e===I.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===I.ASTC5x5Unorm||e===I.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===I.ASTC6x5Unorm||e===I.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===I.ASTC6x6Unorm||e===I.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===I.ASTC8x5Unorm||e===I.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===I.ASTC8x6Unorm||e===I.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===I.ASTC8x8Unorm||e===I.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===I.ASTC10x5Unorm||e===I.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===I.ASTC10x6Unorm||e===I.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===I.ASTC10x8Unorm||e===I.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===I.ASTC10x10Unorm||e===I.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===I.ASTC12x10Unorm||e===I.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===I.ASTC12x12Unorm||e===I.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=ng.ClampToEdge;return e===Jd?t=ng.Repeat:e===Qd&&(t=ng.MirrorRepeat),t}_convertFilterMode(e){let t=df.Linear;return(e===Ri||e===Fg||e===Ha)&&(t=df.Nearest),t}_getBytesPerTexel(e){if(e===I.R8Unorm||e===I.R8Snorm||e===I.R8Uint||e===I.R8Sint)return 1;if(e===I.R16Uint||e===I.R16Sint||e===I.R16Float||e===I.RG8Unorm||e===I.RG8Snorm||e===I.RG8Uint||e===I.RG8Sint)return 2;if(e===I.R32Uint||e===I.R32Sint||e===I.R32Float||e===I.RG16Uint||e===I.RG16Sint||e===I.RG16Float||e===I.RGBA8Unorm||e===I.RGBA8UnormSRGB||e===I.RGBA8Snorm||e===I.RGBA8Uint||e===I.RGBA8Sint||e===I.BGRA8Unorm||e===I.BGRA8UnormSRGB||e===I.RGB9E5UFloat||e===I.RGB10A2Unorm||e===I.RG11B10UFloat||e===I.Depth32Float||e===I.Depth24Plus||e===I.Depth24PlusStencil8||e===I.Depth32FloatStencil8)return 4;if(e===I.RG32Uint||e===I.RG32Sint||e===I.RG32Float||e===I.RGBA16Uint||e===I.RGBA16Sint||e===I.RGBA16Float)return 8;if(e===I.RGBA32Uint||e===I.RGBA32Sint||e===I.RGBA32Float)return 16}_getTypedArrayType(e){if(e===I.R8Uint)return Uint8Array;if(e===I.R8Sint)return Int8Array;if(e===I.R8Unorm)return Uint8Array;if(e===I.R8Snorm)return Int8Array;if(e===I.RG8Uint)return Uint8Array;if(e===I.RG8Sint)return Int8Array;if(e===I.RG8Unorm)return Uint8Array;if(e===I.RG8Snorm)return Int8Array;if(e===I.RGBA8Uint)return Uint8Array;if(e===I.RGBA8Sint)return Int8Array;if(e===I.RGBA8Unorm)return Uint8Array;if(e===I.RGBA8Snorm)return Int8Array;if(e===I.R16Uint)return Uint16Array;if(e===I.R16Sint)return Int16Array;if(e===I.RG16Uint)return Uint16Array;if(e===I.RG16Sint)return Int16Array;if(e===I.RGBA16Uint)return Uint16Array;if(e===I.RGBA16Sint)return Int16Array;if(e===I.R16Float||e===I.RG16Float||e===I.RGBA16Float)return Uint16Array;if(e===I.R32Uint)return Uint32Array;if(e===I.R32Sint)return Int32Array;if(e===I.R32Float)return Float32Array;if(e===I.RG32Uint)return Uint32Array;if(e===I.RG32Sint)return Int32Array;if(e===I.RG32Float)return Float32Array;if(e===I.RGBA32Uint)return Uint32Array;if(e===I.RGBA32Sint)return Int32Array;if(e===I.RGBA32Float)return Float32Array;if(e===I.BGRA8Unorm||e===I.BGRA8UnormSRGB)return Uint8Array;if(e===I.RGB10A2Unorm||e===I.RGB9E5UFloat||e===I.RG11B10UFloat)return Uint32Array;if(e===I.Depth32Float)return Float32Array;if(e===I.Depth24Plus||e===I.Depth24PlusStencil8)return Uint32Array;if(e===I.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=wS.ThreeD:t=wS.TwoD,t}}function Sy(o,e=null){const t=o.format,i=o.type,n=o.colorSpace;let s;if(o.isFramebufferTexture===!0&&o.type===Os)s=I.BGRA8Unorm;else if(o.isCompressedTexture===!0||o.isCompressedArrayTexture===!0)switch(t){case Zu:s=n===He?I.BC1RGBAUnormSRGB:I.BC1RGBAUnorm;break;case Ku:s=n===He?I.BC2RGBAUnormSRGB:I.BC2RGBAUnorm;break;case ju:s=n===He?I.BC3RGBAUnormSRGB:I.BC3RGBAUnorm;break;case Og:s=n===He?I.ETC2RGB8UnormSRGB:I.ETC2RGB8Unorm;break;case zg:s=n===He?I.ETC2RGBA8UnormSRGB:I.ETC2RGBA8Unorm;break;case kg:s=n===He?I.ASTC4x4UnormSRGB:I.ASTC4x4Unorm;break;case Gg:s=n===He?I.ASTC5x4UnormSRGB:I.ASTC5x4Unorm;break;case Vg:s=n===He?I.ASTC5x5UnormSRGB:I.ASTC5x5Unorm;break;case Hg:s=n===He?I.ASTC6x5UnormSRGB:I.ASTC6x5Unorm;break;case Wg:s=n===He?I.ASTC6x6UnormSRGB:I.ASTC6x6Unorm;break;case $g:s=n===He?I.ASTC8x5UnormSRGB:I.ASTC8x5Unorm;break;case Xg:s=n===He?I.ASTC8x6UnormSRGB:I.ASTC8x6Unorm;break;case qg:s=n===He?I.ASTC8x8UnormSRGB:I.ASTC8x8Unorm;break;case Yg:s=n===He?I.ASTC10x5UnormSRGB:I.ASTC10x5Unorm;break;case Zg:s=n===He?I.ASTC10x6UnormSRGB:I.ASTC10x6Unorm;break;case Kg:s=n===He?I.ASTC10x8UnormSRGB:I.ASTC10x8Unorm;break;case jg:s=n===He?I.ASTC10x10UnormSRGB:I.ASTC10x10Unorm;break;case Jg:s=n===He?I.ASTC12x10UnormSRGB:I.ASTC12x10Unorm;break;case Qg:s=n===He?I.ASTC12x12UnormSRGB:I.ASTC12x12Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case ll:switch(i){case nc:s=I.RGBA8Snorm;break;case sc:s=I.RGBA16Sint;break;case Ua:s=I.RGBA16Uint;break;case wi:s=I.RGBA32Uint;break;case Hi:s=I.RGBA32Sint;break;case Os:s=n===He?I.RGBA8UnormSRGB:I.RGBA8Unorm;break;case Vs:s=I.RGBA16Float;break;case _n:s=I.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",i)}break;case dx:switch(i){case wT:s=I.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",i)}break;case fx:switch(i){case nc:s=I.R8Snorm;break;case sc:s=I.R16Sint;break;case Ua:s=I.R16Uint;break;case wi:s=I.R32Uint;break;case Hi:s=I.R32Sint;break;case Os:s=I.R8Unorm;break;case Vs:s=I.R16Float;break;case _n:s=I.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",i)}break;case Pc:switch(i){case nc:s=I.RG8Snorm;break;case sc:s=I.RG16Sint;break;case Ua:s=I.RG16Uint;break;case wi:s=I.RG32Uint;break;case Hi:s=I.RG32Sint;break;case Os:s=I.RG8Unorm;break;case Vs:s=I.RG16Float;break;case _n:s=I.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",i)}break;case So:switch(i){case Ua:s=I.Depth16Unorm;break;case wi:s=I.Depth24Plus;break;case _n:s=I.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",i)}break;case el:switch(i){case ih:s=I.Depth24PlusStencil8;break;case _n:e&&e.features.has(vy.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),s=I.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",i)}break;case px:switch(i){case Hi:s=I.R32Sint;break;case wi:s=I.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",i)}break;case mx:switch(i){case Hi:s=I.RG32Sint;break;case wi:s=I.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",i)}break;case gx:switch(i){case Hi:s=I.RGBA32Sint;break;case wi:s=I.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",i)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return s}const UG=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,FG=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,BS={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},BG=o=>{o=o.trim();const e=o.match(UG);if(e!==null&&e.length===4){const t=e[2],i=[];let n=null;for(;(n=FG.exec(t))!==null;)i.push({name:n[1],type:n[2]});const s=[];for(let h=0;h<i.length;h++){const{name:u,type:d}=i[h];let f=d;f.startsWith("texture")&&(f=d.split("<")[0]),f=BS[f]||f,s.push(new qx(f,u))}const r=o.substring(e[0].length),a=e[3]||"void",l=e[1]!==void 0?e[1]:"";return{type:BS[a]||a,inputs:s,name:l,inputsCode:t,blockCode:r,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class OG extends Kx{constructor(e){const{type:t,inputs:i,name:n,inputsCode:s,blockCode:r,outputType:a}=BG(e);super(t,i,n),this.inputsCode=s,this.blockCode=r,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class zG extends SA{parseFunction(e){return new OG(e)}}const wa=self.GPUShaderStage,Ou={vertex:wa?wa.VERTEX:1,fragment:wa?wa.FRAGMENT:2,compute:wa?wa.COMPUTE:4},OS={instance:!0,swizzleAssign:!1,storageBuffer:!0},kG={"^^":"tsl_xor"},GG={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",imat2:"mat2x2<i32>",umat2:"mat2x2<u32>",bmat2:"mat2x2<bool>",mat3:"mat3x3<f32>",imat3:"mat3x3<i32>",umat3:"mat3x3<u32>",bmat3:"mat3x3<bool>",mat4:"mat4x4<f32>",imat4:"mat4x4<i32>",umat4:"mat4x4<u32>",bmat4:"mat4x4<bool>"},Rs={tsl_xor:new Di("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Di("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Di("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Di("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Di("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Di("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Di("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Di("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Di("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping:new Di(`
fn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {

	let uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );

	return ( ( uvScaled % dimension ) + dimension ) % dimension;

}
`),biquadraticTexture:new Di(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, level : i32 ) -> vec4f {

	let iRes = vec2i( textureDimensions( map, level ) );
	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2i( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2i( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2i( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2i( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},ql={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(Rs.pow_float=new Di("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),Rs.pow_vec2=new Di("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[Rs.pow_float]),Rs.pow_vec3=new Di("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[Rs.pow_float]),Rs.pow_vec4=new Di("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[Rs.pow_float]),ql.pow_float="tsl_pow_float",ql.pow_vec2="tsl_pow_vec2",ql.pow_vec3="tsl_pow_vec3",ql.pow_vec4="tsl_pow_vec4");let PA="";/Firefox/g.test(navigator.userAgent)!==!0&&(PA+=`diagnostic( off, derivative_uniformity );
`);class VG extends pA{constructor(e,t){super(e,t,new zG),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==Co}_generateTextureSample(e,t,i,n,s=this.shaderStage){return s==="fragment"?n?`textureSample( ${t}, ${t}_sampler, ${i}, ${n} )`:`textureSample( ${t}, ${t}_sampler, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i):this.generateTextureLod(e,t,i,"0")}_generateVideoSample(e,t,i=this.shaderStage){if(i==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${i} shader.`)}_generateTextureSampleLevel(e,t,i,n,s,r=this.shaderStage){return r==="fragment"&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${i}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i,n):this.generateTextureLod(e,t,i,n)}generateFilteredTexture(e,t,i,n="0"){return this._include("biquadraticTexture"),`tsl_biquadraticTexture( ${t}, ${i}, i32( ${n} ) )`}generateTextureLod(e,t,i,n="0"){this._include("repeatWrapping");const s=e.isMultisampleRenderTargetTexture===!0?`textureDimensions( ${t} )`:`textureDimensions( ${t}, 0 )`;return`textureLoad( ${t}, tsl_repeatWrapping( ${i}, ${s} ), i32( ${n} ) )`}generateTextureLoad(e,t,i,n,s="0u"){return n?`textureLoad( ${t}, ${i}, ${n}, ${s} )`:`textureLoad( ${t}, ${i}, ${s} )`}generateTextureStore(e,t,i,n){return`textureStore( ${t}, ${i}, ${n} )`}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===_n||e.isMultisampleRenderTargetTexture===!0}generateTexture(e,t,i,n,s=this.shaderStage){let r=null;return e.isVideoTexture===!0?r=this._generateVideoSample(t,i,s):this.isUnfilterable(e)?r=this.generateTextureLod(e,t,i,"0",n,s):r=this._generateTextureSample(e,t,i,n,s),r}generateTextureGrad(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${i},  ${n[0]}, ${n[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${r} shader.`)}generateTextureCompare(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}generateTextureLevel(e,t,i,n,s,r=this.shaderStage){let a=null;return e.isVideoTexture===!0?a=this._generateVideoSample(t,i,r):a=this._generateTextureSampleLevel(e,t,i,n,s,r),a}generateTextureBias(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${r} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const i=e.name,n=e.type;return n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"?i:n==="buffer"||n==="storageBuffer"?`NodeBuffer_${e.id}.${i}`:e.groupNode.name+"."+i}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=kG[e];return t!==void 0?(this._include(t),t):null}getStorageAccess(e){if(e.isStorageTextureNode)switch(e.access){case TS.ReadOnly:return"read";case TS.WriteOnly:return"write";default:return"read_write"}else switch(e.access){case _y.Storage:return"read_write";case _y.ReadOnlyStorage:return"read";default:return"write"}}getUniformFromNode(e,t,i,n=null){const s=super.getUniformFromNode(e,t,i,n),r=this.getDataFromNode(e,i,this.globalCache);if(r.uniformGPU===void 0){let a;const l=e.groupNode,c=l.name,h=this.getBindGroupArray(c,i);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let u=null;if(t==="texture"||t==="storageTexture"?u=new hp(s.name,s.node,l,e.access?e.access:null):t==="cubeTexture"?u=new RA(s.name,s.node,l,e.access?e.access:null):t==="texture3D"&&(u=new CA(s.name,s.node,l,e.access?e.access:null)),u.store=e.isStorageTextureNode===!0,u.setVisibility(Ou[i]),i==="fragment"&&this.isUnfilterable(e.value)===!1&&u.store===!1){const d=new EG(`${s.name}_sampler`,s.node,l);d.setVisibility(Ou[i]),h.push(d,u),a=[d,u]}else h.push(u),a=[u]}else if(t==="buffer"||t==="storageBuffer"){const u=t==="storageBuffer"?NG:AA,d=new u(e,l);d.setVisibility(Ou[i]),h.push(d),a=d}else{const u=this.uniformGroups[i]||(this.uniformGroups[i]={});let d=u[c];d===void 0&&(d=new EA(c,l),d.setVisibility(Ou[i]),u[c]=d,h.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}r.uniformGPU=a}return s}getBuiltin(e,t,i,n=this.shaderStage){const s=this.builtins[n]||(this.builtins[n]=new Map);return s.has(e)===!1&&s.set(e,{name:e,property:t,type:i}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const r of t.inputs)n.push(r.name+" : "+this.getType(r.type));let s=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {
${i.vars}
${i.code}
`;return i.result&&(s+=`	return ${i.result};
`),s+=`
}
`,s}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],i=this.directives[e];if(i!==void 0)for(const n of i)t.push(`enable ${n};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}getBuiltins(e){const t=[],i=this.builtins[e];if(i!==void 0)for(const{name:n,property:s,type:r}of i.values())t.push(`@builtin( ${n} ) ${s} : ${r}`);return t.join(`,
	`)}getScopedArray(e,t,i,n){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:i,bufferCount:n}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:i,scope:n,bufferType:s,bufferCount:r}of this.scopedArrays.values()){const a=this.getType(s);t.push(`var<${n}> ${i}: array< ${a}, ${r} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const i=this.getBuiltins("attribute");i&&t.push(i);const n=this.getAttributesArray();for(let s=0,r=n.length;s<r;s++){const a=n[s],l=a.name,c=this.getType(a.type);t.push(`@location( ${s} ) ${l} : ${c}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[],i=e.getMemberTypes();for(let s=0;s<i.length;s++){const r=i[s];t.push(`	@location( ${s} ) m${s} : ${r}<f32>`)}const n=this.getBuiltins("output");return n&&t.push("	"+n),t.join(`,
`)}getStructs(e){const t=[],i=this.structs[e];for(let n=0,s=i.length;n<s;n++){const r=i[n],a=r.name;let l=`struct ${a} {
`;l+=this.getStructMembers(r),l+=`
}`,t.push(l),t.push(`
var<private> output : ${a};

`)}return t.join(`

`)}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],i=this.vars[e];if(i!==void 0)for(const n of i)t.push(`	${this.getVar(n.type,n.name)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const s=this.varyings,r=this.vars[e];for(let a=0;a<s.length;a++){const l=s[a];if(l.needsInterpolation){let c=`@location( ${a} )`;/^(int|uint|ivec|uvec)/.test(l.type)&&(c+=" @interpolate( flat )"),t.push(`${c} ${l.name} : ${this.getType(l.type)}`)}else e==="vertex"&&r.includes(l)===!1&&r.push(l)}}const i=this.getBuiltins(e);i&&t.push(i);const n=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+n):n}getUniforms(e){const t=this.uniforms[e],i=[],n=[],s=[],r={};for(const l of t){const c=l.groupNode.name,h=this.bindingsIndexes[c];if(l.type==="texture"||l.type==="cubeTexture"||l.type==="storageTexture"||l.type==="texture3D"){const u=l.node.value;e==="fragment"&&this.isUnfilterable(u)===!1&&l.node.isStorageTextureNode!==!0&&(u.isDepthTexture===!0&&u.compareFunction!==null?i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${l.name}_sampler : sampler_comparison;`):i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${l.name}_sampler : sampler;`));let d,f="";if(u.isMultisampleRenderTargetTexture===!0&&(f="_multisampled"),u.isCubeTexture===!0)d="texture_cube<f32>";else if(u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(u.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(u.isVideoTexture===!0)d="texture_external";else if(u.isData3DTexture===!0)d="texture_3d<f32>";else if(l.node.isStorageTextureNode===!0){const p=Sy(u),g=this.getStorageAccess(l.node);d=`texture_storage_2d<${p}, ${g}>`}else{const p=this.getComponentTypeFromTexture(u).charAt(0);d=`texture${f}_2d<${p}32>`}i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${l.name} : ${d};`)}else if(l.type==="buffer"||l.type==="storageBuffer"){const u=l.node,d=this.getType(u.bufferType),f=u.bufferCount,p=f>0?", "+f:"",g=u.isAtomic?`atomic<${d}>`:`${d}`,m=`	${l.name} : array< ${g}${p} >
`,y=u.isStorageBufferNode?`storage, ${this.getStorageAccess(u)}`:"uniform";n.push(this._getWGSLStructBinding("NodeBuffer_"+u.id,m,y,h.binding++,h.group))}else{const u=this.getType(this.getVectorType(l.type)),d=l.groupNode.name;(r[d]||(r[d]={index:h.binding++,id:h.group,snippets:[]})).snippets.push(`	${l.name} : ${u}`)}}for(const l in r){const c=r[l];s.push(this._getWGSLStructBinding(l,c.snippets.join(`,
`),"uniform",c.index,c.id))}let a=i.join(`
`);return a+=n.join(`
`),a+=s.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const i=e[t];i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.structs=this.getStructs(t),i.vars=this.getVars(t),i.codes=this.getCodes(t),i.directives=this.getDirectives(t),i.scopedArrays=this.getScopedArrays(t);let n=`// code

`;n+=this.flowCode[t];const s=this.flowNodes[t],r=s[s.length-1],a=r.outputNode,l=a!==void 0&&a.isOutputStructNode===!0;for(const c of s){const h=this.getFlowData(c),u=c.name;if(u&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${u}
	`),n+=`${h.code}
	`,c===r&&t!=="compute"){if(n+=`// result

	`,t==="vertex")n+=`varyings.Vertex = ${h.result};`;else if(t==="fragment")if(l)i.returnType=a.nodeType,n+=`return ${h.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),i.returnType="OutputStruct",i.structs+=this._getWGSLStruct("OutputStruct",d),i.structs+=`
var<private> output : OutputStruct;

`,n+=`output.color = ${h.result};

	return output;`}}}i.flow=n}this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let i;return t!==null&&(i=this._getWGSLMethod(e+"_"+t)),i===void 0&&(i=this._getWGSLMethod(e)),i||e}getType(e){return GG[e]||e}isAvailable(e){let t=OS[e];return t===void 0&&(e==="float32Filterable"&&(t=this.renderer.hasFeature("float32-filterable")),OS[e]=t),t}_getWGSLMethod(e){return Rs[e]!==void 0&&this._include(e),ql[e]}_include(e){const t=Rs[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${PA}

// uniforms
${e.uniforms}

// structs
${e.structs}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,i,n=0,s=0){const r=e+"Struct";return`${this._getWGSLStruct(r,t)}
@binding( ${n} ) @group( ${s} )
var<${i}> ${e} : ${r};`}}class HG{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=I.Depth24PlusStencil8:e.depth&&(t=I.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return ka.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return ka.LineList;if(e.isLine)return ka.LineStrip;if(e.isMesh)return ka.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?I.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const WG=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),$G=new Map([[OT,["float16"]]]),XG=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class qG{constructor(e){this.backend=e}createAttribute(e,t){const i=this._getBufferAttribute(e),n=this.backend,s=n.get(i);let r=s.buffer;if(r===void 0){const a=n.device;let l=i.array;if(e.normalized===!1&&(l.constructor===Int16Array||l.constructor===Uint16Array)){const h=new Uint32Array(l.length);for(let u=0;u<l.length;u++)h[u]=l[u];l=h}if(i.array=l,(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&i.itemSize===3){l=new l.constructor(i.count*4);for(let h=0;h<i.count;h++)l.set(i.array.subarray(h*3,h*3+3),h*4);i.itemSize=4,i.array=l}const c=l.byteLength+(4-l.byteLength%4)%4;r=a.createBuffer({label:i.name,size:c,usage:t,mappedAtCreation:!0}),new l.constructor(r.getMappedRange()).set(l),r.unmap(),s.buffer=r}}updateAttribute(e){const t=this._getBufferAttribute(e),i=this.backend,n=i.device,s=i.get(t).buffer,r=t.array,a=t.updateRanges;if(a.length===0)n.queue.writeBuffer(s,0,r,0);else{for(let l=0,c=a.length;l<c;l++){const h=a[l];n.queue.writeBuffer(s,0,r,h.start*r.BYTES_PER_ELEMENT,h.count*r.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),i=new Map;for(let n=0;n<t.length;n++){const s=t[n],r=s.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(s);let l=i.get(a);if(l===void 0){let u,d;s.isInterleavedBufferAttribute===!0?(u=s.data.stride*r,d=s.data.isInstancedInterleavedBuffer?Pu.Instance:Pu.Vertex):(u=s.itemSize*r,d=s.isInstancedBufferAttribute?Pu.Instance:Pu.Vertex),s.normalized===!1&&(s.array.constructor===Int16Array||s.array.constructor===Uint16Array)&&(u=4),l={arrayStride:u,attributes:[],stepMode:d},i.set(a,l)}const c=this._getVertexFormat(s),h=s.isInterleavedBufferAttribute===!0?s.offset*r:0;l.attributes.push({shaderLocation:n,offset:h,format:c})}return Array.from(i.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,i=t.device,s=t.get(this._getBufferAttribute(e)).buffer,r=s.size,a=i.createBuffer({label:e.name,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),l=i.createCommandEncoder({});l.copyBufferToBuffer(s,0,a,0,r),a.unmap();const c=l.finish();return i.queue.submit([c]),await a.mapAsync(GPUMapMode.READ),a.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:i}=e,n=e.array.constructor,s=e.constructor;let r;if(t==1)r=XG.get(n);else{const l=($G.get(s)||WG.get(n))[i?1:0];if(l){const c=n.BYTES_PER_ELEMENT*t,u=Math.floor((c+3)/4)*4/n.BYTES_PER_ELEMENT;if(u%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");r=`${l}x${u}`}}return r||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),r}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class YG{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const i=this.backend.device,n=[];let s=0;for(const r of e.bindings){const a={binding:s++,visibility:r.visibility};if(r.isUniformBuffer||r.isStorageBuffer){const l={};r.isStorageBuffer&&(l.type=r.access),a.buffer=l}else if(r.isSampler){const l={};r.texture.isDepthTexture&&r.texture.compareFunction!==null&&(l.type="comparison"),a.sampler=l}else if(r.isSampledTexture&&r.texture.isVideoTexture)a.externalTexture={};else if(r.isSampledTexture&&r.store){const l=this.backend.get(r.texture).texture.format,c=r.access;a.storageTexture={format:l,access:c}}else if(r.isSampledTexture){const l={};if(r.texture.isMultisampleRenderTargetTexture===!0&&(l.multisampled=!0),r.texture.isDepthTexture)l.sampleType=kl.Depth;else if(r.texture.isDataTexture||r.texture.isDataArrayTexture||r.texture.isData3DTexture){const c=r.texture.type;c===Hi?l.sampleType=kl.SInt:c===wi?l.sampleType=kl.UInt:c===_n&&(this.backend.hasFeature("float32-filterable")?l.sampleType=kl.Float:l.sampleType=kl.UnfilterableFloat)}r.isSampledCubeTexture?l.viewDimension=Rn.Cube:r.texture.isDataArrayTexture||r.texture.isCompressedArrayTexture?l.viewDimension=Rn.TwoDArray:r.isSampledTexture3D&&(l.viewDimension=Rn.ThreeD),a.texture=l}else console.error(`WebGPUBindingUtils: Unsupported binding "${r}".`);n.push(a)}return i.createBindGroupLayout({entries:n})}createBindings(e){const{backend:t,bindGroupLayoutCache:i}=this,n=t.get(e);let s=i.get(e.bindingsReference);s===void 0&&(s=this.createBindingsLayout(e),i.set(e.bindingsReference,s));const r=this.createBindGroup(e,s);n.layout=s,n.group=r}updateBinding(e){const t=this.backend,i=t.device,n=e.buffer,s=t.get(e).buffer;i.queue.writeBuffer(s,0,n,0)}createBindGroup(e,t){const i=this.backend,n=i.device;let s=0;const r=[];for(const a of e.bindings){if(a.isUniformBuffer){const l=i.get(a);if(l.buffer===void 0){const c=a.byteLength,h=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,u=n.createBuffer({label:"bindingBuffer_"+a.name,size:c,usage:h});l.buffer=u}r.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isStorageBuffer){const l=i.get(a);if(l.buffer===void 0){const c=a.attribute;l.buffer=i.get(c).buffer}r.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isSampler){const l=i.get(a.texture);r.push({binding:s,resource:l.sampler})}else if(a.isSampledTexture){const l=i.get(a.texture);let c;if(l.externalTexture!==void 0)c=n.importExternalTexture({source:l.externalTexture});else{const h=a.store?1:l.texture.mipLevelCount,u=`view-${l.texture.width}-${l.texture.height}-${h}`;if(c=l[u],c===void 0){const d=sk.All;let f;a.isSampledCubeTexture?f=Rn.Cube:a.isSampledTexture3D?f=Rn.ThreeD:a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=Rn.TwoDArray:f=Rn.TwoD,c=l[u]=l.texture.createView({aspect:d,dimension:f,mipLevelCount:h})}}r.push({binding:s,resource:c})}s++}return n.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:r})}}class ZG{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:i,material:n,geometry:s,pipeline:r}=e,{vertexProgram:a,fragmentProgram:l}=r,c=this.backend,h=c.device,u=c.utils,d=c.get(r),f=[];for(const S of e.getBindings()){const T=c.get(S);f.push(T.layout)}const p=c.attributeUtils.createShaderVertexBuffers(e);let g;n.transparent===!0&&n.blending!==Ja&&(g=this._getBlending(n));let m={};n.stencilWrite===!0&&(m={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const y=this._getColorWriteMask(n),x=[];if(e.context.textures!==null){const S=e.context.textures;for(let T=0;T<S.length;T++){const B=u.getTextureFormatGPU(S[T]);x.push({format:B,blend:g,writeMask:y})}}else{const S=u.getCurrentColorFormat(e.context);x.push({format:S,blend:g,writeMask:y})}const _=c.get(a).module,v=c.get(l).module,E=this._getPrimitiveState(i,s,n),M=this._getDepthCompare(n),b=u.getCurrentDepthStencilFormat(e.context),A=this._getSampleCount(e.context),L={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},_,{buffers:p}),fragment:Object.assign({},v,{targets:x}),primitive:E,depthStencil:{format:b,depthWriteEnabled:n.depthWrite,depthCompare:M,stencilFront:m,stencilBack:{},stencilReadMask:n.stencilFuncMask,stencilWriteMask:n.stencilWriteMask},multisample:{count:A,alphaToCoverageEnabled:n.alphaToCoverage&&A>1},layout:h.createPipelineLayout({bindGroupLayouts:f})};if(t===null)d.pipeline=h.createRenderPipeline(L);else{const S=new Promise(T=>{h.createRenderPipelineAsync(L).then(B=>{d.pipeline=B,T()})});t.push(S)}}createBundleEncoder(e){const t=this.backend,{utils:i,device:n}=t,s=i.getCurrentDepthStencilFormat(e),r=i.getCurrentColorFormat(e),a=this._getSampleCount(e),l={label:"renderBundleEncoder",colorFormats:[r],depthStencilFormat:s,sampleCount:a};return n.createRenderBundleEncoder(l)}createComputePipeline(e,t){const i=this.backend,n=i.device,s=i.get(e.computeProgram).module,r=i.get(e),a=[];for(const l of t){const c=i.get(l);a.push(c.layout)}r.pipeline=n.createComputePipeline({compute:s,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,i;const n=e.blending,s=e.blendSrc,r=e.blendDst,a=e.blendEquation;if(n===rT){const l=e.blendSrcAlpha!==null?e.blendSrcAlpha:s,c=e.blendDstAlpha!==null?e.blendDstAlpha:r,h=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(r),operation:this._getBlendOperation(a)},i={srcFactor:this._getBlendFactor(l),dstFactor:this._getBlendFactor(c),operation:this._getBlendOperation(h)}}else{const l=e.premultipliedAlpha,c=(h,u,d,f)=>{t={srcFactor:h,dstFactor:u,operation:io.Add},i={srcFactor:d,dstFactor:f,operation:io.Add}};if(l)switch(n){case Ar:c(Je.One,Je.OneMinusSrcAlpha,Je.One,Je.OneMinusSrcAlpha);break;case Xd:c(Je.One,Je.One,Je.One,Je.One);break;case qd:c(Je.Zero,Je.OneMinusSrc,Je.Zero,Je.One);break;case Yd:c(Je.Zero,Je.Src,Je.Zero,Je.SrcAlpha);break}else switch(n){case Ar:c(Je.SrcAlpha,Je.OneMinusSrcAlpha,Je.One,Je.OneMinusSrcAlpha);break;case Xd:c(Je.SrcAlpha,Je.One,Je.SrcAlpha,Je.One);break;case qd:c(Je.Zero,Je.OneMinusSrc,Je.Zero,Je.One);break;case Yd:c(Je.Zero,Je.Src,Je.Zero,Je.Src);break}}if(t!==void 0&&i!==void 0)return{color:t,alpha:i};console.error("THREE.WebGPURenderer: Invalid blending: ",n)}_getBlendFactor(e){let t;switch(e){case lT:t=Je.Zero;break;case cT:t=Je.One;break;case hT:t=Je.Src;break;case uT:t=Je.OneMinusSrc;break;case Zd:t=Je.SrcAlpha;break;case Kd:t=Je.OneMinusSrcAlpha;break;case pT:t=Je.Dst;break;case mT:t=Je.OneMinusDstColor;break;case dT:t=Je.DstAlpha;break;case fT:t=Je.OneMinusDstAlpha;break;case gT:t=Je.SrcAlphaSaturated;break;case pz:t=Je.Constant;break;case mz:t=Je.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const i=e.stencilFunc;switch(i){case DL:t=bi.Never;break;case ty:t=bi.Always;break;case UL:t=bi.Less;break;case BL:t=bi.LessEqual;break;case FL:t=bi.Equal;break;case kL:t=bi.GreaterEqual;break;case OL:t=bi.Greater;break;case zL:t=bi.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",i)}return t}_getStencilOperation(e){let t;switch(e){case ro:t=yr.Keep;break;case EL:t=yr.Zero;break;case RL:t=yr.Replace;break;case LL:t=yr.Invert;break;case CL:t=yr.IncrementClamp;break;case NL:t=yr.DecrementClamp;break;case PL:t=yr.IncrementWrap;break;case IL:t=yr.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Mr:t=io.Add;break;case oT:t=io.Subtract;break;case aT:t=io.ReverseSubtract;break;case lL:t=io.Min;break;case cL:t=io.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,i){const n={},s=this.backend.utils;switch(n.topology=s.getPrimitiveTopology(e,i),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(n.stripIndexFormat=t.index.array instanceof Uint16Array?nl.Uint16:nl.Uint32),i.side){case Nc:n.frontFace=tg.CCW,n.cullMode=ig.Back;break;case Js:n.frontFace=tg.CCW,n.cullMode=ig.Front;break;case $d:n.frontFace=tg.CCW,n.cullMode=ig.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",i.side);break}return n}_getColorWriteMask(e){return e.colorWrite===!0?MS.All:MS.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=bi.Always;else{const i=e.depthFunc;switch(i){case yT:t=bi.Never;break;case xT:t=bi.Always;break;case _T:t=bi.Less;break;case jd:t=bi.LessEqual;break;case vT:t=bi.Equal;break;case ST:t=bi.GreaterEqual;break;case bT:t=bi.Greater;break;case MT:t=bi.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",i)}}return t}}class KG extends NA{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.trackTimestamp=e.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new HG(this),this.attributeUtils=new qG(this),this.bindingUtils=new YG(this),this.pipelineUtils=new ZG(this),this.textureUtils=new DG(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let i;if(t.device===void 0){const r={powerPreference:t.powerPreference},a=await navigator.gpu.requestAdapter(r);if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const l=Object.values(vy),c=[];for(const u of l)a.features.has(u)&&c.push(u);const h={requiredFeatures:c,requiredLimits:t.requiredLimits};i=await a.requestDevice(h)}else i=t.device;const n=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=i,this.context=n;const s=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(vy.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s}),this.updateSize()}get coordinateSystem(){return No}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const i=this.renderer;e={colorAttachments:[{view:null}],depthStencilAttachment:{view:this.textureUtils.getDepthBuffer(i.depth,i.stencil).createView()}};const n=e.colorAttachments[0];this.renderer.samples>0?n.view=this.colorBuffer.createView():n.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,i=this.get(t);let n=i.descriptors;if(n===void 0||i.width!==t.width||i.height!==t.height||i.activeMipmapLevel!==t.activeMipmapLevel||i.samples!==t.samples){n={},i.descriptors=n;const a=()=>{t.removeEventListener("dispose",a),this.delete(t)};t.addEventListener("dispose",a)}const s=e.getCacheKey();let r=n[s];if(r===void 0){const a=e.textures,l=[];for(let u=0;u<a.length;u++){const d=this.get(a[u]),f=d.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Rn.TwoD});let p,g;d.msaaTexture!==void 0?(p=d.msaaTexture.createView(),g=f):(p=f,g=void 0),l.push({view:p,resolveTarget:g,loadOp:ei.Load,storeOp:Mi.Store})}const h={view:this.get(e.depthTexture).texture.createView()};r={colorAttachments:l,depthStencilAttachment:h},n[s]=r,i.width=t.width,i.height=t.height,i.samples=t.samples,i.activeMipmapLevel=t.activeMipmapLevel}return r}beginRender(e){const t=this.get(e),i=this.device,n=e.occlusionQueryCount;let s;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,s=i.createQuerySet({type:"occlusion",count:n}),t.occlusionQuerySet=s,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);let r;e.textures===null?r=this._getDefaultRenderPassDescriptor():r=this._getRenderPassDescriptor(e),this.initTimestampQuery(e,r),r.occlusionQuerySet=s;const a=r.depthStencilAttachment;if(e.textures!==null){const h=r.colorAttachments;for(let u=0;u<h.length;u++){const d=h[u];e.clearColor?(d.clearValue=u===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=ei.Clear,d.storeOp=Mi.Store):(d.loadOp=ei.Load,d.storeOp=Mi.Store)}}else{const h=r.colorAttachments[0];e.clearColor?(h.clearValue=e.clearColorValue,h.loadOp=ei.Clear,h.storeOp=Mi.Store):(h.loadOp=ei.Load,h.storeOp=Mi.Store)}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=ei.Clear,a.depthStoreOp=Mi.Store):(a.depthLoadOp=ei.Load,a.depthStoreOp=Mi.Store)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=ei.Clear,a.stencilStoreOp=Mi.Store):(a.stencilLoadOp=ei.Load,a.stencilStoreOp=Mi.Store));const l=i.createCommandEncoder({label:"renderContext_"+e.id}),c=l.beginRenderPass(r);if(t.descriptor=r,t.encoder=l,t.currentPass=c,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:h,y:u,width:d,height:f}=e.scissorValue;c.setScissorRect(h,u,d,f)}}finishRender(e){const t=this.get(e),i=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),i>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),i>0){const n=i*8;let s=this.occludedResolveCache.get(n);s===void 0&&(s=this.device.createBuffer({size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(n,s));const r=this.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,i,s,0),t.encoder.copyBufferToBuffer(s,0,r,0,n),t.occlusionQueryBuffer=r,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const n=e.textures;for(let s=0;s<n.length;s++){const r=n[s];r.generateMipmaps===!0&&this.textureUtils.generateMipmaps(r)}}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const s=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await i.mapAsync(GPUMapMode.READ);const r=i.getMappedRange(),a=new BigUint64Array(r);for(let l=0;l<n.length;l++)a[l]!==BigInt(0)&&s.add(n[l]);i.destroy(),t.occluded=s}}updateViewport(e){const{currentPass:t}=this.get(e),{x:i,y:n,width:s,height:r,minDepth:a,maxDepth:l}=e.viewportValue;t.setViewport(i,n,s,r,a,l)}clear(e,t,i,n=null){const s=this.device,r=this.renderer;let a=[],l,c,h,u;if(e){const p=this.getClearColor();if(this.renderer.alpha===!0){const g=p.a;c={r:p.r*g,g:p.g*g,b:p.b*g,a:g}}else c={r:p.r,g:p.g,b:p.b,a:p.a}}if(n===null){h=r.depth,u=r.stencil;const p=this._getDefaultRenderPassDescriptor();if(e){a=p.colorAttachments;const g=a[0];g.clearValue=c,g.loadOp=ei.Clear,g.storeOp=Mi.Store}(h||u)&&(l=p.depthStencilAttachment)}else{if(h=n.depth,u=n.stencil,e)for(const p of n.textures){const g=this.get(p),m=g.texture.createView();let y,x;g.msaaTexture!==void 0?(y=g.msaaTexture.createView(),x=m):(y=m,x=void 0),a.push({view:y,resolveTarget:x,clearValue:c,loadOp:ei.Clear,storeOp:Mi.Store})}(h||u)&&(l={view:this.get(n.depthTexture).texture.createView()})}h&&(t?(l.depthLoadOp=ei.Clear,l.depthClearValue=r.getClearDepth(),l.depthStoreOp=Mi.Store):(l.depthLoadOp=ei.Load,l.depthStoreOp=Mi.Store)),u&&(i?(l.stencilLoadOp=ei.Clear,l.stencilClearValue=r.getClearStencil(),l.stencilStoreOp=Mi.Store):(l.stencilLoadOp=ei.Load,l.stencilStoreOp=Mi.Store));const d=s.createCommandEncoder({});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:l}).end(),s.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),i={};this.initTimestampQuery(e,i),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(i)}compute(e,t,i,n){const{passEncoderGPU:s}=this.get(e),r=this.get(n).pipeline;s.setPipeline(r);for(let h=0,u=i.length;h<u;h++){const d=i[h],f=this.get(d);s.setBindGroup(h,f.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,l=this.get(t);l.dispatchSize===void 0&&(l.dispatchSize={x:0,y:1,z:1});const{dispatchSize:c}=l;t.dispatchCount>a?(c.x=Math.min(t.dispatchCount,a),c.y=Math.ceil(t.dispatchCount/a)):c.x=t.dispatchCount,s.dispatchWorkgroups(c.x,c.y,c.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:i,context:n,pipeline:s}=e,r=e.getBindings(),a=this.get(n),l=this.get(s).pipeline,c=a.currentSets,h=a.currentPass,u=e.getDrawParameters();if(u===null)return;c.pipeline!==l&&(h.setPipeline(l),c.pipeline=l);const d=c.bindingGroups;for(let m=0,y=r.length;m<y;m++){const x=r[m],_=this.get(x);d[x.index]!==x.id&&(h.setBindGroup(x.index,_.group),d[x.index]=x.id)}const f=e.getIndex(),p=f!==null;if(p===!0&&c.index!==f){const m=this.get(f).buffer,y=f.array instanceof Uint16Array?nl.Uint16:nl.Uint32;h.setIndexBuffer(m,y),c.index=f}const g=e.getVertexBuffers();for(let m=0,y=g.length;m<y;m++){const x=g[m];if(c.attributes[m]!==x){const _=this.get(x).buffer;h.setVertexBuffer(m,_),c.attributes[m]=x}}if(a.occlusionQuerySet!==void 0){const m=a.lastOcclusionObject;m!==i&&(m!==null&&m.occlusionTest===!0&&(h.endOcclusionQuery(),a.occlusionQueryIndex++),i.occlusionTest===!0&&(h.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=i),a.lastOcclusionObject=i)}if(i.isBatchedMesh===!0){const m=i._multiDrawStarts,y=i._multiDrawCounts,x=i._multiDrawCount,_=i._multiDrawInstances,v=p?f.array.BYTES_PER_ELEMENT:1;for(let E=0;E<x;E++){const M=_?_[E]:1,b=M>1?0:E;h.drawIndexed(y[E],M,m[E]/v,0,b)}}else if(p===!0){const{vertexCount:m,instanceCount:y,firstVertex:x}=u;h.drawIndexed(m,y,x,0,0),t.update(i,m,y)}else{const{vertexCount:m,instanceCount:y,firstVertex:x}=u;h.draw(m,y,x,0),t.update(i,m,y)}}needsRenderUpdate(e){const t=this.get(e),{object:i,material:n}=e,s=this.utils,r=s.getSampleCountRenderContext(e.context),a=s.getCurrentColorSpace(e.context),l=s.getCurrentColorFormat(e.context),c=s.getCurrentDepthStencilFormat(e.context),h=s.getPrimitiveTopology(i,n);let u=!1;return(t.material!==n||t.materialVersion!==n.version||t.transparent!==n.transparent||t.blending!==n.blending||t.premultipliedAlpha!==n.premultipliedAlpha||t.blendSrc!==n.blendSrc||t.blendDst!==n.blendDst||t.blendEquation!==n.blendEquation||t.blendSrcAlpha!==n.blendSrcAlpha||t.blendDstAlpha!==n.blendDstAlpha||t.blendEquationAlpha!==n.blendEquationAlpha||t.colorWrite!==n.colorWrite||t.depthWrite!==n.depthWrite||t.depthTest!==n.depthTest||t.depthFunc!==n.depthFunc||t.stencilWrite!==n.stencilWrite||t.stencilFunc!==n.stencilFunc||t.stencilFail!==n.stencilFail||t.stencilZFail!==n.stencilZFail||t.stencilZPass!==n.stencilZPass||t.stencilFuncMask!==n.stencilFuncMask||t.stencilWriteMask!==n.stencilWriteMask||t.side!==n.side||t.alphaToCoverage!==n.alphaToCoverage||t.sampleCount!==r||t.colorSpace!==a||t.colorFormat!==l||t.depthStencilFormat!==c||t.primitiveTopology!==h||t.clippingContextCacheKey!==e.clippingContext.cacheKey)&&(t.material=n,t.materialVersion=n.version,t.transparent=n.transparent,t.blending=n.blending,t.premultipliedAlpha=n.premultipliedAlpha,t.blendSrc=n.blendSrc,t.blendDst=n.blendDst,t.blendEquation=n.blendEquation,t.blendSrcAlpha=n.blendSrcAlpha,t.blendDstAlpha=n.blendDstAlpha,t.blendEquationAlpha=n.blendEquationAlpha,t.colorWrite=n.colorWrite,t.depthWrite=n.depthWrite,t.depthTest=n.depthTest,t.depthFunc=n.depthFunc,t.stencilWrite=n.stencilWrite,t.stencilFunc=n.stencilFunc,t.stencilFail=n.stencilFail,t.stencilZFail=n.stencilZFail,t.stencilZPass=n.stencilZPass,t.stencilFuncMask=n.stencilFuncMask,t.stencilWriteMask=n.stencilWriteMask,t.side=n.side,t.alphaToCoverage=n.alphaToCoverage,t.sampleCount=r,t.colorSpace=a,t.colorFormat=l,t.depthStencilFormat=c,t.primitiveTopology=h,t.clippingContextCacheKey=e.clippingContext.cacheKey,u=!0),u}getRenderCacheKey(e){const{object:t,material:i}=e,n=this.utils,s=e.context;return[i.transparent,i.blending,i.premultipliedAlpha,i.blendSrc,i.blendDst,i.blendEquation,i.blendSrcAlpha,i.blendDstAlpha,i.blendEquationAlpha,i.colorWrite,i.depthWrite,i.depthTest,i.depthFunc,i.stencilWrite,i.stencilFunc,i.stencilFail,i.stencilZFail,i.stencilZPass,i.stencilFuncMask,i.stencilWriteMask,i.side,n.getSampleCountRenderContext(s),n.getCurrentColorSpace(s),n.getCurrentColorFormat(s),n.getCurrentDepthStencilFormat(s),n.getPrimitiveTopology(t,i),e.clippingContext.cacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,i,n,s,r){return this.textureUtils.copyTextureToBuffer(e,t,i,n,s,r)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const i=this.get(e);if(!i.timeStampQuerySet){const n=this.device.createQuerySet({type:"timestamp",count:2});Object.assign(t,{timestampWrites:{querySet:n,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}}),i.timeStampQuerySet=n}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const i=this.get(e),n=2*BigInt64Array.BYTES_PER_ELEMENT;i.currentTimestampQueryBuffers===void 0&&(i.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:s,resultBuffer:r,isMappingPending:a}=i.currentTimestampQueryBuffers;a!==!0&&(t.resolveQuerySet(i.timeStampQuerySet,0,2,s,0),t.copyBufferToBuffer(s,0,r,0,n))}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const i=this.get(e);if(i.currentTimestampQueryBuffers===void 0)return;const{resultBuffer:n,isMappingPending:s}=i.currentTimestampQueryBuffers;s!==!0&&(i.currentTimestampQueryBuffers.isMappingPending=!0,n.mapAsync(GPUMapMode.READ).then(()=>{const r=new BigUint64Array(n.getMappedRange()),a=Number(r[1]-r[0])/1e6;this.renderer.info.updateTimestamp(t,a),n.unmap(),i.currentTimestampQueryBuffers.isMappingPending=!1}))}createNodeBuilder(e,t){return new VG(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const i=this.get(e),s=i.currentPass.finish();this.get(t).bundleGPU=s,i.currentSets=i._currentSets,i.currentPass=i._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,i=null,n=null,s=0){let r=0,a=0,l=0,c=0,h=0,u=0,d=e.image.width,f=e.image.height;i!==null&&(c=i.x,h=i.y,u=i.z||0,d=i.width,f=i.height),n!==null&&(r=n.x,a=n.y,l=n.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,m=this.get(t).texture;p.copyTextureToTexture({texture:g,mipLevel:s,origin:{x:c,y:h,z:u}},{texture:m,mipLevel:s,origin:{x:r,y:a,z:l}},[d,f,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t,i){const n=this.get(t),{encoder:s,descriptor:r}=n;let a=null;t.renderTarget?e.isDepthTexture?a=this.get(t.depthTexture).texture:a=this.get(t.textures[0]).texture:e.isDepthTexture?a=this.textureUtils.getDepthBuffer(t.depth,t.stencil):a=this.context.getCurrentTexture();const l=this.get(e).texture;if(a.format!==l.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",a.format,l.format);return}n.currentPass.end(),s.copyTextureToTexture({texture:a,origin:{x:i.x,y:i.y,z:0}},{texture:l},[i.z,i.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e);for(let c=0;c<r.colorAttachments.length;c++)r.colorAttachments[c].loadOp=ei.Load;t.depth&&(r.depthStencilAttachment.depthLoadOp=ei.Load),t.stencil&&(r.depthStencilAttachment.stencilLoadOp=ei.Load),n.currentPass=s.beginRenderPass(r),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}}class jG extends tw{constructor(e,t,i,n,s,r){super(e,t,i,n,s,r),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class JG extends MA{constructor(){super(),this.addMaterial(oO,ZT),this.addMaterial(hA,Tx),this.addMaterial($O,YT),this.addMaterial(ZO,KT),this.addMaterial(Q3,Yf),this.addMaterial(sO,JT),this.addMaterial(q3,jT),this.addMaterial(QO,QT),this.addMaterial(V3,bx),this.addMaterial(W3,ew),this.addMaterial(tz,XT),this.addMaterial(rz,WT),this.addMaterial(lz,qT),this.addLight(Lk,zD),this.addLight(Dk,GD),this.addLight(Uk,HD),this.addLight(vA,tw),this.addLight(Bk,VD),this.addLight(Ok,FD),this.addLight(zk,$D),this.addLight(Fk,jG),this.addToneMapping(Sk,dL),this.addToneMapping(bk,fL),this.addToneMapping(Mk,pL),this.addToneMapping(wk,mL),this.addToneMapping(Ck,gL),this.addToneMapping(Nk,yL),this.addColorSpace(vk,cy(Pn,He)),this.addColorSpace(_k,cy(He,Pn))}}class rH extends rG{constructor(e={}){let t;e.forceWebGL?t=FS:(t=KG,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new FS(e)));const i=new t(e);super(i,e),this.nodes.library=new JG,this.isWebGPURenderer=!0}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Xf}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Xf);const ug={type:"change"},Qx={type:"start"},e0={type:"end"},zS=1e-6,bt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},zu=new Y,xr=new Y,QG=new R,ku=new R,dg=new R,Aa=new li,kS=new R,Gu=new R,fg=new R,Vu=new R;class oH extends $f{constructor(e,t=null){super(e,t),this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:vn.ROTATE,MIDDLE:vn.DOLLY,RIGHT:vn.PAN},this.state=bt.NONE,this.keyState=bt.NONE,this.target=new R,this._lastPosition=new R,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new R,this._movePrev=new Y,this._moveCurr=new Y,this._lastAxis=new R,this._zoomStart=new Y,this._zoomEnd=new Y,this._panStart=new Y,this._panEnd=new Y,this._pointers=[],this._pointerPositions={},this._onPointerMove=tV.bind(this),this._onPointerDown=eV.bind(this),this._onPointerUp=iV.bind(this),this._onPointerCancel=nV.bind(this),this._onContextMenu=hV.bind(this),this._onMouseWheel=cV.bind(this),this._onKeyDown=rV.bind(this),this._onKeyUp=sV.bind(this),this._onTouchStart=uV.bind(this),this._onTouchMove=dV.bind(this),this._onTouchEnd=fV.bind(this),this._onMouseDown=oV.bind(this),this._onMouseMove=aV.bind(this),this._onMouseUp=lV.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(),this.handleResize()),this.update()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>zS&&(this.dispatchEvent(ug),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>zS||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(ug),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=bt.NONE,this.keyState=bt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(ug),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(xr.copy(this._panEnd).sub(this._panStart),xr.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;xr.x*=e,xr.y*=t}xr.multiplyScalar(this._eye.length()*this.panSpeed),ku.copy(this._eye).cross(this.object.up).setLength(xr.x),ku.add(QG.copy(this.object.up).setLength(xr.y)),this.object.position.add(ku),this.target.add(ku),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(xr.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){Vu.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=Vu.length();e?(this._eye.copy(this.object.position).sub(this.target),kS.copy(this._eye).normalize(),Gu.copy(this.object.up).normalize(),fg.crossVectors(Gu,kS).normalize(),Gu.setLength(this._moveCurr.y-this._movePrev.y),fg.setLength(this._moveCurr.x-this._movePrev.x),Vu.copy(Gu.add(fg)),dg.crossVectors(Vu,this._eye).normalize(),e*=this.rotateSpeed,Aa.setFromAxisAngle(dg,e),this._eye.applyQuaternion(Aa),this.object.up.applyQuaternion(Aa),this._lastAxis.copy(dg),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),Aa.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(Aa),this.object.up.applyQuaternion(Aa)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===bt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=vc.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=vc.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return zu.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),zu}_getMouseOnCircle(e,t){return zu.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),zu}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Y,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function eV(o){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(o.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(o),o.pointerType==="touch"?this._onTouchStart(o):this._onMouseDown(o))}function tV(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchMove(o):this._onMouseMove(o))}function iV(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchEnd(o):this._onMouseUp(),this._removePointer(o),this._pointers.length===0&&(this.domElement.releasePointerCapture(o.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function nV(o){this._removePointer(o)}function sV(){this.enabled!==!1&&(this.keyState=bt.NONE,window.addEventListener("keydown",this._onKeyDown))}function rV(o){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===bt.NONE&&(o.code===this.keys[bt.ROTATE]&&!this.noRotate?this.keyState=bt.ROTATE:o.code===this.keys[bt.ZOOM]&&!this.noZoom?this.keyState=bt.ZOOM:o.code===this.keys[bt.PAN]&&!this.noPan&&(this.keyState=bt.PAN)))}function oV(o){let e;switch(o.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case vn.DOLLY:this.state=bt.ZOOM;break;case vn.ROTATE:this.state=bt.ROTATE;break;case vn.PAN:this.state=bt.PAN;break;default:this.state=bt.NONE}const t=this.keyState!==bt.NONE?this.keyState:this.state;t===bt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY)),this._movePrev.copy(this._moveCurr)):t===bt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(o.pageX,o.pageY)),this._zoomEnd.copy(this._zoomStart)):t===bt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(o.pageX,o.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(Qx)}function aV(o){const e=this.keyState!==bt.NONE?this.keyState:this.state;e===bt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY))):e===bt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(o.pageX,o.pageY)):e===bt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(o.pageX,o.pageY))}function lV(){this.state=bt.NONE,this.dispatchEvent(e0)}function cV(o){if(this.enabled!==!1&&this.noZoom!==!0){switch(o.preventDefault(),o.deltaMode){case 2:this._zoomStart.y-=o.deltaY*.025;break;case 1:this._zoomStart.y-=o.deltaY*.01;break;default:this._zoomStart.y-=o.deltaY*25e-5;break}this.dispatchEvent(Qx),this.dispatchEvent(e0)}}function hV(o){this.enabled!==!1&&o.preventDefault()}function uV(o){switch(this._trackPointer(o),this._pointers.length){case 1:this.state=bt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=bt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const i=(this._pointers[0].pageX+this._pointers[1].pageX)/2,n=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(i,n)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(Qx)}function dV(o){switch(this._trackPointer(o),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY));break;default:const e=this._getSecondPointerPosition(o),t=o.pageX-e.x,i=o.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+i*i);const n=(o.pageX+e.x)/2,s=(o.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(n,s));break}}function fV(o){switch(this._pointers.length){case 0:this.state=bt.NONE;break;case 1:this.state=bt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=bt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==o.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(e0)}const GS={type:"change"},t0={type:"start"},IA={type:"end"},Hu=new Uo,VS=new Cs,pV=Math.cos(70*vc.DEG2RAD),ai=new R,Ji=2*Math.PI,It={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},pg=1e-6;class aH extends $f{constructor(e,t=null){super(e,t),this.state=It.NONE,this.enabled=!0,this.target=new R,this.cursor=new R,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:vn.ROTATE,MIDDLE:vn.DOLLY,RIGHT:vn.PAN},this.touches={ONE:ho.ROTATE,TWO:ho.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new R,this._lastQuaternion=new li,this._lastTargetPosition=new R,this._quat=new li().setFromUnitVectors(e.up,new R(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Lg,this._sphericalDelta=new Lg,this._scale=1,this._panOffset=new R,this._rotateStart=new Y,this._rotateEnd=new Y,this._rotateDelta=new Y,this._panStart=new Y,this._panEnd=new Y,this._panDelta=new Y,this._dollyStart=new Y,this._dollyEnd=new Y,this._dollyDelta=new Y,this._dollyDirection=new R,this._mouse=new Y,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=gV.bind(this),this._onPointerDown=mV.bind(this),this._onPointerUp=yV.bind(this),this._onContextMenu=TV.bind(this),this._onMouseWheel=vV.bind(this),this._onKeyDown=SV.bind(this),this._onTouchStart=bV.bind(this),this._onTouchMove=MV.bind(this),this._onMouseDown=xV.bind(this),this._onMouseMove=_V.bind(this),this._interceptControlDown=wV.bind(this),this._interceptControlUp=AV.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(GS),this.update(),this.state=It.NONE}update(e=null){const t=this.object.position;ai.copy(t).sub(this.target),ai.applyQuaternion(this._quat),this._spherical.setFromVector3(ai),this.autoRotate&&this.state===It.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=Ji:i>Math.PI&&(i-=Ji),n<-Math.PI?n+=Ji:n>Math.PI&&(n-=Ji),i<=n?this._spherical.theta=Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const r=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=r!=this._spherical.radius}if(ai.setFromSpherical(this._spherical),ai.applyQuaternion(this._quatInverse),t.copy(this.target).add(ai),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let r=null;if(this.object.isPerspectiveCamera){const a=ai.length();r=this._clampDistance(a*this._scale);const l=a-r;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),s=!!l}else if(this.object.isOrthographicCamera){const a=new R(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=l!==this.object.zoom;const c=new R(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),r=ai.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;r!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(r).add(this.object.position):(Hu.origin.copy(this.object.position),Hu.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Hu.direction))<pV?this.object.lookAt(this.target):(VS.setFromNormalAndCoplanarPoint(this.object.up,this.target),Hu.intersectPlane(VS,this.target))))}else if(this.object.isOrthographicCamera){const r=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),r!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>pg||8*(1-this._lastQuaternion.dot(this.object.quaternion))>pg||this._lastTargetPosition.distanceToSquared(this.target)>pg?(this.dispatchEvent(GS),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?Ji/60*this.autoRotateSpeed*e:Ji/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){ai.setFromMatrixColumn(t,0),ai.multiplyScalar(-e),this._panOffset.add(ai)}_panUp(e,t){this.screenSpacePanning===!0?ai.setFromMatrixColumn(t,1):(ai.setFromMatrixColumn(t,0),ai.crossVectors(this.object.up,ai)),ai.multiplyScalar(e),this._panOffset.add(ai)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;ai.copy(n).sub(this.target);let s=ai.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/i.clientHeight,this.object.matrix),this._panUp(2*t*s/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=e-i.left,s=t-i.top,r=i.width,a=i.height;this._mouse.x=n/r*2-1,this._mouse.y=-(s/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Ji*this._rotateDelta.x/t.clientHeight),this._rotateUp(Ji*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateUp(Ji*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateUp(-Ji*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateLeft(Ji*this.rotateSpeed/this.domElement.clientHeight):this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateLeft(-Ji*this.rotateSpeed/this.domElement.clientHeight):this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(i,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,s=Math.sqrt(i*i+n*n);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),n=.5*(e.pageX+i.x),s=.5*(e.pageY+i.y);this._rotateEnd.set(n,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Ji*this._rotateDelta.x/t.clientHeight),this._rotateUp(Ji*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,s=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const r=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(r,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Y,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function mV(o){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(o.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(o)&&(this._addPointer(o),o.pointerType==="touch"?this._onTouchStart(o):this._onMouseDown(o)))}function gV(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchMove(o):this._onMouseMove(o))}function yV(o){switch(this._removePointer(o),this._pointers.length){case 0:this.domElement.releasePointerCapture(o.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(IA),this.state=It.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function xV(o){let e;switch(o.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case vn.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(o),this.state=It.DOLLY;break;case vn.ROTATE:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=It.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=It.ROTATE}break;case vn.PAN:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=It.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=It.PAN}break;default:this.state=It.NONE}this.state!==It.NONE&&this.dispatchEvent(t0)}function _V(o){switch(this.state){case It.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(o);break;case It.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(o);break;case It.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(o);break}}function vV(o){this.enabled===!1||this.enableZoom===!1||this.state!==It.NONE||(o.preventDefault(),this.dispatchEvent(t0),this._handleMouseWheel(this._customWheelEvent(o)),this.dispatchEvent(IA))}function SV(o){this.enabled===!1||this.enablePan===!1||this._handleKeyDown(o)}function bV(o){switch(this._trackPointer(o),this._pointers.length){case 1:switch(this.touches.ONE){case ho.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(o),this.state=It.TOUCH_ROTATE;break;case ho.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(o),this.state=It.TOUCH_PAN;break;default:this.state=It.NONE}break;case 2:switch(this.touches.TWO){case ho.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(o),this.state=It.TOUCH_DOLLY_PAN;break;case ho.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(o),this.state=It.TOUCH_DOLLY_ROTATE;break;default:this.state=It.NONE}break;default:this.state=It.NONE}this.state!==It.NONE&&this.dispatchEvent(t0)}function MV(o){switch(this._trackPointer(o),this.state){case It.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(o),this.update();break;case It.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(o),this.update();break;case It.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(o),this.update();break;case It.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(o),this.update();break;default:this.state=It.NONE}}function TV(o){this.enabled!==!1&&o.preventDefault()}function wV(o){o.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function AV(o){o.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const EV={type:"change"},HS=1e-6,WS=new li;class lH extends $f{constructor(e,t=null){super(e,t),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new R(0,0,0),this._rotationVector=new R(0,0,0),this._lastQuaternion=new li,this._lastPosition=new R,this._status=0,this._onKeyDown=RV.bind(this),this._onKeyUp=CV.bind(this),this._onPointerMove=PV.bind(this),this._onPointerDown=NV.bind(this),this._onPointerUp=IV.bind(this),this._onPointerCancel=LV.bind(this),this._onContextMenu=DV.bind(this),t!==null&&this.connect()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(e){if(this.enabled===!1)return;const t=this.object,i=e*this.movementSpeed,n=e*this.rollSpeed;t.translateX(this._moveVector.x*i),t.translateY(this._moveVector.y*i),t.translateZ(this._moveVector.z*i),WS.set(this._rotationVector.x*n,this._rotationVector.y*n,this._rotationVector.z*n,1).normalize(),t.quaternion.multiply(WS),(this._lastPosition.distanceToSquared(t.position)>HS||8*(1-this._lastQuaternion.dot(t.quaternion))>HS)&&(this.dispatchEvent(EV),this._lastQuaternion.copy(t.quaternion),this._lastPosition.copy(t.position))}_updateMovementVector(){const e=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-e+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function RV(o){if(!(o.altKey||this.enabled===!1)){switch(o.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function CV(o){if(this.enabled!==!1){switch(o.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function NV(o){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(o.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function PV(o){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const e=this._getContainerDimensions(),t=e.size[0]/2,i=e.size[1]/2;this._moveState.yawLeft=-(o.pageX-e.offset[0]-t)/t,this._moveState.pitchDown=(o.pageY-e.offset[1]-i)/i,this._updateRotationVector()}}function IV(o){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(o.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function LV(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function DV(o){this.enabled!==!1&&o.preventDefault()}const UV={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class up{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const FV=new qc(-1,1,1,-1,0,1);class BV extends ht{constructor(){super(),this.setAttribute("position",new Ie([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ie([0,2,0,0,2,0],2))}}const OV=new BV;class zV{constructor(e){this._mesh=new qt(OV,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,FV)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class kV extends up{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof sn?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Wc.clone(e.uniforms),this.material=new sn({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new zV(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class $S extends up{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){const n=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let r,a;this.inverse?(r=0,a=1):(r=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),s.buffers.stencil.setFunc(n.ALWAYS,r,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.color.setMask(!0),s.buffers.depth.setMask(!0),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(n.EQUAL,1,4294967295),s.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),s.buffers.stencil.setLocked(!0)}}class GV extends up{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class cH{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const i=e.getSize(new Y);this._width=i.width,this._height=i.height,t=new Ln(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Do}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new kV(UV),this.copyPass.material.blending=rs,this.clock=new lx}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let i=!1;for(let n=0,s=this.passes.length;n<s;n++){const r=this.passes[n];if(r.enabled!==!1){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(n),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),r.needsSwap){if(i){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}$S!==void 0&&(r instanceof $S?i=!0:r instanceof GV&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new Y);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(i,n),this.renderTarget2.setSize(i,n);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class hH extends up{constructor(e,t,i=null,n=null,s=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=s,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Ae}render(e,t,i){const n=e.autoClear;e.autoClear=!1;let s,r;this.overrideMaterial!==null&&(r=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(s=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(s),this.overrideMaterial!==null&&(this.scene.overrideMaterial=r),e.autoClear=n}}export{lx as $,lH as A,ht as B,Lf as C,ts as D,Xn as E,Ie as F,Ia as G,YP as H,oM as I,MI as J,mi as K,Zi as L,qt as M,go as N,Rt as O,Ai as P,Ky as Q,hH as R,Jy as S,iH as T,fs as U,R as V,rH as W,vn as X,li as Y,Lg as Z,eH as _,Hc as a,Qn as a$,ff as a0,Ab as a1,vg as a2,Eb as a3,Uo as a4,Cs as a5,qc as a6,ho as a7,ln as a8,Pg as a9,Yl as aA,Ca as aB,Cn as aC,dc as aD,fc as aE,$s as aF,Nn as aG,xi as aH,Ec as aI,Ac as aJ,Qc as aK,gi as aL,Jc as aM,dt as aN,cc as aO,$M as aP,By as aQ,lt as aR,Tf as aS,Xi as aT,cs as aU,YS as aV,ks as aW,xb as aX,wf as aY,OA as aZ,by as a_,Ys as aa,VM as ab,HM as ac,WM as ad,RM as ae,dM as af,Rr as ag,Q2 as ah,Yc as ai,ni as aj,ns as ak,uc as al,$y as am,Oi as an,ex as ao,yt as ap,uM as aq,pM as ar,mM as as,vc as at,Cf as au,Rc as av,Wy as aw,zd as ax,pi as ay,My as az,IM as b,j4 as b0,kM as b1,Ln as b2,Do as b3,ky as b4,en as b5,xI as b6,Q4 as b7,nH as c,J4 as d,Y as e,Ae as f,ps as g,CM as h,En as i,q2 as j,al as k,$e as l,xM as m,Zn as n,Cr as o,sn as p,Hf as q,tH as r,tL as s,sT as t,qi as u,xt as v,Ur as w,cH as x,oH as y,aH as z};
